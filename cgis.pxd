# This code was automatically generated by CWrap version 0.0.0

cdef extern from "grass/gis.h":

    ctypedef unsigned char __u_char

    ctypedef unsigned short __u_short

    ctypedef unsigned int __u_int

    ctypedef unsigned long __u_long

    ctypedef signed char __int8_t

    ctypedef unsigned char __uint8_t

    ctypedef short __int16_t

    ctypedef unsigned short __uint16_t

    ctypedef int __int32_t

    ctypedef unsigned int __uint32_t

    ctypedef long __int64_t

    ctypedef unsigned long __uint64_t

    ctypedef long __quad_t

    ctypedef unsigned long __u_quad_t

    ctypedef unsigned long __dev_t

    ctypedef unsigned int __uid_t

    ctypedef unsigned int __gid_t

    ctypedef unsigned long __ino_t

    ctypedef unsigned long __ino64_t

    ctypedef unsigned int __mode_t

    ctypedef unsigned long __nlink_t

    ctypedef long __off_t

    ctypedef long __off64_t

    ctypedef int __pid_t

    ctypedef struct __fsid_t:
        int __val[2]


    ctypedef long __clock_t

    ctypedef unsigned long __rlim_t

    ctypedef unsigned long __rlim64_t

    ctypedef unsigned int __id_t

    ctypedef long __time_t

    ctypedef unsigned int __useconds_t

    ctypedef long __suseconds_t

    ctypedef int __daddr_t

    ctypedef int __key_t

    ctypedef int __clockid_t

    ctypedef void *__timer_t

    ctypedef long __blksize_t

    ctypedef long __blkcnt_t

    ctypedef long __blkcnt64_t

    ctypedef unsigned long __fsblkcnt_t

    ctypedef unsigned long __fsblkcnt64_t

    ctypedef unsigned long __fsfilcnt_t

    ctypedef unsigned long __fsfilcnt64_t

    ctypedef long __fsword_t

    ctypedef long __ssize_t

    ctypedef long __syscall_slong_t

    ctypedef unsigned long __syscall_ulong_t

    ctypedef __off64_t __loff_t

    ctypedef __quad_t *__qaddr_t

    ctypedef char *__caddr_t

    ctypedef long __intptr_t

    ctypedef unsigned int __socklen_t

    cdef struct _IO_FILE:
        pass

    ctypedef _IO_FILE FILE

    ctypedef _IO_FILE __FILE

    cdef union ____mbstate_t___value:
        unsigned int __wch
        char __wchb[4]

    ctypedef ____mbstate_t___value ____mbstate_t___value_t

    ctypedef struct __mbstate_t:
        int __count
        ____mbstate_t___value_t __value


    ctypedef struct _G_fpos_t:
        __off_t __pos
        __mbstate_t __state


    ctypedef struct _G_fpos64_t:
        __off64_t __pos
        __mbstate_t __state


    cdef struct _IO_jump_t:
        pass

    cdef struct _IO_FILE:
        pass

    ctypedef void _IO_lock_t

    cdef struct _IO_marker:
        _IO_marker *_next
        _IO_FILE *_sbuf
        int _pos

    cdef enum __codecvt_result:
        __codecvt_ok
        __codecvt_partial
        __codecvt_error
        __codecvt_noconv

    cdef struct _IO_FILE:
        int _flags
        char *_IO_read_ptr
        char *_IO_read_end
        char *_IO_read_base
        char *_IO_write_base
        char *_IO_write_ptr
        char *_IO_write_end
        char *_IO_buf_base
        char *_IO_buf_end
        char *_IO_save_base
        char *_IO_backup_base
        char *_IO_save_end
        _IO_marker *_markers
        _IO_FILE *_chain
        int _fileno
        int _flags2
        __off_t _old_offset
        unsigned short _cur_column
        signed char _vtable_offset
        char _shortbuf[1]
        _IO_lock_t *_lock
        __off64_t _offset
        void *__pad1
        void *__pad2
        void *__pad3
        void *__pad4
        int __pad5
        int _mode
        char _unused2

    cdef struct _IO_FILE_plus:
        pass



    int __uflow(_IO_FILE *)

    int __overflow(_IO_FILE *, int)

    int _IO_getc(_IO_FILE *__fp)

    int _IO_putc(int __c, _IO_FILE *__fp)

    int _IO_feof(_IO_FILE *__fp)

    int _IO_ferror(_IO_FILE *__fp)

    int _IO_peekc_locked(_IO_FILE *__fp)

    void _IO_flockfile(_IO_FILE *)

    void _IO_funlockfile(_IO_FILE *)

    int _IO_ftrylockfile(_IO_FILE *)

    int _IO_vfscanf(_IO_FILE *, const char *, int __gnuc_va_list, int *)

    int _IO_vfprintf(_IO_FILE *, const char *, int __gnuc_va_list)

    __ssize_t _IO_padn(_IO_FILE *, int, __ssize_t)

    int _IO_sgetn(_IO_FILE *, void *, int size_t)

    __off64_t _IO_seekoff(_IO_FILE *, __off64_t, int, int)

    __off64_t _IO_seekpos(_IO_FILE *, __off64_t, int)

    void _IO_free_backup_area(_IO_FILE *)

    ctypedef int va_list

    ctypedef __off_t off_t

    ctypedef __ssize_t ssize_t

    ctypedef _G_fpos_t fpos_t

    _IO_FILE *stdin
    _IO_FILE *stdout
    _IO_FILE *stderr
    int remove(const char *__filename)

    int rename(const char *__old, const char *__new)

    int renameat(int __oldfd, const char *__old, int __newfd, const char *__new)

    FILE *tmpfile()

    char *tmpnam(char *__s)

    char *tmpnam_r(char *__s)

    char *tempnam(const char *__dir, const char *__pfx)

    int fclose(FILE *__stream)

    int fflush(FILE *__stream)

    int fflush_unlocked(FILE *__stream)

    FILE *fopen(const char *__filename, const char *__modes)

    FILE *freopen(const char *__filename, const char *__modes, FILE *__stream)

    FILE *fdopen(int __fd, const char *__modes)

    FILE *fmemopen(void *__s, int __len, const char *__modes)

    FILE *open_memstream(char **__bufloc, int *__sizeloc)

    void setbuf(FILE *__stream, char *__buf)

    int setvbuf(FILE *__stream, char *__buf, int __modes, int __n)

    void setbuffer(FILE *__stream, char *__buf, int __size)

    void setlinebuf(FILE *__stream)

    int fprintf(FILE *__stream, const char *__format)

    int printf(const char *__format)

    int sprintf(char *__s, const char *__format)

    int vdprintf(int __fd, const char *__fmt, int __arg)

    int dprintf(int __fd, const char *__fmt)

    int fscanf(FILE *__stream, const char *__format)

    int scanf(const char *__format)

    int sscanf(const char *__s, const char *__format)

    int fscanf(FILE *__stream, const char *__format)

    int scanf(const char *__format)

    int sscanf(const char *__s, const char *__format)

    int fgetc(FILE *__stream)

    int getc(FILE *__stream)

    int getchar()

    int getc_unlocked(FILE *__stream)

    int getchar_unlocked()

    int fgetc_unlocked(FILE *__stream)

    int fputc(int __c, FILE *__stream)

    int putc(int __c, FILE *__stream)

    int putchar(int __c)

    int fputc_unlocked(int __c, FILE *__stream)

    int putc_unlocked(int __c, FILE *__stream)

    int putchar_unlocked(int __c)

    int getw(FILE *__stream)

    int putw(int __w, FILE *__stream)

    char *fgets(char *__s, int __n, FILE *__stream)

    char *gets(char *__s)

    __ssize_t __getdelim(char **__lineptr, int *__n, int __delimiter, FILE *__stream)

    __ssize_t getdelim(char **__lineptr, int *__n, int __delimiter, FILE *__stream)

    __ssize_t getline(char **__lineptr, int *__n, FILE *__stream)

    int fputs(const char *__s, FILE *__stream)

    int puts(const char *__s)

    int ungetc(int __c, FILE *__stream)

    int fread(void *__ptr, int __size, int __n, FILE *__stream)

    int fwrite(const void *__ptr, int __size, int __n, FILE *__s)

    int fread_unlocked(void *__ptr, int __size, int __n, FILE *__stream)

    int fwrite_unlocked(const void *__ptr, int __size, int __n, FILE *__stream)

    int fseek(FILE *__stream, long __off, int __whence)

    long ftell(FILE *__stream)

    void rewind(FILE *__stream)

    int fseeko(FILE *__stream, __off_t __off, int __whence)

    __off_t ftello(FILE *__stream)

    int fgetpos(FILE *__stream, fpos_t *__pos)

    int fsetpos(FILE *__stream, const fpos_t *__pos)

    void clearerr(FILE *__stream)

    int feof(FILE *__stream)

    int ferror(FILE *__stream)

    void clearerr_unlocked(FILE *__stream)

    int feof_unlocked(FILE *__stream)

    int ferror_unlocked(FILE *__stream)

    void perror(const char *__s)

    int sys_nerr

    int fileno(FILE *__stream)

    int fileno_unlocked(FILE *__stream)

    FILE *popen(const char *__command, const char *__modes)

    int pclose(FILE *__stream)

    char *ctermid(char *__s)

    void flockfile(FILE *__stream)

    int ftrylockfile(FILE *__stream)

    void funlockfile(FILE *__stream)

    cdef struct stat:
        pass

    int datetime_is_between(int x, int a, int b)

    int datetime_error(int code, char *msg)

    int datetime_error_code()

    char *datetime_error_msg()

    void datetime_clear_error()

    int datetime_get_local_timezone(int *minutes)

    int datetime_days_in_month(int year, int month, int ad)

    int datetime_is_leap_year(int year, int ad)

    int datetime_days_in_year(int year, int ad)

    int datetime_in_interval_year_month(int x)

    int datetime_in_interval_day_second(int x)

    int datetime_is_valid_timezone(int minutes)

    void datetime_decompose_timezone(int tz, int *hours, int *minutes)

    const char *GRASS_copyright
    ctypedef enum STD_OPT:
        G_OPT_UNDEFINED
        G_OPT_DB_SQL
        G_OPT_DB_WHERE
        G_OPT_DB_TABLE
        G_OPT_DB_DRIVER
        G_OPT_DB_DATABASE
        G_OPT_DB_SCHEMA
        G_OPT_DB_COLUMN
        G_OPT_DB_COLUMNS
        G_OPT_DB_KEYCOLUMN
        G_OPT_I_GROUP
        G_OPT_I_SUBGROUP
        G_OPT_R_INPUT
        G_OPT_R_INPUTS
        G_OPT_R_OUTPUT
        G_OPT_R_MAP
        G_OPT_R_MAPS
        G_OPT_R_BASE
        G_OPT_R_COVER
        G_OPT_R_ELEV
        G_OPT_R_ELEVS
        G_OPT_R3_INPUT
        G_OPT_R3_INPUTS
        G_OPT_R3_OUTPUT
        G_OPT_R3_MAP
        G_OPT_R3_MAPS
        G_OPT_R3_TYPE
        G_OPT_R3_PRECISION
        G_OPT_R3_TILE_DIMENSION
        G_OPT_R3_COMPRESSION
        G_OPT_V_INPUT
        G_OPT_V_INPUTS
        G_OPT_V_OUTPUT
        G_OPT_V_MAP
        G_OPT_V_MAPS
        G_OPT_V_TYPE
        G_OPT_V3_TYPE
        G_OPT_V_FIELD
        G_OPT_V_FIELD_ALL
        G_OPT_V_CAT
        G_OPT_V_CATS
        G_OPT_V_ID
        G_OPT_V_IDS
        G_OPT_F_INPUT
        G_OPT_F_OUTPUT
        G_OPT_F_SEP
        G_OPT_C_FG
        G_OPT_C_BG
        G_OPT_M_UNITS
        G_OPT_M_DATATYPE
        G_OPT_M_MAPSET
        G_OPT_M_COORDS
        G_OPT_M_COLR
        G_OPT_M_DIR
        G_OPT_STDS_INPUT
        G_OPT_STDS_INPUTS
        G_OPT_STDS_OUTPUT
        G_OPT_STRDS_INPUT
        G_OPT_STRDS_INPUTS
        G_OPT_STRDS_OUTPUT
        G_OPT_STR3DS_INPUT
        G_OPT_STR3DS_INPUTS
        G_OPT_STR3DS_OUTPUT
        G_OPT_STVDS_INPUT
        G_OPT_STVDS_INPUTS
        G_OPT_STVDS_OUTPUT
        G_OPT_MAP_INPUT
        G_OPT_MAP_INPUTS
        G_OPT_STDS_TYPE
        G_OPT_MAP_TYPE
        G_OPT_T_TYPE
        G_OPT_T_WHERE
        G_OPT_T_SAMPLE


    ctypedef enum STD_FLG:
        G_FLG_UNDEFINED
        G_FLG_V_TABLE
        G_FLG_V_TOPO


    cdef enum:
        G_ELEMENT_RASTER
        G_ELEMENT_RASTER3D
        G_ELEMENT_VECTOR
        G_ELEMENT_OLDVECTOR
        G_ELEMENT_ASCIIVECTOR
        G_ELEMENT_ICON
        G_ELEMENT_LABEL
        G_ELEMENT_SITE
        G_ELEMENT_REGION
        G_ELEMENT_REGION3D
        G_ELEMENT_GROUP
        G_ELEMENT_3DVIEW

    cdef struct Cell_head:
        int format
        int compressed
        int rows
        int rows3
        int cols
        int cols3
        int depths
        int proj
        int zone
        double ew_res
        double ew_res3
        double ns_res
        double ns_res3
        double tb_res
        double north
        double south
        double east
        double west
        double top
        double bottom

    cdef struct G_3dview:
        char pgm_id[40]
        float from_to[2][3]
        float fov
        float twist
        float exag
        int mesh_freq
        int poly_freq
        int display_type
        int lightson
        int dozero
        int colorgrid
        int shading
        int fringe
        int surfonly
        int doavg
        char grid_col[40]
        char bg_col[40]
        char other_col[40]
        float lightpos[4]
        float lightcol[3]
        float ambient
        float shine
        Cell_head vwin

    cdef struct Key_Value:
        int nitems
        int nalloc
        char **key
        char **value

    cdef struct Flag:
        char key
        char answer
        char suppress_required
        const char *label
        const char *description
        const char *guisection
        Flag *next_flag

    cdef struct GModule:
        const char *label
        const char *description
        const char **keywords
        int overwrite
        int verbose

    cdef struct Counter:
        int value

    cdef struct Popen:
        FILE *fp
        int pid

    ctypedef int CELL

    ctypedef double DCELL

    ctypedef float FCELL

    cdef struct _Color_Value_:
        DCELL value
        unsigned char red
        unsigned char grn
        unsigned char blu

    cdef struct _Color_Rule_:
        _Color_Value_ low
        _Color_Value_ high
        _Color_Rule_ *next
        _Color_Rule_ *prev

    cdef struct ___Color_Info__lookup:
        unsigned char *red
        unsigned char *grn
        unsigned char *blu
        unsigned char *set
        int nalloc
        int active

    ctypedef ___Color_Info__lookup ___Color_Info__lookup_t

    cdef struct ___Color_Info__fp_lookup:
        DCELL *vals
        _Color_Rule_ **rules
        int nalloc
        int active

    ctypedef ___Color_Info__fp_lookup ___Color_Info__fp_lookup_t

    cdef struct _Color_Info_:
        _Color_Rule_ *rules
        int n_rules
        ___Color_Info__lookup_t lookup
        ___Color_Info__fp_lookup_t fp_lookup
        DCELL min
        DCELL max

    cdef struct Colors:
        int version
        DCELL shift
        int invert
        int is_float
        int null_set
        unsigned char null_red
        unsigned char null_grn
        unsigned char null_blu
        int undef_set
        unsigned char undef_red
        unsigned char undef_grn
        unsigned char undef_blu
        _Color_Info_ fixed
        _Color_Info_ modular
        DCELL cmin
        DCELL cmax
        int organizing

    cdef struct ilist:
        int *value
        int n_values
        int alloc_values

    ctypedef __u_char u_char

    ctypedef __u_short u_short

    ctypedef __u_int u_int

    ctypedef __u_long u_long

    ctypedef __quad_t quad_t

    ctypedef __u_quad_t u_quad_t

    ctypedef __fsid_t fsid_t

    ctypedef __loff_t loff_t

    ctypedef __ino_t ino_t

    ctypedef __dev_t dev_t

    ctypedef __gid_t gid_t

    ctypedef __mode_t mode_t

    ctypedef __nlink_t nlink_t

    ctypedef __uid_t uid_t

    ctypedef __pid_t pid_t

    ctypedef __id_t id_t

    ctypedef __daddr_t daddr_t

    ctypedef __caddr_t caddr_t

    ctypedef __key_t key_t

    ctypedef __clock_t clock_t

    ctypedef __time_t time_t

    ctypedef __clockid_t clockid_t

    ctypedef __timer_t timer_t

    ctypedef unsigned long ulong

    ctypedef unsigned short ushort

    ctypedef unsigned int uint

    ctypedef signed char int8_t

    ctypedef short int16_t

    ctypedef int int32_t

    ctypedef long int64_t

    ctypedef unsigned char u_int8_t

    ctypedef unsigned short u_int16_t

    ctypedef unsigned int u_int32_t

    ctypedef unsigned long u_int64_t

    ctypedef long register_t

    ctypedef int __sig_atomic_t

    ctypedef struct __sigset_t:
        unsigned long __val[16]


    ctypedef __sigset_t sigset_t

    cdef struct timespec:
        __time_t tv_sec
        __syscall_slong_t tv_nsec

    cdef struct timeval:
        __time_t tv_sec
        __suseconds_t tv_usec

    ctypedef __suseconds_t suseconds_t

    ctypedef long __fd_mask

    ctypedef struct fd_set:
        __fd_mask __fds_bits[16]


    ctypedef __fd_mask fd_mask

    int select(int __nfds, fd_set *__readfds, fd_set *__writefds, fd_set *__exceptfds, timeval *__timeout)

    int pselect(int __nfds, fd_set *__readfds, fd_set *__writefds, fd_set *__exceptfds, timespec *__timeout, const __sigset_t *__sigmask)

    unsigned int gnu_dev_major(unsigned long long __dev)

    unsigned int gnu_dev_minor(unsigned long long __dev)

    unsigned long long gnu_dev_makedev(unsigned int __major, unsigned int __minor)

    ctypedef __blksize_t blksize_t

    ctypedef __blkcnt_t blkcnt_t

    ctypedef __fsblkcnt_t fsblkcnt_t

    ctypedef __fsfilcnt_t fsfilcnt_t

    ctypedef unsigned long pthread_t

    cdef union pthread_attr_t:
        char __size[56]
        long __align

    cdef struct __pthread_internal_list:
        __pthread_internal_list *__prev
        __pthread_internal_list *__next

    ctypedef __pthread_internal_list __pthread_list_t

    cdef struct __pthread_mutex_t___pthread_mutex_s:
        int __lock
        unsigned int __count
        int __owner
        unsigned int __nusers
        int __kind
        int __spins
        __pthread_list_t __list

    ctypedef __pthread_mutex_t___pthread_mutex_s __pthread_mutex_t___pthread_mutex_s_t

    ctypedef union pthread_mutex_t:
        __pthread_mutex_t___pthread_mutex_s_t __data
        char __size[40]
        long __align


    ctypedef union pthread_mutexattr_t:
        char __size[4]
        int __align


    cdef struct __pthread_cond_t___data:
        int __lock
        unsigned int __futex
        unsigned long long __total_seq
        unsigned long long __wakeup_seq
        unsigned long long __woken_seq
        void *__mutex
        unsigned int __nwaiters
        unsigned int __broadcast_seq

    ctypedef __pthread_cond_t___data __pthread_cond_t___data_t

    ctypedef union pthread_cond_t:
        __pthread_cond_t___data_t __data
        char __size[48]
        long long __align


    ctypedef union pthread_condattr_t:
        char __size[4]
        int __align


    ctypedef unsigned int pthread_key_t

    ctypedef int pthread_once_t

    cdef struct __pthread_rwlock_t___data:
        int __lock
        unsigned int __nr_readers
        unsigned int __readers_wakeup
        unsigned int __writer_wakeup
        unsigned int __nr_readers_queued
        unsigned int __nr_writers_queued
        int __writer
        int __shared
        unsigned long __pad1
        unsigned long __pad2
        unsigned int __flags

    ctypedef __pthread_rwlock_t___data __pthread_rwlock_t___data_t

    ctypedef union pthread_rwlock_t:
        __pthread_rwlock_t___data_t __data
        char __size[56]
        long __align


    ctypedef union pthread_rwlockattr_t:
        char __size[8]
        long __align


    ctypedef int pthread_spinlock_t

    ctypedef union pthread_barrier_t:
        char __size[32]
        long __align


    ctypedef union pthread_barrierattr_t:
        char __size[4]
        int __align


    int __sigismember(const __sigset_t *, int)

    int __sigaddset(__sigset_t *, int)

    int __sigdelset(__sigset_t *, int)

    ctypedef __sig_atomic_t sig_atomic_t

    cdef union sigval:
        int sival_int
        void *sival_ptr

    ctypedef sigval sigval_t

    ctypedef __clock_t __sigchld_clock_t

    cdef struct ____siginfo_t__sifields__kill:
        __pid_t si_pid
        __uid_t si_uid

    ctypedef ____siginfo_t__sifields__kill ____siginfo_t__sifields__kill_t

    cdef struct ____siginfo_t__sifields__timer:
        int si_tid
        int si_overrun
        sigval_t si_sigval

    ctypedef ____siginfo_t__sifields__timer ____siginfo_t__sifields__timer_t

    cdef struct ____siginfo_t__sifields__rt:
        __pid_t si_pid
        __uid_t si_uid
        sigval_t si_sigval

    ctypedef ____siginfo_t__sifields__rt ____siginfo_t__sifields__rt_t

    cdef struct ____siginfo_t__sifields__sigchld:
        __pid_t si_pid
        __uid_t si_uid
        int si_status
        __sigchld_clock_t si_utime
        __sigchld_clock_t si_stime

    ctypedef ____siginfo_t__sifields__sigchld ____siginfo_t__sifields__sigchld_t

    cdef struct ____siginfo_t__sifields__sigfault:
        void *si_addr

    ctypedef ____siginfo_t__sifields__sigfault ____siginfo_t__sifields__sigfault_t

    cdef struct ____siginfo_t__sifields__sigpoll:
        long si_band
        int si_fd

    ctypedef ____siginfo_t__sifields__sigpoll ____siginfo_t__sifields__sigpoll_t

    cdef struct ____siginfo_t__sifields__sigsys:
        void *_call_addr
        int _syscall
        unsigned int _arch

    ctypedef ____siginfo_t__sifields__sigsys ____siginfo_t__sifields__sigsys_t

    cdef union __siginfo_t__sifields:
        int _pad[28]
        ____siginfo_t__sifields__kill_t _kill
        ____siginfo_t__sifields__timer_t _timer
        ____siginfo_t__sifields__rt_t _rt
        ____siginfo_t__sifields__sigchld_t _sigchld
        ____siginfo_t__sifields__sigfault_t _sigfault
        ____siginfo_t__sifields__sigpoll_t _sigpoll
        ____siginfo_t__sifields__sigsys_t _sigsys

    ctypedef __siginfo_t__sifields __siginfo_t__sifields_t

    ctypedef struct siginfo_t:
        int si_signo
        int si_errno
        int si_code
        __siginfo_t__sifields_t _sifields


    cdef enum:
        SI_ASYNCNL
        SI_TKILL
        SI_SIGIO
        SI_ASYNCIO
        SI_MESGQ
        SI_TIMER
        SI_QUEUE
        SI_USER
        SI_KERNEL

    cdef enum:
        ILL_ILLOPC
        ILL_ILLOPN
        ILL_ILLADR
        ILL_ILLTRP
        ILL_PRVOPC
        ILL_PRVREG
        ILL_COPROC
        ILL_BADSTK

    cdef enum:
        FPE_INTDIV
        FPE_INTOVF
        FPE_FLTDIV
        FPE_FLTOVF
        FPE_FLTUND
        FPE_FLTRES
        FPE_FLTINV
        FPE_FLTSUB

    cdef enum:
        SEGV_MAPERR
        SEGV_ACCERR

    cdef enum:
        BUS_ADRALN
        BUS_ADRERR
        BUS_OBJERR

    cdef enum:
        TRAP_BRKPT
        TRAP_TRACE

    cdef enum:
        CLD_EXITED
        CLD_KILLED
        CLD_DUMPED
        CLD_TRAPPED
        CLD_STOPPED
        CLD_CONTINUED

    cdef enum:
        POLL_IN
        POLL_OUT
        POLL_MSG
        POLL_ERR
        POLL_PRI
        POLL_HUP

    cdef struct ____sigevent__sigev_un__sigev_thread:
        void (*_function)(sigval)
        pthread_attr_t *_attribute

    ctypedef ____sigevent__sigev_un__sigev_thread ____sigevent__sigev_un__sigev_thread_t

    cdef union __sigevent__sigev_un:
        int _pad[12]
        __pid_t _tid
        ____sigevent__sigev_un__sigev_thread_t _sigev_thread

    ctypedef __sigevent__sigev_un __sigevent__sigev_un_t

    cdef struct sigevent:
        sigval_t sigev_value
        int sigev_signo
        int sigev_notify
        __sigevent__sigev_un_t _sigev_un

    ctypedef sigevent sigevent_t

    cdef enum:
        SIGEV_SIGNAL
        SIGEV_NONE
        SIGEV_THREAD
        SIGEV_THREAD_ID

    ctypedef void (*__sighandler_t)(int)

    __sighandler_t __sysv_signal(int __sig, __sighandler_t __handler)

    __sighandler_t signal(int __sig, __sighandler_t __handler)

    int kill(__pid_t __pid, int __sig)

    int killpg(__pid_t __pgrp, int __sig)

    __sighandler_t ssignal(int __sig, __sighandler_t __handler)

    int gsignal(int __sig)

    void psignal(int __sig, const char *__s)

    void psiginfo(const siginfo_t *__pinfo, const char *__s)

    int __sigpause(int __sig_or_mask, int __is_sig)

    int sigblock(int __mask)

    int sigsetmask(int __mask)

    int siggetmask()

    ctypedef __sighandler_t sig_t

    int sigemptyset(sigset_t *__set)

    int sigfillset(sigset_t *__set)

    int sigaddset(sigset_t *__set, int __signo)

    int sigdelset(sigset_t *__set, int __signo)

    int sigismember(const sigset_t *__set, int __signo)

    cdef union __sigaction___sigaction_handler:
        __sighandler_t sa_handler
        void (*sa_sigaction)(int, siginfo_t *, void *)

    ctypedef __sigaction___sigaction_handler __sigaction___sigaction_handler_t

    cdef struct sigaction:
        __sigaction___sigaction_handler_t __sigaction_handler
        __sigset_t sa_mask
        int sa_flags
        void (*sa_restorer)()

    int sigprocmask(int __how, const sigset_t *__set, sigset_t *__oset)

    int sigsuspend(const sigset_t *__set)

    int sigpending(sigset_t *__set)

    int sigwait(const sigset_t *__set, int *__sig)

    int sigwaitinfo(const sigset_t *__set, siginfo_t *__info)

    int sigtimedwait(const sigset_t *__set, siginfo_t *__info, timespec *__timeout)

    int sigqueue(__pid_t __pid, int __sig, sigval __val)

    const char *const _sys_siglist[65]
    const char *const sys_siglist[65]
    cdef struct sigvec:
        __sighandler_t sv_handler
        int sv_mask
        int sv_flags

    cdef struct _fpx_sw_bytes:
        __uint32_t magic1
        __uint32_t extended_size
        __uint64_t xstate_bv
        __uint32_t xstate_size
        __uint32_t padding[7]

    cdef struct _fpreg:
        unsigned short significand[4]
        unsigned short exponent

    cdef struct _fpxreg:
        unsigned short significand[4]
        unsigned short exponent
        unsigned short padding[3]

    cdef struct _xmmreg:
        __uint32_t element[4]

    cdef struct _fpstate:
        __uint16_t cwd
        __uint16_t swd
        __uint16_t ftw
        __uint16_t fop
        __uint64_t rip
        __uint64_t rdp
        __uint32_t mxcsr
        __uint32_t mxcr_mask
        _fpxreg _st[8]
        _xmmreg _xmm[16]
        __uint32_t padding[24]

    cdef union __sigcontext_:
        _fpstate *fpstate
        __uint64_t __fpstate_word

    ctypedef __sigcontext_ __sigcontext__t

    cdef struct sigcontext:
        __uint64_t r8
        __uint64_t r9
        __uint64_t r10
        __uint64_t r11
        __uint64_t r12
        __uint64_t r13
        __uint64_t r14
        __uint64_t r15
        __uint64_t rdi
        __uint64_t rsi
        __uint64_t rbp
        __uint64_t rbx
        __uint64_t rdx
        __uint64_t rax
        __uint64_t rcx
        __uint64_t rsp
        __uint64_t rip
        __uint64_t eflags
        unsigned short cs
        unsigned short gs
        unsigned short fs
        unsigned short __pad0
        __uint64_t err
        __uint64_t trapno
        __uint64_t oldmask
        __uint64_t cr2
        __uint64_t __reserved1[8]

    cdef struct _xsave_hdr:
        __uint64_t xstate_bv
        __uint64_t reserved1[2]
        __uint64_t reserved2[5]

    cdef struct _ymmh_state:
        __uint32_t ymmh_space[64]

    cdef struct _xstate:
        _fpstate fpstate
        _xsave_hdr xstate_hdr
        _ymmh_state ymmh

    int sigreturn(sigcontext *__scp)

    int siginterrupt(int __sig, int __interrupt)

    cdef struct sigstack:
        void *ss_sp
        int ss_onstack

    cdef enum:
        SS_ONSTACK
        SS_DISABLE

    cdef struct sigaltstack:
        void *ss_sp
        int ss_flags
        int ss_size

    ctypedef sigaltstack stack_t

    ctypedef long long greg_t

    ctypedef greg_t gregset_t[23]

    cdef struct _libc_fpxreg:
        unsigned short significand[4]
        unsigned short exponent
        unsigned short padding[3]

    cdef struct _libc_xmmreg:
        __uint32_t element[4]

    cdef struct _libc_fpstate:
        __uint16_t cwd
        __uint16_t swd
        __uint16_t ftw
        __uint16_t fop
        __uint64_t rip
        __uint64_t rdp
        __uint32_t mxcsr
        __uint32_t mxcr_mask
        _libc_fpxreg _st[8]
        _libc_xmmreg _xmm[16]
        __uint32_t padding[24]

    ctypedef _libc_fpstate *fpregset_t

    ctypedef struct mcontext_t:
        gregset_t gregs
        fpregset_t fpregs
        unsigned long long __reserved1[8]


    cdef struct ucontext:
        unsigned long uc_flags
        ucontext *uc_link
        stack_t uc_stack
        mcontext_t uc_mcontext
        __sigset_t uc_sigmask
        _libc_fpstate __fpregs_mem

    ctypedef ucontext ucontext_t

    int pthread_sigmask(int __how, const __sigset_t *__newmask, __sigset_t *__oldmask)

    int pthread_kill(pthread_t __threadid, int __signo)

    int __libc_current_sigrtmin()

    int __libc_current_sigrtmax()

    void G_adjust_Cell_head(Cell_head *, int, int)

    void G_adjust_Cell_head3(Cell_head *, int, int, int)

    void *G__malloc(const char *, int, int size_t)

    void *G__calloc(const char *, int, int size_t, int)

    void *G__realloc(const char *, int, void *, int size_t)

    void G_free(void *)

    int G_begin_cell_area_calculations()

    double G_area_of_cell_at_row(int)

    int G_begin_polygon_area_calculations()

    double G_area_of_polygon(const double *, const double *, int)

    void G_begin_zone_area_on_ellipsoid(double, double, double)

    double G_darea0_on_ellipsoid(double)

    double G_area_for_zone_on_ellipsoid(double, double)

    void G_begin_ellipsoid_polygon_area(double, double)

    double G_ellipsoid_polygon_area(const double *, const double *, int)

    double G_planimetric_polygon_area(const double *, const double *, int)

    void G_begin_zone_area_on_sphere(double, double)

    double G_darea0_on_sphere(double)

    double G_area_for_zone_on_sphere(double, double)

    void G_ascii_check(char *)

    int G_vasprintf(char **, const char *, va_list)

    int G_asprintf(char **, const char *)

    int G_rasprintf(char **, int *, const char *)

    char *G_basename(char *, const char *)

    void G_bresenham_line(int, int, int, int, int (*)(int, int))

    void G_clicker()

    char *G_color_rules_options()

    char *G_color_rules_descriptions()

    void G_list_color_rules(FILE *)

    int G_find_color_rule(const char *)

    int G_num_standard_colors()

    int G_insert_commas(char *)

    void G_remove_commas(char *)

    int G_recursive_copy(const char *, const char *)

    int G_copy_file(const char *, const char *)

    int G_is_initialized(int *)

    void G_initialize_done(int *)

    void G_init_counter(Counter *, int)

    int G_counter_next(Counter *)

    const char *G_date()

    int G_get_datum_by_name(const char *)

    const char *G_datum_name(int)

    const char *G_datum_description(int)

    const char *G_datum_ellipsoid(int)

    int G_get_datumparams_from_projinfo(Key_Value *, char *, char *)

    void G_read_datum_table()

    void G_init_debug()

    int G_debug(int, const char *)

    int G_begin_distance_calculations()

    double G_distance(double, double, double, double)

    double G_distance_between_line_segments(double, double, double, double, double, double, double, double)

    double G_distance_point_to_line_segment(double, double, double, double, double, double)

    void G_done_msg(const char *)

    int G_is_little_endian()

    void G_init_env()

    const char *G_getenv(const char *)

    const char *G_getenv2(const char *, int)

    const char *G__getenv(const char *)

    const char *G__getenv2(const char *, int)

    void G_setenv(const char *, const char *)

    void G_setenv2(const char *, const char *, int)

    void G__setenv(const char *, const char *)

    void G__setenv2(const char *, const char *, int)

    void G_unsetenv(const char *)

    void G_unsetenv2(const char *, int)

    void G__write_env()

    const char *G__env_name(int)

    void G__read_env()

    void G_set_gisrc_mode(int)

    int G_get_gisrc_mode()

    void G__create_alt_env()

    void G__switch_env()

    int G_info_format()

    void G_message(const char *)

    void G_verbose_message(const char *)

    void G_important_message(const char *)

    void G_fatal_error(const char *)

    void G_warning(const char *)

    int G_suppress_warnings(int)

    int G_sleep_on_error(int)

    void G_set_error_routine(int (*)(const char *, int))

    void G_unset_error_routine()

    void G_init_logging()

    char *G_file_name(char *, const char *, const char *, const char *)

    char *G_file_name_misc(char *, const char *, const char *, const char *, const char *)

    const char *G_find_file(const char *, char *, const char *)

    const char *G_find_file2(const char *, const char *, const char *)

    const char *G_find_file_misc(const char *, const char *, char *, const char *)

    const char *G_find_file2_misc(const char *, const char *, const char *, const char *)

    char *G_find_etc(const char *)

    const char *G_find_raster(char *, const char *)

    const char *G_find_raster2(const char *, const char *)

    const char *G_find_raster3d(const char *, const char *)

    const char *G_find_vector(char *, const char *)

    const char *G_find_vector2(const char *, const char *)

    int G_zlib_compress(const unsigned char *, int, unsigned char *, int)

    int G_zlib_expand(const unsigned char *, int, unsigned char *, int)

    int G_zlib_write(int, const unsigned char *, int)

    int G_zlib_read(int, int, unsigned char *, int)

    int G_zlib_write_noCompress(int, const unsigned char *, int)

    int G_begin_geodesic_equation(double, double, double, double)

    double G_geodesic_lat_from_lon(double)

    void G_begin_geodesic_distance(double, double)

    void G_set_geodesic_distance_lat1(double)

    void G_set_geodesic_distance_lat2(double)

    double G_geodesic_distance_lon_to_lon(double, double)

    double G_geodesic_distance(double, double, double, double)

    int G_get_ellipsoid_parameters(double *, double *)

    int G_get_spheroid_by_name(const char *, double *, double *, double *)

    int G_get_ellipsoid_by_name(const char *, double *, double *)

    const char *G_ellipsoid_name(int)

    const char *G_ellipsoid_description(int)

    int G_read_ellipsoid_table(int)

    Key_Value *G_get_projunits()

    Key_Value *G_get_projinfo()

    void G_get_window(Cell_head *)

    void G_get_default_window(Cell_head *)

    void G__get_window(Cell_head *, const char *, const char *, const char *)

    int G_getl(char *, int, FILE *)

    int G_getl2(char *, int, FILE *)

    const char *G_gisbase()

    const char *G_gisdbase()

    void G__gisinit(const char *, const char *)

    void G__no_gisinit(const char *)

    void G__check_gisinit()

    void G_init_all()

    void G_add_error_handler(void (*)(void *), void *)

    void G_remove_error_handler(void (*)(void *), void *)

    void G__call_error_handlers()

    const char *G_home()

    const char *G__home()

    void G_init_ilist(ilist *)

    void G_ilist_add(ilist *, int)

    int G_intersect_line_segments(double, double, double, double, double, double, double, double, double *, double *, double *, double *)

    int G_is_gisbase(const char *)

    int G_is_location(const char *)

    int G_is_mapset(const char *)

    Key_Value *G_create_key_value()

    void G_set_key_value(const char *, const char *, Key_Value *)

    const char *G_find_key_value(const char *, Key_Value *)

    void G_free_key_value(Key_Value *)

    int G_fwrite_key_value(FILE *, Key_Value *)

    Key_Value *G_fread_key_value(FILE *)

    void G_write_key_value_file(const char *, Key_Value *)

    Key_Value *G_read_key_value_file(const char *)

    void G_update_key_value_file(const char *, const char *, const char *)

    int G_lookup_key_value_from_file(const char *, const char *, char *, int)

    int G_legal_filename(const char *)

    int G_check_input_output_name(const char *, const char *, int)

    void G_set_distance_to_line_tolerance(double)

    double G_distance2_point_to_line(double, double, double, double, double, double)

    void G_list_element(const char *, const char *, const char *, int (*)(const char *, const char *, const char *))

    char **G_list(int, const char *, const char *, const char *)

    void G_free_list(char **)

    void G_lat_format(double, char *)

    const char *G_lat_format_string()

    void G_lon_format(double, char *)

    const char *G_lon_format_string()

    void G_llres_format(double, char *)

    const char *G_llres_format_string()

    void G_lat_parts(double, int *, int *, double *, char *)

    void G_lon_parts(double, int *, int *, double *, char *)

    int G_lat_scan(const char *, double *)

    int G_lon_scan(const char *, double *)

    int G_llres_scan(const char *, double *)

    const char *G_location()

    char *G_location_path()

    void G_set_ls_filter(int (*)(const char *, void *), void *)

    void G_set_ls_exclude_filter(int (*)(const char *, void *), void *)

    char **G__ls(const char *, int *)

    void G_ls(const char *, FILE *)

    void G_ls_format(char **, int, int, FILE *)

    void *G_ls_regex_filter(const char *, int, int)

    void *G_ls_glob_filter(const char *, int)

    void G_free_ls_filter(void *)

    const char *G__machine_name()

    int G__make_location(const char *, Cell_head *, Key_Value *, Key_Value *, FILE *)

    int G_make_location(const char *, Cell_head *, Key_Value *, Key_Value *, FILE *)

    int G_compare_projections(Key_Value *, Key_Value *, Key_Value *, Key_Value *)

    int G__make_mapset(const char *gisdbase_name, const char *location_name, const char *mapset_name)

    int G_make_mapset(const char *gisdbase_name, const char *location_name, const char *mapset_name)

    char *G_tolcase(char *)

    char *G_toucase(char *)

    const char *G_mapset()

    char *G_mapset_path()

    int G__make_mapset_element(const char *)

    int G__make_mapset_element_misc(const char *, const char *)

    int G__mapset_permissions(const char *)

    int G__mapset_permissions2(const char *, const char *, const char *)

    const char *G__mapset_name(int)

    void G_get_list_of_mapsets()

    void G__create_alt_search_path()

    void G__switch_search_path()

    void G_reset_mapsets()

    char **G_available_mapsets()

    void G_add_mapset_to_search_path(const char *)

    int G_is_mapset_in_search_path(const char *)

    char *G_myname()

    int G_color_values(const char *, float *, float *, float *)

    const char *G_color_name(int)

    void G_newlines_to_spaces(char *)

    int G_name_is_fully_qualified(const char *, char *, char *)

    char *G_fully_qualified_name(const char *, const char *)

    int G_unqualified_name(const char *, const char *, char *, char *)

    int G_open_new(const char *, const char *)

    int G_open_old(const char *, const char *, const char *)

    int G_open_update(const char *, const char *)

    FILE *G_fopen_new(const char *, const char *)

    FILE *G_fopen_old(const char *, const char *, const char *)

    FILE *G_fopen_append(const char *, const char *)

    FILE *G_fopen_modify(const char *, const char *)

    int G_open_new_misc(const char *, const char *, const char *)

    int G_open_old_misc(const char *, const char *, const char *, const char *)

    int G_open_update_misc(const char *, const char *, const char *)

    FILE *G_fopen_new_misc(const char *, const char *, const char *)

    FILE *G_fopen_old_misc(const char *, const char *, const char *, const char *)

    FILE *G_fopen_append_misc(const char *, const char *, const char *)

    FILE *G_fopen_modify_misc(const char *, const char *, const char *)

    int G_check_overwrite(int argc, char **argv)

    FILE *G_open_pager(Popen *)

    void G_close_pager(Popen *)

    FILE *G_open_mail(Popen *)

    void G_close_mail(Popen *)

    void G_disable_interactive()

    GModule *G_define_module()

    Flag *G_define_flag()

    Flag *G_define_standard_flag(int)

    int G_parser(int, char **)

    void G_usage()

    char *G_recreate_command()

    void G_add_keyword(const char *)

    void G_set_keywords(const char *)

    int G_get_overwrite()

    int G_mkdir(const char *)

    int G_is_dirsep(char)

    int G_is_absolute_path(const char *)

    char *G_convert_dirseps_to_host(char *)

    char *G_convert_dirseps_from_host(char *)

    int G_owner(const char *)

    void G_percent(long, long, int)

    void G_percent_reset()

    void G_progress(long, int)

    void G_set_percent_routine(int (*)(int))

    void G_unset_percent_routine()

    void G_popen_clear(Popen *)

    FILE *G_popen_write(Popen *, const char *, const char **)

    FILE *G_popen_read(Popen *, const char *, const char **)

    void G_popen_close(Popen *)

    void G_setup_plot(double, double, double, double, int (*)(int, int), int (*)(int, int))

    void G_setup_fill(int)

    void G_plot_where_xy(double, double, int *, int *)

    void G_plot_where_en(int, int, double *, double *)

    void G_plot_point(double, double)

    void G_plot_line(double, double, double, double)

    void G_plot_line2(double, double, double, double)

    int G_plot_polygon(const double *, const double *, int)

    int G_plot_area(double *const *, double *const *, int *, int)

    void G_plot_fx(double (*)(double), double, double)

    int G_pole_in_polygon(const double *, const double *, int)

    const char *G_program_name()

    void G_set_program_name(const char *)

    int G_projection()

    int G__projection_units(int)

    const char *G__projection_name(int)

    const char *G_database_unit_name(int)

    const char *G_database_projection_name()

    const char *G_database_datum_name()

    const char *G_database_ellipse_name()

    double G_database_units_to_meters_factor()

    int G_put_window(Cell_head *)

    int G__put_window(Cell_head *, const char *, const char *)

    void G_putenv(const char *, const char *)

    double G_meridional_radius_of_curvature(double, double, double)

    double G_transverse_radius_of_curvature(double, double, double)

    double G_radius_of_conformal_tangent_sphere(double, double, double)

    void G__read_Cell_head(FILE *, Cell_head *, int)

    void G__read_Cell_head_array(char **, Cell_head *, int)

    int G_remove(const char *, const char *)

    int G_remove_misc(const char *, const char *, const char *)

    int G_rename_file(const char *, const char *)

    int G_rename(const char *, const char *, const char *)

    int G_begin_rhumbline_equation(double, double, double, double)

    double G_rhumbline_lat_from_lon(double)

    void G_rotate_around_point(double, double, double *, double *, double)

    void G_rotate_around_point_int(int, int, int *, int *, double)

    off_t G_ftell(FILE *)

    void G_fseek(FILE *, off_t, int)

    void G_get_set_window(Cell_head *)

    void G_set_window(Cell_head *)

    void G_unset_window()

    void G_shortest_way(double *, double *)

    void G_sleep(unsigned int)

    int G_snprintf(char *, int size_t, const char *)

    int G_strcasecmp(const char *, const char *)

    int G_strncasecmp(const char *, const char *, int)

    char *G_store(const char *)

    char *G_strchg(char *, char, char)

    char *G_str_replace(const char *, const char *, const char *)

    void G_strip(char *)

    char *G_chop(char *)

    void G_str_to_upper(char *)

    void G_str_to_lower(char *)

    int G_str_to_sql(char *)

    void G_squeeze(char *)

    char *G_strcasestr(const char *, const char *)

    void G_init_tempfile()

    char *G_tempfile()

    char *G__tempfile(int)

    void G__temp_element(char *)

    int G_has_raster_timestamp(const char *, const char *)

    int G_remove_raster_timestamp(const char *)

    int G_has_vector_timestamp(const char *, const char *, const char *)

    int G_remove_vector_timestamp(const char *, const char *)

    int G_has_raster3d_timestamp(const char *, const char *)

    int G_remove_raster3d_timestamp(const char *)

    char **G_tokenize(const char *, const char *)

    char **G_tokenize2(const char *, const char *, const char *)

    int G_number_of_tokens(char **)

    void G_free_tokens(char **)

    void G_trim_decimal(char *)

    double G_units_to_meters_factor(int)

    double G_units_to_meters_factor_sq(int)

    const char *G_get_units_name(int, int, int)

    int G_units(const char *)

    int G_is_units_type_spatial(int)

    int G_is_units_type_temporal(int)

    char *G_rc_path(const char *, const char *)

    int G_verbose()

    int G_verbose_min()

    int G_verbose_std()

    int G_verbose_max()

    int G_set_verbose(int)

    void G_3dview_warning(int)

    int G_get_3dview_defaults(G_3dview *, Cell_head *)

    int G_put_3dview(const char *, const char *, G_3dview *, Cell_head *)

    int G_get_3dview(const char *, const char *, G_3dview *)

    const char *G_whoami()

    void G_adjust_window_to_box(Cell_head *, Cell_head *, int, int)

    void G_format_northing(double, char *, int)

    void G_format_easting(double, char *, int)

    void G_format_resolution(double, char *, int)

    int G_point_in_region(double, double)

    int G_point_in_window(double, double, Cell_head *)

    int G_limit_east(double *, int)

    int G_limit_west(double *, int)

    int G_limit_north(double *, int)

    int G_limit_south(double *, int)

    int G_window_overlap(Cell_head *, double, double, double, double)

    double G_window_percentage_overlap(Cell_head *, double, double, double, double)

    int G_scan_northing(const char *, double *, int)

    int G_scan_easting(const char *, double *, int)

    int G_scan_resolution(const char *, double *, int)

    double G_adjust_east_longitude(double, double)

    double G_adjust_easting(double, Cell_head *)

    void G__init_window()

    void G_begin_execute(void (*func)(void *), void *, void **, int)

    void G_end_execute(void **)

    void G_init_workers()

    void G_finish_workers()

    void G__write_Cell_head(FILE *, Cell_head *, int)

    void G__write_Cell_head3(FILE *, Cell_head *, int)

    void G_write_zeros(int, int size_t)

    void G_xdr_get_int(int *, const void *)

    void G_xdr_put_int(void *, const int *)

    void G_xdr_get_float(float *, const void *)

    void G_xdr_put_float(void *, const float *)

    void G_xdr_get_double(double *, const void *)

    void G_xdr_put_double(void *, const double *)

    void G_zero(void *, int)

    int G_zone()


