# This code was automatically generated by CWrap version 0.0.0

cdef extern from "grass/vector.h":

    ctypedef unsigned char __u_char

    ctypedef unsigned short __u_short

    ctypedef unsigned int __u_int

    ctypedef unsigned long __u_long

    ctypedef signed char __int8_t

    ctypedef unsigned char __uint8_t

    ctypedef short __int16_t

    ctypedef unsigned short __uint16_t

    ctypedef int __int32_t

    ctypedef unsigned int __uint32_t

    ctypedef long __int64_t

    ctypedef unsigned long __uint64_t

    ctypedef long __quad_t

    ctypedef unsigned long __u_quad_t

    ctypedef unsigned long __dev_t

    ctypedef unsigned int __uid_t

    ctypedef unsigned int __gid_t

    ctypedef unsigned long __ino_t

    ctypedef unsigned long __ino64_t

    ctypedef unsigned int __mode_t

    ctypedef unsigned long __nlink_t

    ctypedef long __off_t

    ctypedef long __off64_t

    ctypedef int __pid_t

    ctypedef struct __fsid_t:
        int __val[2]


    ctypedef long __clock_t

    ctypedef unsigned long __rlim_t

    ctypedef unsigned long __rlim64_t

    ctypedef unsigned int __id_t

    ctypedef long __time_t

    ctypedef unsigned int __useconds_t

    ctypedef long __suseconds_t

    ctypedef int __daddr_t

    ctypedef int __key_t

    ctypedef int __clockid_t

    ctypedef void *__timer_t

    ctypedef long __blksize_t

    ctypedef long __blkcnt_t

    ctypedef long __blkcnt64_t

    ctypedef unsigned long __fsblkcnt_t

    ctypedef unsigned long __fsblkcnt64_t

    ctypedef unsigned long __fsfilcnt_t

    ctypedef unsigned long __fsfilcnt64_t

    ctypedef long __fsword_t

    ctypedef long __ssize_t

    ctypedef long __syscall_slong_t

    ctypedef unsigned long __syscall_ulong_t

    ctypedef __off64_t __loff_t

    ctypedef __quad_t *__qaddr_t

    ctypedef char *__caddr_t

    ctypedef long __intptr_t

    ctypedef unsigned int __socklen_t

    cdef struct _IO_FILE:
        pass

    ctypedef _IO_FILE FILE

    ctypedef _IO_FILE __FILE

    cdef union ____mbstate_t___value:
        unsigned int __wch
        char __wchb[4]

    ctypedef ____mbstate_t___value ____mbstate_t___value_t

    ctypedef struct __mbstate_t:
        int __count
        ____mbstate_t___value_t __value


    ctypedef struct _G_fpos_t:
        __off_t __pos
        __mbstate_t __state


    ctypedef struct _G_fpos64_t:
        __off64_t __pos
        __mbstate_t __state


    cdef struct _IO_jump_t:
        pass

    cdef struct _IO_FILE:
        pass

    ctypedef void _IO_lock_t

    cdef struct _IO_marker:
        _IO_marker *_next
        _IO_FILE *_sbuf
        int _pos

    cdef enum __codecvt_result:
        __codecvt_ok
        __codecvt_partial
        __codecvt_error
        __codecvt_noconv

    cdef struct _IO_FILE:
        int _flags
        char *_IO_read_ptr
        char *_IO_read_end
        char *_IO_read_base
        char *_IO_write_base
        char *_IO_write_ptr
        char *_IO_write_end
        char *_IO_buf_base
        char *_IO_buf_end
        char *_IO_save_base
        char *_IO_backup_base
        char *_IO_save_end
        _IO_marker *_markers
        _IO_FILE *_chain
        int _fileno
        int _flags2
        __off_t _old_offset
        unsigned short _cur_column
        signed char _vtable_offset
        char _shortbuf[1]
        _IO_lock_t *_lock
        __off64_t _offset
        void *__pad1
        void *__pad2
        void *__pad3
        void *__pad4
        int __pad5
        int _mode
        char _unused2

    cdef struct _IO_FILE_plus:
        pass

    _IO_FILE_plus _IO_2_1_stdin_
    _IO_FILE_plus _IO_2_1_stdout_
    _IO_FILE_plus _IO_2_1_stderr_
    ctypedef __ssize_t (__io_read_fn)(void *, char *, int)

    ctypedef __ssize_t (__io_write_fn)(void *, const char *, int)

    ctypedef int (__io_seek_fn)(void *, __off64_t *, int)

    ctypedef int (__io_close_fn)(void *)

    int __underflow(_IO_FILE *)

    int __uflow(_IO_FILE *)

    int __overflow(_IO_FILE *, int)

    int _IO_getc(_IO_FILE *__fp)

    int _IO_putc(int __c, _IO_FILE *__fp)

    int _IO_feof(_IO_FILE *__fp)

    int _IO_ferror(_IO_FILE *__fp)

    int _IO_peekc_locked(_IO_FILE *__fp)

    void _IO_flockfile(_IO_FILE *)

    void _IO_funlockfile(_IO_FILE *)

    int _IO_ftrylockfile(_IO_FILE *)

    int _IO_vfscanf(_IO_FILE *, const char *, int __gnuc_va_list, int *)

    int _IO_vfprintf(_IO_FILE *, const char *, int __gnuc_va_list)

    __ssize_t _IO_padn(_IO_FILE *, int, __ssize_t)

    int _IO_sgetn(_IO_FILE *, void *, int size_t)

    __off64_t _IO_seekoff(_IO_FILE *, __off64_t, int, int)

    __off64_t _IO_seekpos(_IO_FILE *, __off64_t, int)

    void _IO_free_backup_area(_IO_FILE *)

    ctypedef int va_list

    ctypedef __off_t off_t

    ctypedef __ssize_t ssize_t

    ctypedef _G_fpos_t fpos_t

    _IO_FILE *stdin
    _IO_FILE *stdout
    _IO_FILE *stderr
    int remove(const char *__filename)

    int rename(const char *__old, const char *__new)

    int renameat(int __oldfd, const char *__old, int __newfd, const char *__new)

    FILE *tmpfile()

    char *tmpnam(char *__s)

    char *tmpnam_r(char *__s)

    char *tempnam(const char *__dir, const char *__pfx)

    int fclose(FILE *__stream)

    int fflush(FILE *__stream)

    int fflush_unlocked(FILE *__stream)

    FILE *fopen(const char *__filename, const char *__modes)

    FILE *freopen(const char *__filename, const char *__modes, FILE *__stream)

    FILE *fdopen(int __fd, const char *__modes)

    FILE *fmemopen(void *__s, int __len, const char *__modes)

    FILE *open_memstream(char **__bufloc, int *__sizeloc)

    void setbuf(FILE *__stream, char *__buf)

    int setvbuf(FILE *__stream, char *__buf, int __modes, int __n)

    void setbuffer(FILE *__stream, char *__buf, int __size)

    void setlinebuf(FILE *__stream)

    int fprintf(FILE *__stream, const char *__format)

    int printf(const char *__format)

    int sprintf(char *__s, const char *__format)

    int vdprintf(int __fd, const char *__fmt, int __arg)

    int dprintf(int __fd, const char *__fmt)

    int fscanf(FILE *__stream, const char *__format)

    int scanf(const char *__format)

    int sscanf(const char *__s, const char *__format)

    int fscanf(FILE *__stream, const char *__format)

    int scanf(const char *__format)

    int sscanf(const char *__s, const char *__format)

    int fgetc(FILE *__stream)

    int getc(FILE *__stream)

    int getchar()

    int getc_unlocked(FILE *__stream)

    int getchar_unlocked()

    int fgetc_unlocked(FILE *__stream)

    int fputc(int __c, FILE *__stream)

    int putc(int __c, FILE *__stream)

    int putchar(int __c)

    int fputc_unlocked(int __c, FILE *__stream)

    int putc_unlocked(int __c, FILE *__stream)

    int putchar_unlocked(int __c)

    int getw(FILE *__stream)

    int putw(int __w, FILE *__stream)

    char *fgets(char *__s, int __n, FILE *__stream)

    char *gets(char *__s)

    __ssize_t __getdelim(char **__lineptr, int *__n, int __delimiter, FILE *__stream)

    __ssize_t getdelim(char **__lineptr, int *__n, int __delimiter, FILE *__stream)

    __ssize_t getline(char **__lineptr, int *__n, FILE *__stream)

    int fputs(const char *__s, FILE *__stream)

    int puts(const char *__s)

    int ungetc(int __c, FILE *__stream)

    int fread(void *__ptr, int __size, int __n, FILE *__stream)

    int fwrite(const void *__ptr, int __size, int __n, FILE *__s)

    int fread_unlocked(void *__ptr, int __size, int __n, FILE *__stream)

    int fwrite_unlocked(const void *__ptr, int __size, int __n, FILE *__stream)

    int fseek(FILE *__stream, long __off, int __whence)

    long ftell(FILE *__stream)

    void rewind(FILE *__stream)

    int fseeko(FILE *__stream, __off_t __off, int __whence)

    __off_t ftello(FILE *__stream)

    int fgetpos(FILE *__stream, fpos_t *__pos)

    int fsetpos(FILE *__stream, const fpos_t *__pos)

    void clearerr(FILE *__stream)

    int feof(FILE *__stream)

    int ferror(FILE *__stream)

    void clearerr_unlocked(FILE *__stream)

    int feof_unlocked(FILE *__stream)

    int ferror_unlocked(FILE *__stream)

    void perror(const char *__s)

    int sys_nerr
    unexposed_type sys_errlist
    int fileno(FILE *__stream)

    int fileno_unlocked(FILE *__stream)

    FILE *popen(const char *__command, const char *__modes)

    int pclose(FILE *__stream)

    char *ctermid(char *__s)

    void flockfile(FILE *__stream)

    int ftrylockfile(FILE *__stream)

    void funlockfile(FILE *__stream)

    cdef struct stat:
        pass

    ctypedef stat STRUCT_STAT

    cdef struct DateTime:
        int mode
        int from
        int to
        int fracsec
        int year
        int month
        int day
        int hour
        int minute
        double second
        int positive
        int tz

    int datetime_is_between(int x, int a, int b)

    int datetime_change_from_to(DateTime *dt, int from, int to, int round)

    void datetime_copy(DateTime *src, const DateTime *dst)

    int datetime_difference(const DateTime *a, const DateTime *b, DateTime *result)

    int datetime_error(int code, char *msg)

    int datetime_error_code()

    char *datetime_error_msg()

    void datetime_clear_error()

    int datetime_format(const DateTime *dt, char *buf)

    int datetime_increment(DateTime *src, DateTime *incr)

    int datetime_is_valid_increment(const DateTime *src, const DateTime *incr)

    int datetime_check_increment(const DateTime *src, const DateTime *incr)

    int datetime_get_increment_type(const DateTime *dt, int *mode, int *from, int *to, int *fracsec)

    int datetime_set_increment_type(const DateTime *src, DateTime *incr)

    int datetime_get_local_timezone(int *minutes)

    void datetime_get_local_time(DateTime *dt)

    int datetime_days_in_month(int year, int month, int ad)

    int datetime_is_leap_year(int year, int ad)

    int datetime_days_in_year(int year, int ad)

    int datetime_is_same(const DateTime *src, const DateTime *dst)

    int datetime_scan(DateTime *dt, const char *buf)

    int datetime_is_positive(const DateTime *dt)

    int datetime_is_negative(const DateTime *dt)

    void datetime_set_positive(DateTime *dt)

    void datetime_set_negative(DateTime *dt)

    void datetime_invert_sign(DateTime *dt)

    int datetime_set_type(DateTime *dt, int mode, int from, int to, int fracsec)

    int datetime_get_type(const DateTime *dt, int *mode, int *from, int *to, int *fracsec)

    int datetime_is_valid_type(const DateTime *dt)

    int datetime_check_type(const DateTime *dt)

    int datetime_in_interval_year_month(int x)

    int datetime_in_interval_day_second(int x)

    int datetime_is_absolute(const DateTime *dt)

    int datetime_is_relative(const DateTime *dt)

    int datetime_check_timezone(const DateTime *dt, int minutes)

    int datetime_get_timezone(const DateTime *dt, int *minutes)

    int datetime_set_timezone(DateTime *dt, int minutes)

    int datetime_unset_timezone(DateTime *dt)

    int datetime_is_valid_timezone(int minutes)

    int datetime_change_timezone(DateTime *dt, int minutes)

    int datetime_change_to_utc(DateTime *dt)

    void datetime_decompose_timezone(int tz, int *hours, int *minutes)

    int datetime_check_year(const DateTime *dt, int year)

    int datetime_check_month(const DateTime *dt, int month)

    int datetime_check_day(const DateTime *dt, int day)

    int datetime_check_hour(const DateTime *dt, int hour)

    int datetime_check_minute(const DateTime *dt, int minute)

    int datetime_check_second(const DateTime *dt, double second)

    int datetime_check_fracsec(const DateTime *dt, int fracsec)

    int datetime_get_year(const DateTime *dt, int *year)

    int datetime_set_year(DateTime *dt, int year)

    int datetime_get_month(const DateTime *dt, int *month)

    int datetime_set_month(DateTime *dt, int month)

    int datetime_get_day(const DateTime *dt, int *day)

    int datetime_set_day(DateTime *dt, int day)

    int datetime_get_hour(const DateTime *dt, int *hour)

    int datetime_set_hour(DateTime *dt, int hour)

    int datetime_get_minute(const DateTime *dt, int *minute)

    int datetime_set_minute(DateTime *dt, int minute)

    int datetime_get_second(const DateTime *dt, double *second)

    int datetime_set_second(DateTime *dt, double second)

    int datetime_get_fracsec(const DateTime *dt, int *fracsec)

    int datetime_set_fracsec(DateTime *dt, int fracsec)

    const char *GRASS_copyright
    ctypedef enum STD_OPT:
        G_OPT_UNDEFINED
        G_OPT_DB_SQL
        G_OPT_DB_WHERE
        G_OPT_DB_TABLE
        G_OPT_DB_DRIVER
        G_OPT_DB_DATABASE
        G_OPT_DB_SCHEMA
        G_OPT_DB_COLUMN
        G_OPT_DB_COLUMNS
        G_OPT_DB_KEYCOLUMN
        G_OPT_I_GROUP
        G_OPT_I_SUBGROUP
        G_OPT_R_INPUT
        G_OPT_R_INPUTS
        G_OPT_R_OUTPUT
        G_OPT_R_MAP
        G_OPT_R_MAPS
        G_OPT_R_BASE
        G_OPT_R_COVER
        G_OPT_R_ELEV
        G_OPT_R_ELEVS
        G_OPT_R3_INPUT
        G_OPT_R3_INPUTS
        G_OPT_R3_OUTPUT
        G_OPT_R3_MAP
        G_OPT_R3_MAPS
        G_OPT_R3_TYPE
        G_OPT_R3_PRECISION
        G_OPT_R3_TILE_DIMENSION
        G_OPT_R3_COMPRESSION
        G_OPT_V_INPUT
        G_OPT_V_INPUTS
        G_OPT_V_OUTPUT
        G_OPT_V_MAP
        G_OPT_V_MAPS
        G_OPT_V_TYPE
        G_OPT_V3_TYPE
        G_OPT_V_FIELD
        G_OPT_V_FIELD_ALL
        G_OPT_V_CAT
        G_OPT_V_CATS
        G_OPT_V_ID
        G_OPT_V_IDS
        G_OPT_F_INPUT
        G_OPT_F_OUTPUT
        G_OPT_F_SEP
        G_OPT_C_FG
        G_OPT_C_BG
        G_OPT_M_UNITS
        G_OPT_M_DATATYPE
        G_OPT_M_MAPSET
        G_OPT_M_COORDS
        G_OPT_M_COLR
        G_OPT_M_DIR
        G_OPT_STDS_INPUT
        G_OPT_STDS_INPUTS
        G_OPT_STDS_OUTPUT
        G_OPT_STRDS_INPUT
        G_OPT_STRDS_INPUTS
        G_OPT_STRDS_OUTPUT
        G_OPT_STR3DS_INPUT
        G_OPT_STR3DS_INPUTS
        G_OPT_STR3DS_OUTPUT
        G_OPT_STVDS_INPUT
        G_OPT_STVDS_INPUTS
        G_OPT_STVDS_OUTPUT
        G_OPT_MAP_INPUT
        G_OPT_MAP_INPUTS
        G_OPT_STDS_TYPE
        G_OPT_MAP_TYPE
        G_OPT_T_TYPE
        G_OPT_T_WHERE
        G_OPT_T_SAMPLE


    ctypedef enum STD_FLG:
        G_FLG_UNDEFINED
        G_FLG_V_TABLE
        G_FLG_V_TOPO


    cdef enum:
        G_ELEMENT_RASTER
        G_ELEMENT_RASTER3D
        G_ELEMENT_VECTOR
        G_ELEMENT_OLDVECTOR
        G_ELEMENT_ASCIIVECTOR
        G_ELEMENT_ICON
        G_ELEMENT_LABEL
        G_ELEMENT_SITE
        G_ELEMENT_REGION
        G_ELEMENT_REGION3D
        G_ELEMENT_GROUP
        G_ELEMENT_3DVIEW

    cdef struct Cell_head:
        int format
        int compressed
        int rows
        int rows3
        int cols
        int cols3
        int depths
        int proj
        int zone
        double ew_res
        double ew_res3
        double ns_res
        double ns_res3
        double tb_res
        double north
        double south
        double east
        double west
        double top
        double bottom

    cdef struct G_3dview:
        char pgm_id[40]
        float from_to[2][3]
        float fov
        float twist
        float exag
        int mesh_freq
        int poly_freq
        int display_type
        int lightson
        int dozero
        int colorgrid
        int shading
        int fringe
        int surfonly
        int doavg
        char grid_col[40]
        char bg_col[40]
        char other_col[40]
        float lightpos[4]
        float lightcol[3]
        float ambient
        float shine
        Cell_head vwin

    cdef struct Key_Value:
        int nitems
        int nalloc
        char **key
        char **value

    cdef struct Option:
        const char *key
        int type
        int required
        int multiple
        const char *options
        const char **opts
        const char *key_desc
        const char *label
        const char *description
        const char *descriptions
        const char **descs
        char *answer
        const char *def
        char **answers
        Option *next_opt
        const char *gisprompt
        const char *guisection
        const char *guidependency
        int (*checker)(const char *)
        int count

    cdef struct Flag:
        char key
        char answer
        char suppress_required
        const char *label
        const char *description
        const char *guisection
        Flag *next_flag

    cdef struct GModule:
        const char *label
        const char *description
        const char **keywords
        int overwrite
        int verbose

    cdef struct TimeStamp:
        DateTime dt[2]
        int count

    cdef struct Counter:
        int value

    cdef struct Popen:
        FILE *fp
        int pid

    ctypedef int CELL

    ctypedef double DCELL

    ctypedef float FCELL

    cdef struct _Color_Value_:
        DCELL value
        unsigned char red
        unsigned char grn
        unsigned char blu

    cdef struct _Color_Rule_:
        _Color_Value_ low
        _Color_Value_ high
        _Color_Rule_ *next
        _Color_Rule_ *prev

    cdef struct ___Color_Info__lookup:
        unsigned char *red
        unsigned char *grn
        unsigned char *blu
        unsigned char *set
        int nalloc
        int active

    ctypedef ___Color_Info__lookup ___Color_Info__lookup_t

    cdef struct ___Color_Info__fp_lookup:
        DCELL *vals
        _Color_Rule_ **rules
        int nalloc
        int active

    ctypedef ___Color_Info__fp_lookup ___Color_Info__fp_lookup_t

    cdef struct _Color_Info_:
        _Color_Rule_ *rules
        int n_rules
        ___Color_Info__lookup_t lookup
        ___Color_Info__fp_lookup_t fp_lookup
        DCELL min
        DCELL max

    cdef struct Colors:
        int version
        DCELL shift
        int invert
        int is_float
        int null_set
        unsigned char null_red
        unsigned char null_grn
        unsigned char null_blu
        int undef_set
        unsigned char undef_red
        unsigned char undef_grn
        unsigned char undef_blu
        _Color_Info_ fixed
        _Color_Info_ modular
        DCELL cmin
        DCELL cmax
        int organizing

    cdef struct ilist:
        int *value
        int n_values
        int alloc_values

    ctypedef __u_char u_char

    ctypedef __u_short u_short

    ctypedef __u_int u_int

    ctypedef __u_long u_long

    ctypedef __quad_t quad_t

    ctypedef __u_quad_t u_quad_t

    ctypedef __fsid_t fsid_t

    ctypedef __loff_t loff_t

    ctypedef __ino_t ino_t

    ctypedef __dev_t dev_t

    ctypedef __gid_t gid_t

    ctypedef __mode_t mode_t

    ctypedef __nlink_t nlink_t

    ctypedef __uid_t uid_t

    ctypedef __pid_t pid_t

    ctypedef __id_t id_t

    ctypedef __daddr_t daddr_t

    ctypedef __caddr_t caddr_t

    ctypedef __key_t key_t

    ctypedef __clock_t clock_t

    ctypedef __time_t time_t

    ctypedef __clockid_t clockid_t

    ctypedef __timer_t timer_t

    ctypedef unsigned long ulong

    ctypedef unsigned short ushort

    ctypedef unsigned int uint

    ctypedef signed char int8_t

    ctypedef short int16_t

    ctypedef int int32_t

    ctypedef long int64_t

    ctypedef unsigned char u_int8_t

    ctypedef unsigned short u_int16_t

    ctypedef unsigned int u_int32_t

    ctypedef unsigned long u_int64_t

    ctypedef long register_t

    ctypedef int __sig_atomic_t

    ctypedef struct __sigset_t:
        unsigned long __val[16]


    ctypedef __sigset_t sigset_t

    cdef struct timespec:
        __time_t tv_sec
        __syscall_slong_t tv_nsec

    cdef struct timeval:
        __time_t tv_sec
        __suseconds_t tv_usec

    ctypedef __suseconds_t suseconds_t

    ctypedef long __fd_mask

    ctypedef struct fd_set:
        __fd_mask __fds_bits[16]


    ctypedef __fd_mask fd_mask

    int select(int __nfds, fd_set *__readfds, fd_set *__writefds, fd_set *__exceptfds, timeval *__timeout)

    int pselect(int __nfds, fd_set *__readfds, fd_set *__writefds, fd_set *__exceptfds, timespec *__timeout, const __sigset_t *__sigmask)

    unsigned int gnu_dev_major(unsigned long long __dev)

    unsigned int gnu_dev_minor(unsigned long long __dev)

    unsigned long long gnu_dev_makedev(unsigned int __major, unsigned int __minor)

    ctypedef __blksize_t blksize_t

    ctypedef __blkcnt_t blkcnt_t

    ctypedef __fsblkcnt_t fsblkcnt_t

    ctypedef __fsfilcnt_t fsfilcnt_t

    ctypedef unsigned long pthread_t

    cdef union pthread_attr_t:
        char __size[56]
        long __align

    cdef struct __pthread_internal_list:
        __pthread_internal_list *__prev
        __pthread_internal_list *__next

    ctypedef __pthread_internal_list __pthread_list_t

    cdef struct __pthread_mutex_t___pthread_mutex_s:
        int __lock
        unsigned int __count
        int __owner
        unsigned int __nusers
        int __kind
        int __spins
        __pthread_list_t __list

    ctypedef __pthread_mutex_t___pthread_mutex_s __pthread_mutex_t___pthread_mutex_s_t

    ctypedef union pthread_mutex_t:
        __pthread_mutex_t___pthread_mutex_s_t __data
        char __size[40]
        long __align


    ctypedef union pthread_mutexattr_t:
        char __size[4]
        int __align


    cdef struct __pthread_cond_t___data:
        int __lock
        unsigned int __futex
        unsigned long long __total_seq
        unsigned long long __wakeup_seq
        unsigned long long __woken_seq
        void *__mutex
        unsigned int __nwaiters
        unsigned int __broadcast_seq

    ctypedef __pthread_cond_t___data __pthread_cond_t___data_t

    ctypedef union pthread_cond_t:
        __pthread_cond_t___data_t __data
        char __size[48]
        long long __align


    ctypedef union pthread_condattr_t:
        char __size[4]
        int __align


    ctypedef unsigned int pthread_key_t

    ctypedef int pthread_once_t

    cdef struct __pthread_rwlock_t___data:
        int __lock
        unsigned int __nr_readers
        unsigned int __readers_wakeup
        unsigned int __writer_wakeup
        unsigned int __nr_readers_queued
        unsigned int __nr_writers_queued
        int __writer
        int __shared
        unsigned long __pad1
        unsigned long __pad2
        unsigned int __flags

    ctypedef __pthread_rwlock_t___data __pthread_rwlock_t___data_t

    ctypedef union pthread_rwlock_t:
        __pthread_rwlock_t___data_t __data
        char __size[56]
        long __align


    ctypedef union pthread_rwlockattr_t:
        char __size[8]
        long __align


    ctypedef int pthread_spinlock_t

    ctypedef union pthread_barrier_t:
        char __size[32]
        long __align


    ctypedef union pthread_barrierattr_t:
        char __size[4]
        int __align


    int __sigismember(const __sigset_t *, int)

    int __sigaddset(__sigset_t *, int)

    int __sigdelset(__sigset_t *, int)

    ctypedef __sig_atomic_t sig_atomic_t

    cdef union sigval:
        int sival_int
        void *sival_ptr

    ctypedef sigval sigval_t

    ctypedef __clock_t __sigchld_clock_t

    cdef struct ____siginfo_t__sifields__kill:
        __pid_t si_pid
        __uid_t si_uid

    ctypedef ____siginfo_t__sifields__kill ____siginfo_t__sifields__kill_t

    cdef struct ____siginfo_t__sifields__timer:
        int si_tid
        int si_overrun
        sigval_t si_sigval

    ctypedef ____siginfo_t__sifields__timer ____siginfo_t__sifields__timer_t

    cdef struct ____siginfo_t__sifields__rt:
        __pid_t si_pid
        __uid_t si_uid
        sigval_t si_sigval

    ctypedef ____siginfo_t__sifields__rt ____siginfo_t__sifields__rt_t

    cdef struct ____siginfo_t__sifields__sigchld:
        __pid_t si_pid
        __uid_t si_uid
        int si_status
        __sigchld_clock_t si_utime
        __sigchld_clock_t si_stime

    ctypedef ____siginfo_t__sifields__sigchld ____siginfo_t__sifields__sigchld_t

    cdef struct ____siginfo_t__sifields__sigfault:
        void *si_addr

    ctypedef ____siginfo_t__sifields__sigfault ____siginfo_t__sifields__sigfault_t

    cdef struct ____siginfo_t__sifields__sigpoll:
        long si_band
        int si_fd

    ctypedef ____siginfo_t__sifields__sigpoll ____siginfo_t__sifields__sigpoll_t

    cdef struct ____siginfo_t__sifields__sigsys:
        void *_call_addr
        int _syscall
        unsigned int _arch

    ctypedef ____siginfo_t__sifields__sigsys ____siginfo_t__sifields__sigsys_t

    cdef union __siginfo_t__sifields:
        int _pad[28]
        ____siginfo_t__sifields__kill_t _kill
        ____siginfo_t__sifields__timer_t _timer
        ____siginfo_t__sifields__rt_t _rt
        ____siginfo_t__sifields__sigchld_t _sigchld
        ____siginfo_t__sifields__sigfault_t _sigfault
        ____siginfo_t__sifields__sigpoll_t _sigpoll
        ____siginfo_t__sifields__sigsys_t _sigsys

    ctypedef __siginfo_t__sifields __siginfo_t__sifields_t

    ctypedef struct siginfo_t:
        int si_signo
        int si_errno
        int si_code
        __siginfo_t__sifields_t _sifields


    cdef enum:
        SI_ASYNCNL
        SI_TKILL
        SI_SIGIO
        SI_ASYNCIO
        SI_MESGQ
        SI_TIMER
        SI_QUEUE
        SI_USER
        SI_KERNEL

    cdef enum:
        ILL_ILLOPC
        ILL_ILLOPN
        ILL_ILLADR
        ILL_ILLTRP
        ILL_PRVOPC
        ILL_PRVREG
        ILL_COPROC
        ILL_BADSTK

    cdef enum:
        FPE_INTDIV
        FPE_INTOVF
        FPE_FLTDIV
        FPE_FLTOVF
        FPE_FLTUND
        FPE_FLTRES
        FPE_FLTINV
        FPE_FLTSUB

    cdef enum:
        SEGV_MAPERR
        SEGV_ACCERR

    cdef enum:
        BUS_ADRALN
        BUS_ADRERR
        BUS_OBJERR

    cdef enum:
        TRAP_BRKPT
        TRAP_TRACE

    cdef enum:
        CLD_EXITED
        CLD_KILLED
        CLD_DUMPED
        CLD_TRAPPED
        CLD_STOPPED
        CLD_CONTINUED

    cdef enum:
        POLL_IN
        POLL_OUT
        POLL_MSG
        POLL_ERR
        POLL_PRI
        POLL_HUP

    cdef struct ____sigevent__sigev_un__sigev_thread:
        void (*_function)(sigval)
        pthread_attr_t *_attribute

    ctypedef ____sigevent__sigev_un__sigev_thread ____sigevent__sigev_un__sigev_thread_t

    cdef union __sigevent__sigev_un:
        int _pad[12]
        __pid_t _tid
        ____sigevent__sigev_un__sigev_thread_t _sigev_thread

    ctypedef __sigevent__sigev_un __sigevent__sigev_un_t

    cdef struct sigevent:
        sigval_t sigev_value
        int sigev_signo
        int sigev_notify
        __sigevent__sigev_un_t _sigev_un

    ctypedef sigevent sigevent_t

    cdef enum:
        SIGEV_SIGNAL
        SIGEV_NONE
        SIGEV_THREAD
        SIGEV_THREAD_ID

    ctypedef void (*__sighandler_t)(int)

    __sighandler_t __sysv_signal(int __sig, __sighandler_t __handler)

    __sighandler_t signal(int __sig, __sighandler_t __handler)

    int kill(__pid_t __pid, int __sig)

    int killpg(__pid_t __pgrp, int __sig)

    int raise(int __sig)

    __sighandler_t ssignal(int __sig, __sighandler_t __handler)

    int gsignal(int __sig)

    void psignal(int __sig, const char *__s)

    void psiginfo(const siginfo_t *__pinfo, const char *__s)

    int __sigpause(int __sig_or_mask, int __is_sig)

    int sigblock(int __mask)

    int sigsetmask(int __mask)

    int siggetmask()

    ctypedef __sighandler_t sig_t

    int sigemptyset(sigset_t *__set)

    int sigfillset(sigset_t *__set)

    int sigaddset(sigset_t *__set, int __signo)

    int sigdelset(sigset_t *__set, int __signo)

    int sigismember(const sigset_t *__set, int __signo)

    cdef union __sigaction___sigaction_handler:
        __sighandler_t sa_handler
        void (*sa_sigaction)(int, siginfo_t *, void *)

    ctypedef __sigaction___sigaction_handler __sigaction___sigaction_handler_t

    cdef struct sigaction:
        __sigaction___sigaction_handler_t __sigaction_handler
        __sigset_t sa_mask
        int sa_flags
        void (*sa_restorer)()

    int sigprocmask(int __how, const sigset_t *__set, sigset_t *__oset)

    int sigsuspend(const sigset_t *__set)

    int sigaction(int __sig, sigaction *__act, sigaction *__oact)

    int sigpending(sigset_t *__set)

    int sigwait(const sigset_t *__set, int *__sig)

    int sigwaitinfo(const sigset_t *__set, siginfo_t *__info)

    int sigtimedwait(const sigset_t *__set, siginfo_t *__info, timespec *__timeout)

    int sigqueue(__pid_t __pid, int __sig, sigval __val)

    const char *const _sys_siglist[65]
    const char *const sys_siglist[65]
    cdef struct sigvec:
        __sighandler_t sv_handler
        int sv_mask
        int sv_flags

    int sigvec(int __sig, sigvec *__vec, sigvec *__ovec)

    cdef struct _fpx_sw_bytes:
        __uint32_t magic1
        __uint32_t extended_size
        __uint64_t xstate_bv
        __uint32_t xstate_size
        __uint32_t padding[7]

    cdef struct _fpreg:
        unsigned short significand[4]
        unsigned short exponent

    cdef struct _fpxreg:
        unsigned short significand[4]
        unsigned short exponent
        unsigned short padding[3]

    cdef struct _xmmreg:
        __uint32_t element[4]

    cdef struct _fpstate:
        __uint16_t cwd
        __uint16_t swd
        __uint16_t ftw
        __uint16_t fop
        __uint64_t rip
        __uint64_t rdp
        __uint32_t mxcsr
        __uint32_t mxcr_mask
        _fpxreg _st[8]
        _xmmreg _xmm[16]
        __uint32_t padding[24]

    cdef union __sigcontext_:
        _fpstate *fpstate
        __uint64_t __fpstate_word

    ctypedef __sigcontext_ __sigcontext__t

    cdef struct sigcontext:
        __uint64_t r8
        __uint64_t r9
        __uint64_t r10
        __uint64_t r11
        __uint64_t r12
        __uint64_t r13
        __uint64_t r14
        __uint64_t r15
        __uint64_t rdi
        __uint64_t rsi
        __uint64_t rbp
        __uint64_t rbx
        __uint64_t rdx
        __uint64_t rax
        __uint64_t rcx
        __uint64_t rsp
        __uint64_t rip
        __uint64_t eflags
        unsigned short cs
        unsigned short gs
        unsigned short fs
        unsigned short __pad0
        __uint64_t err
        __uint64_t trapno
        __uint64_t oldmask
        __uint64_t cr2
        __uint64_t __reserved1[8]

    cdef struct _xsave_hdr:
        __uint64_t xstate_bv
        __uint64_t reserved1[2]
        __uint64_t reserved2[5]

    cdef struct _ymmh_state:
        __uint32_t ymmh_space[64]

    cdef struct _xstate:
        _fpstate fpstate
        _xsave_hdr xstate_hdr
        _ymmh_state ymmh

    int sigreturn(sigcontext *__scp)

    int siginterrupt(int __sig, int __interrupt)

    cdef struct sigstack:
        void *ss_sp
        int ss_onstack

    cdef enum:
        SS_ONSTACK
        SS_DISABLE

    cdef struct sigaltstack:
        void *ss_sp
        int ss_flags
        int ss_size

    ctypedef sigaltstack stack_t

    ctypedef long long greg_t

    ctypedef greg_t gregset_t[23]

    cdef struct _libc_fpxreg:
        unsigned short significand[4]
        unsigned short exponent
        unsigned short padding[3]

    cdef struct _libc_xmmreg:
        __uint32_t element[4]

    cdef struct _libc_fpstate:
        __uint16_t cwd
        __uint16_t swd
        __uint16_t ftw
        __uint16_t fop
        __uint64_t rip
        __uint64_t rdp
        __uint32_t mxcsr
        __uint32_t mxcr_mask
        _libc_fpxreg _st[8]
        _libc_xmmreg _xmm[16]
        __uint32_t padding[24]

    ctypedef _libc_fpstate *fpregset_t

    ctypedef struct mcontext_t:
        gregset_t gregs
        fpregset_t fpregs
        unsigned long long __reserved1[8]


    cdef struct ucontext:
        unsigned long uc_flags
        ucontext *uc_link
        stack_t uc_stack
        mcontext_t uc_mcontext
        __sigset_t uc_sigmask
        _libc_fpstate __fpregs_mem

    ctypedef ucontext ucontext_t

    int sigstack(sigstack *__ss, sigstack *__oss)

    int sigaltstack(sigaltstack *__ss, sigaltstack *__oss)

    int pthread_sigmask(int __how, const __sigset_t *__newmask, __sigset_t *__oldmask)

    int pthread_kill(pthread_t __threadid, int __signo)

    int __libc_current_sigrtmin()

    int __libc_current_sigrtmax()

    void G_adjust_Cell_head(Cell_head *, int, int)

    void G_adjust_Cell_head3(Cell_head *, int, int, int)

    void *G__malloc(const char *, int, int size_t)

    void *G__calloc(const char *, int, int size_t, int)

    void *G__realloc(const char *, int, void *, int size_t)

    void G_free(void *)

    int G_begin_cell_area_calculations()

    double G_area_of_cell_at_row(int)

    int G_begin_polygon_area_calculations()

    double G_area_of_polygon(const double *, const double *, int)

    void G_begin_zone_area_on_ellipsoid(double, double, double)

    double G_darea0_on_ellipsoid(double)

    double G_area_for_zone_on_ellipsoid(double, double)

    void G_begin_ellipsoid_polygon_area(double, double)

    double G_ellipsoid_polygon_area(const double *, const double *, int)

    double G_planimetric_polygon_area(const double *, const double *, int)

    void G_begin_zone_area_on_sphere(double, double)

    double G_darea0_on_sphere(double)

    double G_area_for_zone_on_sphere(double, double)

    void G_ascii_check(char *)

    int G_vasprintf(char **, const char *, va_list)

    int G_asprintf(char **, const char *)

    int G_rasprintf(char **, int *, const char *)

    char *G_basename(char *, const char *)

    void G_bresenham_line(int, int, int, int, int (*)(int, int))

    void G_clicker()

    char *G_color_rules_options()

    char *G_color_rules_descriptions()

    void G_list_color_rules(FILE *)

    int G_find_color_rule(const char *)

    int G_num_standard_colors()

    int G_insert_commas(char *)

    void G_remove_commas(char *)

    int G_recursive_copy(const char *, const char *)

    int G_copy_file(const char *, const char *)

    int G_is_initialized(int *)

    void G_initialize_done(int *)

    void G_init_counter(Counter *, int)

    int G_counter_next(Counter *)

    const char *G_date()

    int G_get_datum_by_name(const char *)

    const char *G_datum_name(int)

    const char *G_datum_description(int)

    const char *G_datum_ellipsoid(int)

    int G_get_datumparams_from_projinfo(Key_Value *, char *, char *)

    void G_read_datum_table()

    void G_init_debug()

    int G_debug(int, const char *)

    int G_begin_distance_calculations()

    double G_distance(double, double, double, double)

    double G_distance_between_line_segments(double, double, double, double, double, double, double, double)

    double G_distance_point_to_line_segment(double, double, double, double, double, double)

    void G_done_msg(const char *)

    int G_is_little_endian()

    void G_init_env()

    const char *G_getenv(const char *)

    const char *G_getenv2(const char *, int)

    const char *G__getenv(const char *)

    const char *G__getenv2(const char *, int)

    void G_setenv(const char *, const char *)

    void G_setenv2(const char *, const char *, int)

    void G__setenv(const char *, const char *)

    void G__setenv2(const char *, const char *, int)

    void G_unsetenv(const char *)

    void G_unsetenv2(const char *, int)

    void G__write_env()

    const char *G__env_name(int)

    void G__read_env()

    void G_set_gisrc_mode(int)

    int G_get_gisrc_mode()

    void G__create_alt_env()

    void G__switch_env()

    int G_info_format()

    void G_message(const char *)

    void G_verbose_message(const char *)

    void G_important_message(const char *)

    void G_fatal_error(const char *)

    void G_warning(const char *)

    int G_suppress_warnings(int)

    int G_sleep_on_error(int)

    void G_set_error_routine(int (*)(const char *, int))

    void G_unset_error_routine()

    void G_init_logging()

    char *G_file_name(char *, const char *, const char *, const char *)

    char *G_file_name_misc(char *, const char *, const char *, const char *, const char *)

    const char *G_find_file(const char *, char *, const char *)

    const char *G_find_file2(const char *, const char *, const char *)

    const char *G_find_file_misc(const char *, const char *, char *, const char *)

    const char *G_find_file2_misc(const char *, const char *, const char *, const char *)

    char *G_find_etc(const char *)

    const char *G_find_raster(char *, const char *)

    const char *G_find_raster2(const char *, const char *)

    const char *G_find_raster3d(const char *, const char *)

    const char *G_find_vector(char *, const char *)

    const char *G_find_vector2(const char *, const char *)

    int G_zlib_compress(const unsigned char *, int, unsigned char *, int)

    int G_zlib_expand(const unsigned char *, int, unsigned char *, int)

    int G_zlib_write(int, const unsigned char *, int)

    int G_zlib_read(int, int, unsigned char *, int)

    int G_zlib_write_noCompress(int, const unsigned char *, int)

    int G_begin_geodesic_equation(double, double, double, double)

    double G_geodesic_lat_from_lon(double)

    void G_begin_geodesic_distance(double, double)

    void G_set_geodesic_distance_lat1(double)

    void G_set_geodesic_distance_lat2(double)

    double G_geodesic_distance_lon_to_lon(double, double)

    double G_geodesic_distance(double, double, double, double)

    int G_get_ellipsoid_parameters(double *, double *)

    int G_get_spheroid_by_name(const char *, double *, double *, double *)

    int G_get_ellipsoid_by_name(const char *, double *, double *)

    const char *G_ellipsoid_name(int)

    const char *G_ellipsoid_description(int)

    int G_read_ellipsoid_table(int)

    Key_Value *G_get_projunits()

    Key_Value *G_get_projinfo()

    void G_get_window(Cell_head *)

    void G_get_default_window(Cell_head *)

    void G__get_window(Cell_head *, const char *, const char *, const char *)

    int G_getl(char *, int, FILE *)

    int G_getl2(char *, int, FILE *)

    const char *G_gisbase()

    const char *G_gisdbase()

    void G__gisinit(const char *, const char *)

    void G__no_gisinit(const char *)

    void G__check_gisinit()

    void G_init_all()

    void G_add_error_handler(void (*)(void *), void *)

    void G_remove_error_handler(void (*)(void *), void *)

    void G__call_error_handlers()

    const char *G_home()

    const char *G__home()

    void G_init_ilist(ilist *)

    void G_ilist_add(ilist *, int)

    int G_intersect_line_segments(double, double, double, double, double, double, double, double, double *, double *, double *, double *)

    int G_is_gisbase(const char *)

    int G_is_location(const char *)

    int G_is_mapset(const char *)

    Key_Value *G_create_key_value()

    void G_set_key_value(const char *, const char *, Key_Value *)

    const char *G_find_key_value(const char *, Key_Value *)

    void G_free_key_value(Key_Value *)

    int G_fwrite_key_value(FILE *, Key_Value *)

    Key_Value *G_fread_key_value(FILE *)

    void G_write_key_value_file(const char *, Key_Value *)

    Key_Value *G_read_key_value_file(const char *)

    void G_update_key_value_file(const char *, const char *, const char *)

    int G_lookup_key_value_from_file(const char *, const char *, char *, int)

    int G_legal_filename(const char *)

    int G_check_input_output_name(const char *, const char *, int)

    void G_set_distance_to_line_tolerance(double)

    double G_distance2_point_to_line(double, double, double, double, double, double)

    void G_list_element(const char *, const char *, const char *, int (*)(const char *, const char *, const char *))

    char **G_list(int, const char *, const char *, const char *)

    void G_free_list(char **)

    void G_lat_format(double, char *)

    const char *G_lat_format_string()

    void G_lon_format(double, char *)

    const char *G_lon_format_string()

    void G_llres_format(double, char *)

    const char *G_llres_format_string()

    void G_lat_parts(double, int *, int *, double *, char *)

    void G_lon_parts(double, int *, int *, double *, char *)

    int G_lat_scan(const char *, double *)

    int G_lon_scan(const char *, double *)

    int G_llres_scan(const char *, double *)

    const char *G_location()

    char *G_location_path()

    void G_set_ls_filter(int (*)(const char *, void *), void *)

    void G_set_ls_exclude_filter(int (*)(const char *, void *), void *)

    char **G__ls(const char *, int *)

    void G_ls(const char *, FILE *)

    void G_ls_format(char **, int, int, FILE *)

    void *G_ls_regex_filter(const char *, int, int)

    void *G_ls_glob_filter(const char *, int)

    void G_free_ls_filter(void *)

    const char *G__machine_name()

    int G__make_location(const char *, Cell_head *, Key_Value *, Key_Value *, FILE *)

    int G_make_location(const char *, Cell_head *, Key_Value *, Key_Value *, FILE *)

    int G_compare_projections(Key_Value *, Key_Value *, Key_Value *, Key_Value *)

    int G__make_mapset(const char *gisdbase_name, const char *location_name, const char *mapset_name)

    int G_make_mapset(const char *gisdbase_name, const char *location_name, const char *mapset_name)

    char *G_tolcase(char *)

    char *G_toucase(char *)

    const char *G_mapset()

    char *G_mapset_path()

    int G__make_mapset_element(const char *)

    int G__make_mapset_element_misc(const char *, const char *)

    int G__mapset_permissions(const char *)

    int G__mapset_permissions2(const char *, const char *, const char *)

    const char *G__mapset_name(int)

    void G_get_list_of_mapsets()

    void G__create_alt_search_path()

    void G__switch_search_path()

    void G_reset_mapsets()

    char **G_available_mapsets()

    void G_add_mapset_to_search_path(const char *)

    int G_is_mapset_in_search_path(const char *)

    char *G_myname()

    int G_color_values(const char *, float *, float *, float *)

    const char *G_color_name(int)

    void G_newlines_to_spaces(char *)

    int G_name_is_fully_qualified(const char *, char *, char *)

    char *G_fully_qualified_name(const char *, const char *)

    int G_unqualified_name(const char *, const char *, char *, char *)

    int G_open_new(const char *, const char *)

    int G_open_old(const char *, const char *, const char *)

    int G_open_update(const char *, const char *)

    FILE *G_fopen_new(const char *, const char *)

    FILE *G_fopen_old(const char *, const char *, const char *)

    FILE *G_fopen_append(const char *, const char *)

    FILE *G_fopen_modify(const char *, const char *)

    int G_open_new_misc(const char *, const char *, const char *)

    int G_open_old_misc(const char *, const char *, const char *, const char *)

    int G_open_update_misc(const char *, const char *, const char *)

    FILE *G_fopen_new_misc(const char *, const char *, const char *)

    FILE *G_fopen_old_misc(const char *, const char *, const char *, const char *)

    FILE *G_fopen_append_misc(const char *, const char *, const char *)

    FILE *G_fopen_modify_misc(const char *, const char *, const char *)

    int G_check_overwrite(int argc, char **argv)

    FILE *G_open_pager(Popen *)

    void G_close_pager(Popen *)

    FILE *G_open_mail(Popen *)

    void G_close_mail(Popen *)

    void G_disable_interactive()

    GModule *G_define_module()

    Flag *G_define_flag()

    Option *G_define_option()

    Option *G_define_standard_option(int)

    Flag *G_define_standard_flag(int)

    int G_parser(int, char **)

    void G_usage()

    char *G_recreate_command()

    void G_add_keyword(const char *)

    void G_set_keywords(const char *)

    int G_get_overwrite()

    char *G_option_to_separator(Option *)

    int G_mkdir(const char *)

    int G_is_dirsep(char)

    int G_is_absolute_path(const char *)

    char *G_convert_dirseps_to_host(char *)

    char *G_convert_dirseps_from_host(char *)

    int G_lstat(const char *, STRUCT_STAT *)

    int G_stat(const char *, STRUCT_STAT *)

    int G_owner(const char *)

    void G_percent(long, long, int)

    void G_percent_reset()

    void G_progress(long, int)

    void G_set_percent_routine(int (*)(int))

    void G_unset_percent_routine()

    void G_popen_clear(Popen *)

    FILE *G_popen_write(Popen *, const char *, const char **)

    FILE *G_popen_read(Popen *, const char *, const char **)

    void G_popen_close(Popen *)

    void G_setup_plot(double, double, double, double, int (*)(int, int), int (*)(int, int))

    void G_setup_fill(int)

    void G_plot_where_xy(double, double, int *, int *)

    void G_plot_where_en(int, int, double *, double *)

    void G_plot_point(double, double)

    void G_plot_line(double, double, double, double)

    void G_plot_line2(double, double, double, double)

    int G_plot_polygon(const double *, const double *, int)

    int G_plot_area(double *const *, double *const *, int *, int)

    void G_plot_fx(double (*)(double), double, double)

    int G_pole_in_polygon(const double *, const double *, int)

    const char *G_program_name()

    void G_set_program_name(const char *)

    int G_projection()

    int G__projection_units(int)

    const char *G__projection_name(int)

    const char *G_database_unit_name(int)

    const char *G_database_projection_name()

    const char *G_database_datum_name()

    const char *G_database_ellipse_name()

    double G_database_units_to_meters_factor()

    int G_put_window(Cell_head *)

    int G__put_window(Cell_head *, const char *, const char *)

    void G_putenv(const char *, const char *)

    double G_meridional_radius_of_curvature(double, double, double)

    double G_transverse_radius_of_curvature(double, double, double)

    double G_radius_of_conformal_tangent_sphere(double, double, double)

    void G__read_Cell_head(FILE *, Cell_head *, int)

    void G__read_Cell_head_array(char **, Cell_head *, int)

    int G_remove(const char *, const char *)

    int G_remove_misc(const char *, const char *, const char *)

    int G_rename_file(const char *, const char *)

    int G_rename(const char *, const char *, const char *)

    int G_begin_rhumbline_equation(double, double, double, double)

    double G_rhumbline_lat_from_lon(double)

    void G_rotate_around_point(double, double, double *, double *, double)

    void G_rotate_around_point_int(int, int, int *, int *, double)

    off_t G_ftell(FILE *)

    void G_fseek(FILE *, off_t, int)

    void G_get_set_window(Cell_head *)

    void G_set_window(Cell_head *)

    void G_unset_window()

    void G_shortest_way(double *, double *)

    void G_sleep(unsigned int)

    int G_snprintf(char *, int size_t, const char *)

    int G_strcasecmp(const char *, const char *)

    int G_strncasecmp(const char *, const char *, int)

    char *G_store(const char *)

    char *G_strchg(char *, char, char)

    char *G_str_replace(const char *, const char *, const char *)

    void G_strip(char *)

    char *G_chop(char *)

    void G_str_to_upper(char *)

    void G_str_to_lower(char *)

    int G_str_to_sql(char *)

    void G_squeeze(char *)

    char *G_strcasestr(const char *, const char *)

    void G_init_tempfile()

    char *G_tempfile()

    char *G__tempfile(int)

    void G__temp_element(char *)

    void G_init_timestamp(TimeStamp *)

    void G_set_timestamp(TimeStamp *, DateTime *)

    void G_set_timestamp_range(TimeStamp *, DateTime *, DateTime *)

    int G__read_timestamp(FILE *, TimeStamp *)

    int G__write_timestamp(FILE *, TimeStamp *)

    void G_get_timestamps(TimeStamp *, DateTime *, DateTime *, int *)

    int G_format_timestamp(TimeStamp *, char *)

    int G_scan_timestamp(TimeStamp *, const char *)

    int G_has_raster_timestamp(const char *, const char *)

    int G_read_raster_timestamp(const char *, const char *, TimeStamp *)

    int G_write_raster_timestamp(const char *, TimeStamp *)

    int G_remove_raster_timestamp(const char *)

    int G_has_vector_timestamp(const char *, const char *, const char *)

    int G_read_vector_timestamp(const char *, const char *, const char *, TimeStamp *)

    int G_write_vector_timestamp(const char *, const char *, TimeStamp *)

    int G_remove_vector_timestamp(const char *, const char *)

    int G_has_raster3d_timestamp(const char *, const char *)

    int G_read_raster3d_timestamp(const char *, const char *, TimeStamp *)

    int G_remove_raster3d_timestamp(const char *)

    int G_write_raster3d_timestamp(const char *, TimeStamp *)

    char **G_tokenize(const char *, const char *)

    char **G_tokenize2(const char *, const char *, const char *)

    int G_number_of_tokens(char **)

    void G_free_tokens(char **)

    void G_trim_decimal(char *)

    double G_units_to_meters_factor(int)

    double G_units_to_meters_factor_sq(int)

    const char *G_get_units_name(int, int, int)

    int G_units(const char *)

    int G_is_units_type_spatial(int)

    int G_is_units_type_temporal(int)

    char *G_rc_path(const char *, const char *)

    int G_verbose()

    int G_verbose_min()

    int G_verbose_std()

    int G_verbose_max()

    int G_set_verbose(int)

    void G_3dview_warning(int)

    int G_get_3dview_defaults(G_3dview *, Cell_head *)

    int G_put_3dview(const char *, const char *, G_3dview *, Cell_head *)

    int G_get_3dview(const char *, const char *, G_3dview *)

    const char *G_whoami()

    void G_adjust_window_to_box(Cell_head *, Cell_head *, int, int)

    void G_format_northing(double, char *, int)

    void G_format_easting(double, char *, int)

    void G_format_resolution(double, char *, int)

    int G_point_in_region(double, double)

    int G_point_in_window(double, double, Cell_head *)

    int G_limit_east(double *, int)

    int G_limit_west(double *, int)

    int G_limit_north(double *, int)

    int G_limit_south(double *, int)

    int G_window_overlap(Cell_head *, double, double, double, double)

    double G_window_percentage_overlap(Cell_head *, double, double, double, double)

    int G_scan_northing(const char *, double *, int)

    int G_scan_easting(const char *, double *, int)

    int G_scan_resolution(const char *, double *, int)

    double G_adjust_east_longitude(double, double)

    double G_adjust_easting(double, Cell_head *)

    void G__init_window()

    void G_begin_execute(void (*func)(void *), void *, void **, int)

    void G_end_execute(void **)

    void G_init_workers()

    void G_finish_workers()

    void G__write_Cell_head(FILE *, Cell_head *, int)

    void G__write_Cell_head3(FILE *, Cell_head *, int)

    void G_write_zeros(int, int size_t)

    void G_xdr_get_int(int *, const void *)

    void G_xdr_put_int(void *, const int *)

    void G_xdr_get_float(float *, const void *)

    void G_xdr_put_float(void *, const float *)

    void G_xdr_get_double(double *, const void *)

    void G_xdr_put_double(void *, const double *)

    void G_zero(void *, int)

    int G_zone()

    cdef enum overlay_operator:
        GV_O_AND
        GV_O_OVERLAP

    ctypedef overlay_operator OVERLAY_OPERATOR

    ctypedef enum SF_FeatureType:
        SF_UNKNOWN
        SF_POINT
        SF_LINESTRING
        SF_POLYGON
        SF_MULTIPOINT
        SF_MULTILINESTRING
        SF_MULTIPOLYGON
        SF_GEOMETRYCOLLECTION
        SF_NONE
        SF_LINEARRING
        SF_POINT25D
        SF_LINESTRING25D
        SF_POLYGON25D
        SF_MULTIPOINT25D
        SF_MULTILINESTRING25D
        SF_MULTIPOLYGON25D
        SF_GEOMETRYCOLLECTION25D


    ctypedef unsigned char dglByte_t

    ctypedef long dglInt32_t

    ctypedef long long dglInt64_t

    cdef union _dglHeapData:
        void *pv
        int n
        unsigned int un
        long l
        unsigned long ul

    ctypedef _dglHeapData dglHeapData_u

    cdef struct _dglHeapNode:
        long key
        dglHeapData_u value
        unsigned char flags

    ctypedef _dglHeapNode dglHeapNode_s

    cdef struct _dglHeap:
        long index
        long count
        long block
        dglHeapNode_s *pnode

    ctypedef _dglHeap dglHeap_s

    void dglHeapInit(dglHeap_s *pheap)

    ctypedef void (*dglHeapCancelItem_fn)(_dglHeap *, _dglHeapNode *)

    void dglHeapFree(dglHeap_s *pheap, dglHeapCancelItem_fn pfnCancelItem)

    int dglHeapInsertMax(dglHeap_s *pheap, long key, unsigned char flags, dglHeapData_u value)

    int dglHeapExtractMax(dglHeap_s *pheap, dglHeapNode_s *pnoderet)

    int dglHeapInsertMin(dglHeap_s *pheap, long key, unsigned char flags, dglHeapData_u value)

    int dglHeapExtractMin(dglHeap_s *pheap, dglHeapNode_s *pnoderet)

    ctypedef int (avl_comparison_func)(const void *, const void *, void *)

    ctypedef void (avl_item_func)(void *, void *)

    ctypedef void *(avl_copy_func)(void *, void *)

    cdef struct libavl_allocator:
        void *(*libavl_malloc)(libavl_allocator *, int)
        void (*libavl_free)(libavl_allocator *, void *)

    libavl_allocator avl_allocator_default
    void *avl_malloc(libavl_allocator *, int size_t)

    void avl_free(libavl_allocator *, void *)

    cdef struct __avl_table_avl_node:
        pass

    ctypedef __avl_table_avl_node __avl_table_avl_node_t

    cdef struct avl_table:
        avl_node *avl_root
        avl_comparison_func *avl_compare
        void *avl_param
        libavl_allocator *avl_alloc
        int avl_count
        unsigned long avl_generation

    cdef struct avl_node:
        avl_node *avl_link[2]
        void *avl_data
        signed char avl_balance

    cdef struct avl_traverser:
        avl_table *avl_table
        avl_node *avl_node
        avl_node *avl_stack[32]
        int avl_height
        unsigned long avl_generation

    avl_table *avl_create(avl_comparison_func *, void *, libavl_allocator *)

    avl_table *avl_copy(avl_table *, avl_copy_func *, avl_item_func *, libavl_allocator *)

    void avl_destroy(avl_table *, avl_item_func *)

    void **avl_probe(avl_table *, void *)

    void *avl_insert(avl_table *, void *)

    void *avl_replace(avl_table *, void *)

    void *avl_delete(avl_table *, const void *)

    void *avl_find(avl_table *, const void *)

    void avl_assert_insert(avl_table *, void *)

    void *avl_assert_delete(avl_table *, void *)

    void avl_t_init(avl_traverser *, avl_table *)

    void *avl_t_first(avl_traverser *, avl_table *)

    void *avl_t_last(avl_traverser *, avl_table *)

    void *avl_t_find(avl_traverser *, avl_table *, void *)

    void *avl_t_insert(avl_traverser *, avl_table *, void *)

    void *avl_t_copy(avl_traverser *, avl_traverser *)

    void *avl_t_next(avl_traverser *)

    void *avl_t_prev(avl_traverser *)

    void *avl_t_cur(avl_traverser *)

    void *avl_t_replace(avl_traverser *, void *)

    ctypedef int (tavl_comparison_func)(const void *, const void *, void *)

    ctypedef void (tavl_item_func)(void *, void *)

    ctypedef void *(tavl_copy_func)(void *, void *)

    libavl_allocator tavl_allocator_default
    void *tavl_malloc(libavl_allocator *, int size_t)

    void tavl_free(libavl_allocator *, void *)

    cdef struct __tavl_table_tavl_node:
        pass

    ctypedef __tavl_table_tavl_node __tavl_table_tavl_node_t

    cdef struct tavl_table:
        tavl_node *tavl_root
        tavl_comparison_func *tavl_compare
        void *tavl_param
        libavl_allocator *tavl_alloc
        int tavl_count

    cdef enum tavl_tag:
        TAVL_CHILD
        TAVL_THREAD

    cdef struct tavl_node:
        tavl_node *tavl_link[2]
        void *tavl_data
        unsigned char tavl_tag[2]
        signed char tavl_balance

    cdef struct tavl_traverser:
        tavl_table *tavl_table
        tavl_node *tavl_node

    tavl_table *tavl_create(tavl_comparison_func *, void *, libavl_allocator *)

    tavl_table *tavl_copy(tavl_table *, tavl_copy_func *, tavl_item_func *, libavl_allocator *)

    void tavl_destroy(tavl_table *, tavl_item_func *)

    void **tavl_probe(tavl_table *, void *)

    void *tavl_insert(tavl_table *, void *)

    void *tavl_replace(tavl_table *, void *)

    void *tavl_delete(tavl_table *, const void *)

    void *tavl_find(tavl_table *, const void *)

    void tavl_assert_insert(tavl_table *, void *)

    void *tavl_assert_delete(tavl_table *, void *)

    void tavl_t_init(tavl_traverser *, tavl_table *)

    void *tavl_t_first(tavl_traverser *, tavl_table *)

    void *tavl_t_last(tavl_traverser *, tavl_table *)

    void *tavl_t_find(tavl_traverser *, tavl_table *, void *)

    void *tavl_t_insert(tavl_traverser *, tavl_table *, void *)

    void *tavl_t_copy(tavl_traverser *, tavl_traverser *)

    void *tavl_t_next(tavl_traverser *)

    void *tavl_t_prev(tavl_traverser *)

    void *tavl_t_cur(tavl_traverser *)

    void *tavl_t_replace(tavl_traverser *, void *)

    void *dglTreeGetAllocator()

    cdef struct _dglTreeNode:
        long nKey
        void *pv
        void *pv2

    ctypedef _dglTreeNode dglTreeNode_s

    dglTreeNode_s *dglTreeNodeAlloc()

    void dglTreeNodeCancel(void *pvNode, void *pvParam)

    int dglTreeNodeCompare(const void *pvNodeA, const void *pvNodeB, void *pvParam)

    dglTreeNode_s *dglTreeNodeAdd(void *pvAVL, dglInt32_t nKey)

    cdef struct _dglTreeNode2:
        long nKey
        void *pv
        void *pv2
        void *pv3

    ctypedef _dglTreeNode2 dglTreeNode2_s

    dglTreeNode2_s *dglTreeNode2Alloc()

    void dglTreeNode2Cancel(void *pvNode, void *pvParam)

    int dglTreeNode2Compare(const void *pvNodeA, const void *pvNodeB, void *pvParam)

    dglTreeNode2_s *dglTreeNode2Add(void *pvAVL, dglInt32_t nKey)

    cdef struct _dglTreeEdge:
        dglInt32_t nKey
        void *pv

    ctypedef _dglTreeEdge dglTreeEdge_s

    dglTreeEdge_s *dglTreeEdgeAlloc()

    void dglTreeEdgeCancel(void *pvEdge, void *pvParam)

    int dglTreeEdgeCompare(const void *pvEdgeA, const void *pvEdgeB, void *pvParam)

    dglTreeEdge_s *dglTreeEdgeAdd(void *pvAVL, dglInt32_t nKey)

    cdef struct _dglTreeTouchI32:
        dglInt32_t nKey

    ctypedef _dglTreeTouchI32 dglTreeTouchI32_s

    dglTreeTouchI32_s *dglTreeTouchI32Alloc()

    void dglTreeTouchI32Cancel(void *pvTouchI32, void *pvParam)

    int dglTreeTouchI32Compare(const void *pvTouchI32A, const void *pvTouchI32B, void *pvParam)

    dglTreeTouchI32_s *dglTreeTouchI32Add(void *pvAVL, dglInt32_t nKey)

    cdef struct _dglTreePredist:
        dglInt32_t nKey
        dglInt32_t nFrom
        dglInt32_t nDistance
        dglInt32_t nCost
        dglInt32_t *pnEdge
        dglByte_t bFlags

    ctypedef _dglTreePredist dglTreePredist_s

    dglTreePredist_s *dglTreePredistAlloc()

    void dglTreePredistCancel(void *pvPredist, void *pvParam)

    int dglTreePredistCompare(const void *pvPredistA, const void *pvPredistB, void *pvParam)

    dglTreePredist_s *dglTreePredistAdd(void *pvAVL, dglInt32_t nKey)

    cdef struct _dglTreeNodePri32:
        dglInt32_t nKey
        dglInt32_t cnVal
        dglInt32_t *pnVal

    ctypedef _dglTreeNodePri32 dglTreeNodePri32_s

    dglTreeNodePri32_s *dglTreeNodePri32Alloc()

    void dglTreeNodePri32Cancel(void *pvNodePri32, void *pvParam)

    int dglTreeNodePri32Compare(const void *pvNodePri32A, const void *pvNodePri32B, void *pvParam)

    dglTreeNodePri32_s *dglTreeNodePri32Add(void *pvAVL, dglInt32_t nKey)

    cdef struct _dglTreeEdgePri32:
        dglInt32_t nKey
        dglInt32_t cnData
        dglInt32_t *pnData

    ctypedef _dglTreeEdgePri32 dglTreeEdgePri32_s

    dglTreeEdgePri32_s *dglTreeEdgePri32Alloc()

    void dglTreeEdgePri32Cancel(void *pvEdgePri32, void *pvParam)

    int dglTreeEdgePri32Compare(const void *pvEdgePri32A, const void *pvEdgePri32B, void *pvParam)

    dglTreeEdgePri32_s *dglTreeEdgePri32Add(void *pvAVL, dglInt32_t nKey)

    cdef struct _dglSPClipInput:
        dglInt32_t *pnPrevEdge
        dglInt32_t *pnNodeFrom
        dglInt32_t *pnEdge
        dglInt32_t *pnNodeTo
        dglInt32_t nFromDistance

    ctypedef _dglSPClipInput dglSPClipInput_s

    cdef struct _dglSPClipOutput:
        dglInt32_t nEdgeCost

    ctypedef _dglSPClipOutput dglSPClipOutput_s

    cdef struct _dglSpanClipInput:
        dglInt32_t *pnNodeFrom
        dglInt32_t *pnEdge
        dglInt32_t *pnNodeTo

    ctypedef _dglSpanClipInput dglSpanClipInput_s

    cdef struct _dglSpanClipOutput:
        dglInt32_t *pnReserved

    ctypedef _dglSpanClipOutput dglSpanClipOutput_s

    cdef struct dglGraph:
        pass

    ctypedef struct dglNodePrioritizer_s:
        void *pvAVL


    ctypedef struct dglEdgePrioritizer_s:
        int cEdge
        int iEdge
        dglTreeEdgePri32_s *pEdgePri32Item
        void *pvAVL


    cdef struct _dglGraph:
        int iErrno
        dglByte_t Version
        dglByte_t Endian
        dglInt32_t NodeAttrSize
        dglInt32_t EdgeAttrSize
        dglInt32_t aOpaqueSet[16]
        dglInt32_t cNode
        dglInt32_t cHead
        dglInt32_t cTail
        dglInt32_t cAlone
        dglInt32_t cEdge
        dglInt64_t nnCost
        dglInt32_t Flags
        dglInt32_t nFamily
        dglInt32_t nOptions
        void *pNodeTree
        void *pEdgeTree
        dglByte_t *pNodeBuffer
        dglInt32_t iNodeBuffer
        dglByte_t *pEdgeBuffer
        dglInt32_t iEdgeBuffer
        dglEdgePrioritizer_s edgePrioritizer
        dglNodePrioritizer_s nodePrioritizer

    ctypedef _dglGraph dglGraph_s

    ctypedef int (*dglSPClip_fn)(_dglGraph *, _dglSPClipInput *, _dglSPClipOutput *, void *)

    ctypedef int (*dglSpanClip_fn)(_dglGraph *, _dglGraph *, _dglSpanClipInput *, _dglSpanClipOutput *, void *)

    cdef struct _dglSPArc:
        dglInt32_t nFrom
        dglInt32_t nTo
        dglInt32_t *pnEdge
        dglInt32_t nDistance

    ctypedef _dglSPArc dglSPArc_s

    cdef struct _dglSPReport:
        dglInt32_t nStartNode
        dglInt32_t nDestinationNode
        dglInt32_t nDistance
        dglInt32_t cArc
        dglSPArc_s *pArc

    ctypedef _dglSPReport dglSPReport_s

    ctypedef struct dglSPCache_s:
        dglInt32_t nStartNode
        dglHeap_s NodeHeap
        void *pvVisited
        void *pvPredist


    ctypedef struct dglNodeTraverser_s:
        dglGraph_s *pGraph
        void *pvAVLT
        dglInt32_t *pnNode


    ctypedef struct dglEdgesetTraverser_s:
        dglGraph_s *pGraph
        dglInt32_t *pnEdgeset
        void *pvCurrentItem
        int cEdge
        int iEdge


    ctypedef struct dglEdgeTraverser_s:
        dglGraph_s *pGraph
        void *pvAVLT
        dglInt32_t *pnEdge
        dglEdgePrioritizer_s *pEdgePrioritizer


    int dglInitialize(dglGraph_s *pGraph, dglByte_t Version, dglInt32_t NodeAttrSize, dglInt32_t EdgeAttrSize, dglInt32_t *pOpaqueSet)

    int dglRelease(dglGraph_s *pGraph)

    int dglUnflatten(dglGraph_s *pGraph)

    int dglFlatten(dglGraph_s *pGraph)

    void dglResetStats(dglGraph_s *pgraph)

    dglInt32_t *dglGetNode(dglGraph_s *pGraph, dglInt32_t nNodeId)

    int dglAddNode(dglGraph_s *pGraph, dglInt32_t nNodeId, void *pvNodeAttr, dglInt32_t nFlags)

    int dglDelNode(dglGraph_s *pGraph, dglInt32_t nNodeId)

    dglInt32_t dglNodeGet_Id(dglGraph_s *pGraph, dglInt32_t *pnNode)

    dglInt32_t *dglNodeGet_OutEdgeset(dglGraph_s *pGraph, dglInt32_t *pnNode)

    dglInt32_t *dglNodeGet_InEdgeset(dglGraph_s *pGraph, dglInt32_t *pnNode)

    dglInt32_t dglNodeGet_Status(dglGraph_s *pGraph, dglInt32_t *pnNode)

    dglInt32_t *dglNodeGet_Attr(dglGraph_s *pGraph, dglInt32_t *pnNode)

    void dglNodeSet_Attr(dglGraph_s *pGraph, dglInt32_t *pnNode, dglInt32_t *pnAttr)

    int dglNodeGet_InDegree(dglGraph_s *pGraph, dglInt32_t *pnNode)

    int dglNodeGet_OutDegree(dglGraph_s *pGraph, dglInt32_t *pnNode)

    int dglNodeGet_Valence(dglGraph_s *pGraph, dglInt32_t *pnNode)

    dglInt32_t dglEdgesetGet_EdgeCount(dglGraph_s *pGraph, dglInt32_t *pnOutEdgeset)

    dglInt32_t dglEdgeGet_Id(dglGraph_s *pGraph, dglInt32_t *pnEdge)

    dglInt32_t dglEdgeGet_Cost(dglGraph_s *pGraph, dglInt32_t *pnEdge)

    dglInt32_t *dglEdgeGet_Head(dglGraph_s *pGraph, dglInt32_t *pnEdge)

    dglInt32_t *dglEdgeGet_Tail(dglGraph_s *pGraph, dglInt32_t *pnEdge)

    dglInt32_t *dglEdgeGet_Attr(dglGraph_s *pGraph, dglInt32_t *pnEdge)

    int dglEdgeSet_Attr(dglGraph_s *pGraph, dglInt32_t *pnAttr, dglInt32_t *pnEdge)

    dglInt32_t *dglGetEdge(dglGraph_s *pGraph, dglInt32_t nEdgeId)

    int dglDelEdge(dglGraph_s *pGraph, dglInt32_t nEdgeId)

    int dglAddEdge(dglGraph_s *pGraph, dglInt32_t nHead, dglInt32_t nTail, dglInt32_t nCost, dglInt32_t nEdge)

    int dglAddEdgeX(dglGraph_s *pGraph, dglInt32_t nHead, dglInt32_t nTail, dglInt32_t nCost, dglInt32_t nEdge, void *pvFnodeAttr, void *pvTnodeAttr, void *pvEdgeAttr, dglInt32_t nFlags)

    int dglWrite(dglGraph_s *pGraph, int fd)

    int dglRead(dglGraph_s *pGraph, int fd)

    ctypedef struct dglIOContext_s:
        dglGraph_s *pG
        int nState
        int fSwap
        int cb
        int ib
        unsigned char *pb
        unsigned char ab[118]


    int dglIOContextInitialize(dglGraph_s *, dglIOContext_s *)

    void dglIOContextRelease(dglIOContext_s *)

    ctypedef int (*dglWriteChunk_fn)(_dglGraph *, unsigned char *, int, void *)

    int dglWriteChunk(dglIOContext_s *, dglWriteChunk_fn, void *pvArg)

    int dglReadChunk(dglIOContext_s *, dglByte_t *pbChunk, int cbChunk)

    int dglShortestPath(dglGraph_s *pGraph, dglSPReport_s **ppReport, dglInt32_t nStartNode, dglInt32_t nDestinationNode, dglSPClip_fn fnClip, void *pvClipArg, dglSPCache_s *pCache)

    int dglShortestPathGraph(dglGraph_s *pGraph, dglGraph_s *pGraphOut, dglInt32_t nStartNode, dglInt32_t nDestinationNode, dglSPClip_fn fnClip, void *pvClipArg, dglSPCache_s *pCache)

    int dglShortestDistance(dglGraph_s *pGraph, dglInt32_t *pnDistance, dglInt32_t nStartNode, dglInt32_t nDestinationNode, dglSPClip_fn fnClip, void *pvClipArg, dglSPCache_s *pCache)

    int dglShortestDistanceGraph(dglGraph_s *pGraph, dglGraph_s *pGraphOut, dglInt32_t nStartNode, dglInt32_t nDestinationNode, dglSPClip_fn fnClip, void *pvClipArg, dglSPCache_s *pCache)

    int dglInitializeSPCache(dglGraph_s *pgraph, dglSPCache_s *pCache)

    void dglReleaseSPCache(dglGraph_s *pgraph, dglSPCache_s *pCache)

    void dglFreeSPReport(dglGraph_s *pGraph, dglSPReport_s *pSPReport)

    int dglDepthSpanning(dglGraph_s *pgraphInput, dglGraph_s *pgraphOutput, dglInt32_t nVertexNode, dglSpanClip_fn fnClip, void *pvClipArg)

    int dglDepthComponents(dglGraph_s *pgraphInput, dglGraph_s *pgraphComponents, int cgraphComponents, dglSpanClip_fn fnClip, void *pvClipArg)

    int dglMinimumSpanning(dglGraph_s *pgraphInput, dglGraph_s *pgraphOutput, dglInt32_t nVertexNode, dglSpanClip_fn fnClip, void *pvClipArg)

    int dglErrno(dglGraph_s *pgraph)

    char *dglStrerror(dglGraph_s *pgraph)

    int dglGet_Version(dglGraph_s *pGraph)

    void dglSet_Version(dglGraph_s *pGraph, int Version)

    int dglGet_Endianess(dglGraph_s *pGraph)

    int dglGet_NodeAttrSize(dglGraph_s *pGraph)

    int dglGet_EdgeAttrSize(dglGraph_s *pGraph)

    int dglGet_NodeCount(dglGraph_s *pGraph)

    int dglGet_HeadNodeCount(dglGraph_s *pGraph)

    int dglGet_TailNodeCount(dglGraph_s *pGraph)

    int dglGet_AloneNodeCount(dglGraph_s *pGraph)

    int dglGet_EdgeCount(dglGraph_s *pGraph)

    int dglGet_State(dglGraph_s *pGraph)

    dglInt32_t *dglGet_Opaque(dglGraph_s *pGraph)

    void dglSet_Opaque(dglGraph_s *pGraph, dglInt32_t *pOpaque)

    int dglGet_NodeSize(dglGraph_s *pGraph)

    int dglGet_EdgeSize(dglGraph_s *pGraph)

    dglInt64_t dglGet_Cost(dglGraph_s *pGraph)

    void dglSet_Cost(dglGraph_s *pGraph, dglInt64_t nnCost)

    dglInt32_t dglGet_Family(dglGraph_s *pGraph)

    void dglSet_Family(dglGraph_s *pGraph, dglInt32_t nFamily)

    dglInt32_t dglGet_Options(dglGraph_s *pGraph)

    void dglSet_Options(dglGraph_s *pGraph, dglInt32_t nOptions)

    dglEdgePrioritizer_s *dglGet_EdgePrioritizer(dglGraph_s *pGraph)

    dglNodePrioritizer_s *dglGet_NodePrioritizer(dglGraph_s *pGraph)

    int dglNode_T_Initialize(dglNodeTraverser_s *pTraverser, dglGraph_s *pGraph)

    void dglNode_T_Release(dglNodeTraverser_s *pTraverser)

    dglInt32_t *dglNode_T_First(dglNodeTraverser_s *pTraverser)

    dglInt32_t *dglNode_T_Last(dglNodeTraverser_s *pTraverser)

    dglInt32_t *dglNode_T_Next(dglNodeTraverser_s *pTraverser)

    dglInt32_t *dglNode_T_Prev(dglNodeTraverser_s *pTraverser)

    dglInt32_t *dglNode_T_Find(dglNodeTraverser_s *pTraverser, dglInt32_t nNodeId)

    int dglEdgeset_T_Initialize(dglEdgesetTraverser_s *pTraverser, dglGraph_s *pGraph, dglInt32_t *pnEdgeset)

    void dglEdgeset_T_Release(dglEdgesetTraverser_s *pTraverser)

    dglInt32_t *dglEdgeset_T_First(dglEdgesetTraverser_s *pTraverser)

    dglInt32_t *dglEdgeset_T_Next(dglEdgesetTraverser_s *pTraverser)

    int dglEdge_T_Initialize(dglEdgeTraverser_s *pTraverser, dglGraph_s *pGraph, dglEdgePrioritizer_s *pEdgePrioritizer)

    void dglEdge_T_Release(dglEdgeTraverser_s *pTraverser)

    dglInt32_t *dglEdge_T_First(dglEdgeTraverser_s *pTraverser)

    dglInt32_t *dglEdge_T_Next(dglEdgeTraverser_s *pTraverser)

    ctypedef int *SAFile

    ctypedef unsigned long SAOffset

    ctypedef struct SAHooks:
        int *(*FOpen)(const char *, const char *)
        unsigned long (*FRead)(void *, unsigned long, unsigned long, int *)
        unsigned long (*FWrite)(void *, unsigned long, unsigned long, int *)
        unsigned long (*FSeek)(int *, unsigned long, int)
        unsigned long (*FTell)(int *)
        int (*FFlush)(int *)
        int (*FClose)(int *)
        void (*Error)(const char *)


    void SASetupDefaultHooks(SAHooks *psHooks)

    ctypedef struct SHPInfo:
        SAHooks sHooks
        SAFile fpSHP
        SAFile fpSHX
        int nShapeType
        int nFileSize
        int nRecords
        int nMaxRecords
        int *panRecOffset
        int *panRecSize
        double adBoundsMin[4]
        double adBoundsMax[4]
        int bUpdated
        unsigned char *pabyRec
        int nBufSize


    ctypedef SHPInfo *SHPHandle

    ctypedef struct SHPObject:
        int nSHPType
        int nShapeId
        int nParts
        int *panPartStart
        int *panPartType
        int nVertices
        double *padfX
        double *padfY
        double *padfZ
        double *padfM
        double dfXMin
        double dfYMin
        double dfZMin
        double dfMMin
        double dfXMax
        double dfYMax
        double dfZMax
        double dfMMax
        int bMeasureIsUsed


    SHPHandle SHPOpen(const char *pszShapeFile, const char *pszAccess)

    SHPHandle SHPOpenLL(const char *pszShapeFile, const char *pszAccess, SAHooks *psHooks)

    SHPHandle SHPCreate(const char *pszShapeFile, int nShapeType)

    SHPHandle SHPCreateLL(const char *pszShapeFile, int nShapeType, SAHooks *psHooks)

    void SHPGetInfo(SHPHandle hSHP, int *pnEntities, int *pnShapeType, double *padfMinBound, double *padfMaxBound)

    SHPObject *SHPReadObject(SHPHandle hSHP, int iShape)

    int SHPWriteObject(SHPHandle hSHP, int iShape, SHPObject *psObject)

    void SHPDestroyObject(SHPObject *psObject)

    void SHPComputeExtents(SHPObject *psObject)

    SHPObject *SHPCreateObject(int nSHPType, int nShapeId, int nParts, const int *panPartStart, const int *panPartType, int nVertices, const double *padfX, const double *padfY, const double *padfZ, const double *padfM)

    SHPObject *SHPCreateSimpleObject(int nSHPType, int nVertices, const double *padfX, const double *padfY, const double *padfZ)

    int SHPRewindObject(SHPHandle hSHP, SHPObject *psObject)

    void SHPClose(SHPHandle hSHP)

    void SHPWriteHeader(SHPHandle hSHP)

    const char *SHPTypeName(int nSHPType)

    const char *SHPPartTypeName(int nPartType)

    cdef struct shape_tree_node:
        double adfBoundsMin[4]
        double adfBoundsMax[4]
        int nShapeCount
        int *panShapeIds
        SHPObject **papsShapeObj
        int nSubNodes
        shape_tree_node *apsSubNode[4]

    ctypedef shape_tree_node SHPTreeNode

    ctypedef struct SHPTree:
        SHPHandle hSHP
        int nMaxDepth
        int nDimension
        int nTotalCount
        SHPTreeNode *psRoot


    SHPTree *SHPCreateTree(SHPHandle hSHP, int nDimension, int nMaxDepth, double *padfBoundsMin, double *padfBoundsMax)

    void SHPDestroyTree(SHPTree *hTree)

    int SHPWriteTree(SHPTree *hTree, const char *pszFilename)

    SHPTree SHPReadTree(const char *pszFilename)

    int SHPTreeAddObject(SHPTree *hTree, SHPObject *psObject)

    int SHPTreeAddShapeId(SHPTree *hTree, SHPObject *psObject)

    int SHPTreeRemoveShapeId(SHPTree *hTree, int nShapeId)

    void SHPTreeTrimExtraNodes(SHPTree *hTree)

    int *SHPTreeFindLikelyShapes(SHPTree *hTree, double *padfBoundsMin, double *padfBoundsMax, int *)

    int SHPCheckBoundsOverlap(double *, double *, double *, double *, int)

    int *SHPSearchDiskTree(FILE *fp, double *padfBoundsMin, double *padfBoundsMax, int *pnShapeCount)

    ctypedef struct DBFInfo:
        SAHooks sHooks
        SAFile fp
        int nRecords
        int nRecordLength
        int nHeaderLength
        int nFields
        int *panFieldOffset
        int *panFieldSize
        int *panFieldDecimals
        char *pachFieldType
        char *pszHeader
        int nCurrentRecord
        int bCurrentRecordModified
        char *pszCurrentRecord
        int nWorkFieldLength
        char *pszWorkField
        int bNoHeader
        int bUpdated
        double dfDoubleField


    ctypedef DBFInfo *DBFHandle

    ctypedef enum DBFFieldType:
        FTString
        FTInteger
        FTDouble
        FTLogical
        FTInvalid


    DBFHandle DBFOpen(const char *pszDBFFile, const char *pszAccess)

    DBFHandle DBFOpenLL(const char *pszDBFFile, const char *pszAccess, SAHooks *psHooks)

    DBFHandle DBFCreate(const char *pszDBFFile)

    DBFHandle DBFCreateLL(const char *pszDBFFile, SAHooks *psHooks)

    int DBFGetFieldCount(DBFHandle psDBF)

    int DBFGetRecordCount(DBFHandle psDBF)

    int DBFAddField(DBFHandle hDBF, const char *pszFieldName, DBFFieldType eType, int nWidth, int nDecimals)

    int DBFAddNativeFieldType(DBFHandle hDBF, const char *pszFieldName, char chType, int nWidth, int nDecimals)

    DBFFieldType DBFGetFieldInfo(DBFHandle psDBF, int iField, char *pszFieldName, int *pnWidth, int *pnDecimals)

    int DBFGetFieldIndex(DBFHandle psDBF, const char *pszFieldName)

    int DBFReadIntegerAttribute(DBFHandle hDBF, int iShape, int iField)

    double DBFReadDoubleAttribute(DBFHandle hDBF, int iShape, int iField)

    const char *DBFReadStringAttribute(DBFHandle hDBF, int iShape, int iField)

    const char *DBFReadLogicalAttribute(DBFHandle hDBF, int iShape, int iField)

    int DBFIsAttributeNULL(DBFHandle hDBF, int iShape, int iField)

    int DBFWriteIntegerAttribute(DBFHandle hDBF, int iShape, int iField, int nFieldValue)

    int DBFWriteDoubleAttribute(DBFHandle hDBF, int iShape, int iField, double dFieldValue)

    int DBFWriteStringAttribute(DBFHandle hDBF, int iShape, int iField, const char *pszFieldValue)

    int DBFWriteNULLAttribute(DBFHandle hDBF, int iShape, int iField)

    int DBFWriteLogicalAttribute(DBFHandle hDBF, int iShape, int iField, const char lFieldValue)

    int DBFWriteAttributeDirectly(DBFHandle psDBF, int hEntity, int iField, void *pValue)

    const char *DBFReadTuple(DBFHandle psDBF, int hEntity)

    int DBFWriteTuple(DBFHandle psDBF, int hEntity, void *pRawTuple)

    int DBFIsRecordDeleted(DBFHandle psDBF, int iShape)

    int DBFMarkRecordDeleted(DBFHandle psDBF, int iShape, int bIsDeleted)

    DBFHandle DBFCloneEmpty(DBFHandle psDBF, const char *pszFilename)

    void DBFClose(DBFHandle hDBF)

    void DBFUpdateHeader(DBFHandle hDBF)

    char DBFGetNativeFieldType(DBFHandle hDBF, int iField)

    ctypedef int (rb_compare_fn)(const void *, const void *)

    cdef struct RB_NODE:
        unsigned char red
        void *data
        RB_NODE *link[2]

    cdef struct RB_TREE:
        RB_NODE *root
        int datasize
        int count
        rb_compare_fn *rb_compare

    cdef struct RB_TRAV:
        RB_TREE *tree
        RB_NODE *curr_node
        RB_NODE *up[64]
        int top
        int first

    RB_TREE *rbtree_create(rb_compare_fn *, int size_t)

    void rbtree_clear(RB_TREE *)

    void rbtree_destroy(RB_TREE *)

    int rbtree_insert(RB_TREE *, void *)

    int rbtree_remove(RB_TREE *, const void *)

    void *rbtree_find(RB_TREE *, const void *)

    int rbtree_init_trav(RB_TRAV *, RB_TREE *)

    void *rbtree_traverse(RB_TRAV *)

    void *rbtree_traverse_backwd(RB_TRAV *trav)

    void *rbtree_traverse_start(RB_TRAV *, const void *)

    int rbtree_debug(RB_TREE *, RB_NODE *)

    cdef struct __wait___wait_terminated:
        unsigned int __w_termsig
        unsigned int __w_coredump
        unsigned int __w_retcode
        unsigned int

    ctypedef __wait___wait_terminated __wait___wait_terminated_t

    cdef struct __wait___wait_stopped:
        unsigned int __w_stopval
        unsigned int __w_stopsig
        unsigned int

    ctypedef __wait___wait_stopped __wait___wait_stopped_t

    cdef union wait:
        int w_status
        __wait___wait_terminated_t __wait_terminated
        __wait___wait_stopped_t __wait_stopped

    ctypedef union __WAIT_STATUS:
        wait *__uptr
        int *__iptr


    ctypedef struct div_t:
        int quot
        int rem


    ctypedef struct ldiv_t:
        long quot
        long rem


    ctypedef struct lldiv_t:
        long long quot
        long long rem


    int __ctype_get_mb_cur_max()

    double atof(const char *__nptr)

    int atoi(const char *__nptr)

    long atol(const char *__nptr)

    long long atoll(const char *__nptr)

    double strtod(const char *__nptr, char **__endptr)

    float strtof(const char *__nptr, char **__endptr)

    long double strtold(const char *__nptr, char **__endptr)

    long strtol(const char *__nptr, char **__endptr, int __base)

    unsigned long strtoul(const char *__nptr, char **__endptr, int __base)

    long long strtoq(const char *__nptr, char **__endptr, int __base)

    unsigned long long strtouq(const char *__nptr, char **__endptr, int __base)

    long long strtoll(const char *__nptr, char **__endptr, int __base)

    unsigned long long strtoull(const char *__nptr, char **__endptr, int __base)

    char *l64a(long __n)

    long a64l(const char *__s)

    long random()

    void srandom(unsigned int __seed)

    char *initstate(unsigned int __seed, char *__statebuf, int __statelen)

    char *setstate(char *__statebuf)

    cdef struct random_data:
        int32_t *fptr
        int32_t *rptr
        int32_t *state
        int rand_type
        int rand_deg
        int rand_sep
        int32_t *end_ptr

    int random_r(random_data *__buf, int32_t *__result)

    int srandom_r(unsigned int __seed, random_data *__buf)

    int initstate_r(unsigned int __seed, char *__statebuf, int __statelen, random_data *__buf)

    int setstate_r(char *__statebuf, random_data *__buf)

    int rand()

    void srand(unsigned int __seed)

    int rand_r(unsigned int *__seed)

    double drand48()

    double erand48(unsigned short *__xsubi)

    long lrand48()

    long nrand48(unsigned short *__xsubi)

    long mrand48()

    long jrand48(unsigned short *__xsubi)

    void srand48(long __seedval)

    unsigned short *seed48(unsigned short *__seed16v)

    void lcong48(unsigned short *__param)

    cdef struct drand48_data:
        unsigned short __x[3]
        unsigned short __old_x[3]
        unsigned short __c
        unsigned short __init
        unsigned long long __a

    int drand48_r(drand48_data *__buffer, double *__result)

    int erand48_r(unsigned short *__xsubi, drand48_data *__buffer, double *__result)

    int lrand48_r(drand48_data *__buffer, long *__result)

    int nrand48_r(unsigned short *__xsubi, drand48_data *__buffer, long *__result)

    int mrand48_r(drand48_data *__buffer, long *__result)

    int jrand48_r(unsigned short *__xsubi, drand48_data *__buffer, long *__result)

    int srand48_r(long __seedval, drand48_data *__buffer)

    int seed48_r(unsigned short *__seed16v, drand48_data *__buffer)

    int lcong48_r(unsigned short *__param, drand48_data *__buffer)

    void free(void *__ptr)

    void cfree(void *__ptr)

    void *valloc(int __size)

    int posix_memalign(void **__memptr, int __alignment, int __size)

    void abort()

    int atexit(void (*__func)())

    int on_exit(void (*__func)(int, void *), void *__arg)

    void exit(int __status)

    void _Exit(int __status)

    char *getenv(const char *__name)

    int putenv(char *__string)

    int setenv(const char *__name, const char *__value, int __replace)

    int unsetenv(const char *__name)

    int clearenv()

    char *mktemp(char *__template)

    int mkstemp(char *__template)

    int mkstemps(char *__template, int __suffixlen)

    char *mkdtemp(char *__template)

    int system(const char *__command)

    char *realpath(const char *__name, char *__resolved)

    ctypedef int (*__compar_fn_t)(const void *, const void *)

    void *bsearch(const void *__key, const void *__base, int __nmemb, int __size, __compar_fn_t __compar)

    void qsort(void *__base, int __nmemb, int __size, __compar_fn_t __compar)

    int abs(int __x)

    long labs(long __x)

    long long llabs(long long __x)

    div_t div(int __numer, int __denom)

    ldiv_t ldiv(long __numer, long __denom)

    lldiv_t lldiv(long long __numer, long long __denom)

    char *ecvt(double __value, int __ndigit, int *__decpt, int *__sign)

    char *fcvt(double __value, int __ndigit, int *__decpt, int *__sign)

    char *gcvt(double __value, int __ndigit, char *__buf)

    char *qecvt(long double __value, int __ndigit, int *__decpt, int *__sign)

    char *qfcvt(long double __value, int __ndigit, int *__decpt, int *__sign)

    char *qgcvt(long double __value, int __ndigit, char *__buf)

    int ecvt_r(double __value, int __ndigit, int *__decpt, int *__sign, char *__buf, int __len)

    int fcvt_r(double __value, int __ndigit, int *__decpt, int *__sign, char *__buf, int __len)

    int qecvt_r(long double __value, int __ndigit, int *__decpt, int *__sign, char *__buf, int __len)

    int qfcvt_r(long double __value, int __ndigit, int *__decpt, int *__sign, char *__buf, int __len)

    int mblen(const char *__s, int __n)

    int mbtowc(int *__pwc, const char *__s, int __n)

    int wctomb(char *__s, int __wchar)

    int mbstowcs(int *__pwcs, const char *__s, int __n)

    int wcstombs(char *__s, const int *__pwcs, int __n)

    int rpmatch(const char *__response)

    int getsubopt(char **__optionp, char *const *__tokens, char **__valuep)

    int getloadavg(double *__loadavg, int __nelem)

    void *memccpy(void *__dest, const void *__src, int __c, int __n)

    char *strcpy(char *__dest, const char *__src)

    char *strcat(char *__dest, const char *__src)

    int strcmp(const char *__s1, const char *__s2)

    int strcoll(const char *__s1, const char *__s2)

    cdef struct ____locale_struct___locale_data:
        pass

    ctypedef ____locale_struct___locale_data ____locale_struct___locale_data_t

    cdef struct __locale_struct:
        ____locale_struct___locale_data *__locales[13]
        const unsigned short *__ctype_b
        const int *__ctype_tolower
        const int *__ctype_toupper
        const char *__names[13]

    ctypedef __locale_struct *__locale_t

    ctypedef __locale_t locale_t

    int strcoll_l(const char *__s1, const char *__s2, __locale_t __l)

    int strxfrm_l(char *__dest, const char *__src, int __n, __locale_t __l)

    char *strdup(const char *__s)

    char *strchr(const char *__s, int __c)

    char *strrchr(const char *__s, int __c)

    char *strpbrk(const char *__s, const char *__accept)

    char *strstr(const char *__haystack, const char *__needle)

    char *strtok(char *__s, const char *__delim)

    char *__strtok_r(char *__s, const char *__delim, char **__save_ptr)

    char *strtok_r(char *__s, const char *__delim, char **__save_ptr)

    int strnlen(const char *__string, int __maxlen)

    char *strerror(int __errnum)

    int strerror_r(int __errnum, char *__buf, int __buflen)

    char *strerror_l(int __errnum, __locale_t __l)

    void __bzero(void *__s, int __n)

    void bcopy(const void *__src, void *__dest, int __n)

    int bcmp(const void *__s1, const void *__s2, int __n)

    char *index(const char *__s, int __c)

    char *rindex(const char *__s, int __c)

    int ffs(int __i)

    int strcasecmp(const char *__s1, const char *__s2)

    char *strsep(char **__stringp, const char *__delim)

    char *strsignal(int __sig)

    char *__stpcpy(char *__dest, const char *__src)

    char *stpcpy(char *__dest, const char *__src)

    char *__stpncpy(char *__dest, const char *__src, int __n)

    ctypedef double RectReal

    cdef struct RTree_Rect:
        RectReal *boundary

    cdef struct RTree_Node:
        pass

    cdef union RTree_Child:
        int id
        RTree_Node *ptr
        off_t pos

    cdef struct RTree_Branch:
        RTree_Rect rect
        RTree_Child child

    cdef struct RTree_Node:
        int count
        int level
        RTree_Branch *branch

    ctypedef int (SearchHitCallback)(int, RTree_Rect *, void *)

    cdef struct RTree:
        pass

    ctypedef int (rt_search_fn)(RTree *, RTree_Rect *, SearchHitCallback *, void *)

    ctypedef int (rt_insert_fn)(RTree_Rect *, RTree_Child, int, RTree *)

    ctypedef int (rt_delete_fn)(RTree_Rect *, RTree_Child, RTree *)

    ctypedef int (rt_valid_child_fn)(RTree_Child *)

    cdef struct nstack:
        RTree_Node *sn
        int branch_id
        off_t pos

    cdef struct NodeBuffer:
        RTree_Node n
        off_t pos
        char dirty

    cdef struct RTree_PartitionVars:
        int partition[10]
        int total
        int minfill
        int taken[10]
        int count[2]
        RTree_Rect cover[2]
        RectReal area[2]

    cdef struct __RTree__recycle:
        int avail
        int alloc
        off_t *pos

    ctypedef __RTree__recycle __RTree__recycle_t

    cdef struct RTree:
        int fd
        unsigned char ndims
        unsigned char nsides
        unsigned char ndims_alloc
        unsigned char nsides_alloc
        int nodesize
        int branchsize
        int rectsize
        int n_nodes
        int n_leafs
        int rootlevel
        int nodecard
        int leafcard
        int min_node_fill
        int min_leaf_fill
        int minfill_node_split
        int minfill_leaf_split
        char overflow
        __RTree__recycle_t free_nodes
        NodeBuffer **nb
        int **used
        rt_insert_fn *insert_rect
        rt_delete_fn *delete_rect
        rt_search_fn *search_rect
        rt_valid_child_fn *valid_child
        RTree_Node *root
        nstack *ns
        RTree_PartitionVars p
        RTree_Branch *BranchBuf
        RTree_Branch tmpb1
        RTree_Branch tmpb2
        RTree_Branch c
        int BranchCount
        RTree_Rect rect_0
        RTree_Rect rect_1
        RTree_Rect upperrect
        RTree_Rect orect
        RectReal *center_n
        off_t rootpos

    int RTreeSearch(RTree *, RTree_Rect *, SearchHitCallback *, void *)

    int RTreeInsertRect(RTree_Rect *, int, RTree *)

    void RTreeSetRect1D(RTree_Rect *r, RTree *t, double x_min, double x_max)

    void RTreeSetRect2D(RTree_Rect *r, RTree *t, double x_min, double x_max, double y_min, double y_max)

    void RTreeSetRect3D(RTree_Rect *r, RTree *t, double x_min, double x_max, double y_min, double y_max, double z_min, double z_max)

    void RTreeSetRect4D(RTree_Rect *r, RTree *t, double x_min, double x_max, double y_min, double y_max, double z_min, double z_max, double t_min, double t_max)

    int RTreeDeleteRect(RTree_Rect *, int, RTree *)

    void RTreePrintRect(RTree_Rect *, int, RTree *)

    RTree *RTreeCreateTree(int, off_t, int)

    void RTreeSetOverflow(RTree *, char)

    void RTreeDestroyTree(RTree *)

    int RTreeOverlap(RTree_Rect *, RTree_Rect *, RTree *)

    int RTreeContained(RTree_Rect *, RTree_Rect *, RTree *)

    int RTreeContains(RTree_Rect *, RTree_Rect *, RTree *)

    RTree_Node *RTreeAllocNode(RTree *, int)

    void RTreeInitNode(RTree *, RTree_Node *, int)

    void RTreeCopyNode(RTree_Node *, RTree_Node *, RTree *)

    void RTreeFreeNode(RTree_Node *)

    void RTreeDestroyNode(RTree_Node *, int)

    RTree_Rect *RTreeAllocRect(RTree *t)

    void RTreeFreeRect(RTree_Rect *r)

    RectReal *RTreeAllocBoundary(RTree *t)

    void RTreeFreeBoundary(RTree_Rect *r)

    int RTreeReadNode(RTree_Node *, off_t, RTree *)

    int RTreeWriteNode(RTree_Node *, RTree *)

    off_t RTreeGetNodePos(RTree *)

    void RTreeFlushBuffer(RTree *)

    ctypedef void *dbAddress

    ctypedef int dbToken

    cdef struct _db_string:
        char *string
        int nalloc

    ctypedef _db_string dbString

    cdef struct _dbmscap:
        char driverName[256]
        char startup[256]
        char comment[256]
        _dbmscap *next

    ctypedef _dbmscap dbDbmscap

    cdef struct _db_dirent:
        dbString name
        int isdir
        int perm

    ctypedef _db_dirent dbDirent

    cdef struct _db_driver:
        dbDbmscap dbmscap
        FILE *send
        FILE *recv
        int pid

    ctypedef _db_driver dbDriver

    cdef struct _db_handle:
        dbString dbName
        dbString dbSchema

    ctypedef _db_handle dbHandle

    cdef struct _db_date_time:
        char current
        int year
        int month
        int day
        int hour
        int minute
        double seconds

    ctypedef _db_date_time dbDateTime

    cdef struct _db_value:
        char isNull
        int i
        double d
        dbString s
        dbDateTime t

    ctypedef _db_value dbValue

    cdef struct _db_column:
        dbString columnName
        dbString description
        int sqlDataType
        int hostDataType
        dbValue value
        int dataLen
        int precision
        int scale
        char nullAllowed
        char hasDefaultValue
        char useDefaultValue
        dbValue defaultValue
        int select
        int update

    ctypedef _db_column dbColumn

    cdef struct _db_table:
        dbString tableName
        dbString description
        int numColumns
        dbColumn *columns
        int priv_insert
        int priv_delete

    ctypedef _db_table dbTable

    cdef struct _db_cursor:
        dbToken token
        dbDriver *driver
        dbTable *table
        short *column_flags
        int type
        int mode

    ctypedef _db_cursor dbCursor

    cdef struct _db_index:
        dbString indexName
        dbString tableName
        int numColumns
        dbString *columnNames
        char unique

    ctypedef _db_index dbIndex

    cdef struct _db_driver_state:
        char *dbname
        char *dbschema
        int open
        int ncursors
        dbCursor **cursor_list

    ctypedef _db_driver_state dbDriverState

    ctypedef struct dbCatValI:
        int cat
        int val


    cdef union __dbCatVal_val:
        int i
        double d
        dbString *s
        dbDateTime *t

    ctypedef __dbCatVal_val __dbCatVal_val_t

    ctypedef struct dbCatVal:
        int cat
        int isNull
        __dbCatVal_val_t val


    ctypedef struct dbCatValArray:
        int n_values
        int alloc
        int ctype
        dbCatVal *value


    cdef struct _db_connection:
        char *driverName
        char *databaseName
        char *schemaName
        char *location
        char *user
        char *password
        char *keycol
        char *group

    ctypedef _db_connection dbConnection

    ctypedef struct dbRclsRule:
        int count
        int alloc
        char *table
        char *key
        int *cat
        char **where
        char **label


    void db_Cstring_to_lowercase(char *)

    void db_Cstring_to_uppercase(char *)

    int db_add_column(dbDriver *, dbString *, dbColumn *)

    void db__add_cursor_to_driver_state(dbCursor *)

    int db_alloc_cursor_column_flags(dbCursor *)

    int db_alloc_cursor_table(dbCursor *, int)

    int db_append_table_column(dbTable *, dbColumn *)

    dbDirent *db_alloc_dirent_array(int)

    dbHandle *db_alloc_handle_array(int)

    dbIndex *db_alloc_index_array(int)

    int db_alloc_index_columns(dbIndex *, int)

    dbString *db_alloc_string_array(int)

    dbTable *db_alloc_table(int)

    int db_append_string(dbString *, const char *)

    void db_auto_print_errors(int)

    void db_auto_print_protocol_errors(int)

    int db_bind_update(dbCursor *)

    void *db_calloc(int, int)

    int db_CatValArray_alloc(dbCatValArray *, int)

    int db_CatValArray_realloc(dbCatValArray *, int)

    void db_CatValArray_free(dbCatValArray *)

    void db_CatValArray_init(dbCatValArray *)

    void db_CatValArray_sort(dbCatValArray *)

    int db_CatValArray_sort_by_value(dbCatValArray *)

    int db_CatValArray_get_value(dbCatValArray *, int, dbCatVal **)

    int db_CatValArray_get_value_int(dbCatValArray *, int, int *)

    int db_CatValArray_get_value_double(dbCatValArray *, int, double *)

    void db_char_to_lowercase(char *)

    void db_char_to_uppercase(char *)

    void db_clear_error()

    dbTable *db_clone_table(dbTable *)

    void db__close_all_cursors()

    int db_close_cursor(dbCursor *)

    int db_close_database(dbDriver *)

    int db_close_database_shutdown_driver(dbDriver *)

    int db_column_sqltype(dbDriver *, const char *, const char *)

    int db_column_Ctype(dbDriver *, const char *, const char *)

    int db_convert_Cstring_to_column_default_value(const char *, dbColumn *)

    int db_convert_Cstring_to_column_value(const char *, dbColumn *)

    int db_convert_Cstring_to_value(const char *, int, dbValue *)

    int db_convert_Cstring_to_value_datetime(const char *, int, dbValue *)

    int db_convert_column_default_value_to_string(dbColumn *, dbString *)

    int db_convert_column_value_to_string(dbColumn *, dbString *)

    int db_convert_value_datetime_into_string(dbValue *, int, dbString *)

    int db_convert_value_to_string(dbValue *, int, dbString *)

    dbColumn *db_copy_column(dbColumn *, dbColumn *)

    void db_copy_dbmscap_entry(dbDbmscap *, dbDbmscap *)

    int db_copy_string(dbString *, const dbString *)

    int db_table_to_sql(dbTable *, dbString *)

    int db_copy_table(const char *, const char *, const char *, const char *, const char *, const char *)

    int db_copy_table_where(const char *, const char *, const char *, const char *, const char *, const char *, const char *)

    int db_copy_table_select(const char *, const char *, const char *, const char *, const char *, const char *, const char *)

    int db_copy_table_by_ints(const char *, const char *, const char *, const char *, const char *, const char *, const char *, int *, int)

    void db_copy_value(dbValue *, dbValue *)

    int db_create_database(dbDriver *, dbHandle *)

    int db_create_index(dbDriver *, dbIndex *)

    int db_create_index2(dbDriver *, const char *, const char *)

    int db_create_table(dbDriver *, dbTable *)

    int db_d_add_column()

    int db_d_bind_update()

    const char *db_dbmscap_filename()

    int db_d_close_cursor()

    int db_d_close_database()

    int db_d_create_database()

    int db_d_create_index()

    int db_d_create_table()

    int db_d_delete()

    int db_d_delete_database()

    int db_d_describe_table()

    int db_d_drop_column()

    int db_d_drop_index()

    int db_d_drop_table()

    void db_debug(const char *)

    void db_debug_off()

    void db_debug_on()

    int db_delete(dbCursor *)

    int db_delete_database(dbDriver *, dbHandle *)

    int db_delete_table(const char *, const char *, const char *)

    int db_describe_table(dbDriver *, dbString *, dbTable **)

    int db_d_execute_immediate()

    int db_d_begin_transaction()

    int db_d_commit_transaction()

    int db_d_fetch()

    int db_d_find_database()

    int db_d_get_num_rows()

    int db_d_grant_on_table()

    int db_d_insert()

    void db_d_init_error(const char *)

    void db_d_append_error(const char *)

    void db_d_report_error()

    dbDirent *db_dirent(const char *, int *)

    int db_d_list_databases()

    int db_d_list_indexes()

    int db_d_list_tables()

    int db_d_open_database()

    int db_d_open_insert_cursor()

    int db_d_open_select_cursor()

    int db_d_open_update_cursor()

    void db_double_quote_string(dbString *)

    int db_driver(int, char **)

    int db_driver_mkdir(const char *, int, int)

    int db_drop_column(dbDriver *, dbString *, dbString *)

    void db__drop_cursor_from_driver_state(dbCursor *)

    int db_drop_index(dbDriver *, dbString *)

    int db_drop_table(dbDriver *, dbString *)

    void db_drop_token(dbToken)

    int db_d_update()

    int db_d_version()

    int db_enlarge_string(dbString *, int)

    void db_error(const char *)

    int db_execute_immediate(dbDriver *, dbString *)

    int db_begin_transaction(dbDriver *)

    int db_commit_transaction(dbDriver *)

    int db_fetch(dbCursor *, int, int *)

    int db_find_database(dbDriver *, dbHandle *, int *)

    dbAddress db_find_token(dbToken)

    void db_free(void *)

    void db_free_column(dbColumn *)

    void db_free_cursor(dbCursor *)

    void db_free_cursor_column_flags(dbCursor *)

    void db_free_dbmscap(dbDbmscap *)

    void db_free_dirent_array(dbDirent *, int)

    void db_free_handle(dbHandle *)

    void db_free_handle_array(dbHandle *, int)

    void db_free_index(dbIndex *)

    void db_free_index_array(dbIndex *, int)

    void db_free_string(dbString *)

    void db_free_string_array(dbString *, int)

    void db_free_table(dbTable *)

    int db_get_column(dbDriver *, const char *, const char *, dbColumn **)

    dbValue *db_get_column_default_value(dbColumn *)

    const char *db_get_column_description(dbColumn *)

    int db_get_column_host_type(dbColumn *)

    int db_get_column_length(dbColumn *)

    const char *db_get_column_name(dbColumn *)

    int db_get_column_precision(dbColumn *)

    int db_get_column_scale(dbColumn *)

    int db_get_column_select_priv(dbColumn *)

    int db_get_column_sqltype(dbColumn *)

    int db_get_column_update_priv(dbColumn *)

    dbValue *db_get_column_value(dbColumn *)

    int db_get_connection(dbConnection *)

    int db_get_cursor_number_of_columns(dbCursor *)

    dbTable *db_get_cursor_table(dbCursor *)

    dbToken db_get_cursor_token(dbCursor *)

    const char *db_get_default_driver_name()

    const char *db_get_default_database_name()

    const char *db_get_default_schema_name()

    const char *db_get_default_group_name()

    dbDriverState *db__get_driver_state()

    int db_get_error_code()

    const char *db_get_error_msg()

    const char *db_get_error_who()

    const char *db_get_handle_dbname(dbHandle *)

    const char *db_get_handle_dbschema(dbHandle *)

    const char *db_get_index_column_name(dbIndex *, int)

    const char *db_get_index_name(dbIndex *)

    int db_get_index_number_of_columns(dbIndex *)

    const char *db_get_index_table_name(dbIndex *)

    int db_get_num_rows(dbCursor *)

    char *db_get_string(const dbString *)

    dbColumn *db_get_table_column(dbTable *, int)

    dbColumn *db_get_table_column_by_name(dbTable *, const char *)

    int db_get_table_delete_priv(dbTable *)

    const char *db_get_table_description(dbTable *)

    int db_get_table_insert_priv(dbTable *)

    const char *db_get_table_name(dbTable *)

    int db_get_table_number_of_columns(dbTable *)

    int db_get_table_number_of_rows(dbDriver *, dbString *)

    int db_get_table_select_priv(dbTable *)

    int db_get_table_update_priv(dbTable *)

    double db_get_value_as_double(dbValue *, int)

    int db_get_value_day(dbValue *)

    double db_get_value_double(dbValue *)

    int db_get_value_hour(dbValue *)

    int db_get_value_int(dbValue *)

    int db_get_value_minute(dbValue *)

    int db_get_value_month(dbValue *)

    double db_get_value_seconds(dbValue *)

    const char *db_get_value_string(dbValue *)

    int db_get_value_year(dbValue *)

    int db_grant_on_table(dbDriver *, const char *, int, int)

    int db_has_dbms()

    void db_init_column(dbColumn *)

    void db_init_cursor(dbCursor *)

    void db__init_driver_state()

    void db_init_handle(dbHandle *)

    void db_init_index(dbIndex *)

    void db_init_string(dbString *)

    void db_init_table(dbTable *)

    int db_insert(dbCursor *)

    void db_interval_range(int, int *, int *)

    int db_isdir(const char *)

    int db_legal_tablename(const char *)

    int db_list_databases(dbDriver *, dbString *, int, dbHandle **, int *)

    const char *db_list_drivers()

    int db_list_indexes(dbDriver *, dbString *, dbIndex **, int *)

    int db_list_tables(dbDriver *, dbString **, int *, int)

    void *db_malloc(int)

    void db__mark_database_closed()

    void db__mark_database_open(const char *, const char *)

    void db_memory_error()

    dbToken db_new_token(dbAddress)

    int db_nocase_compare(const char *, const char *)

    void db_noproc_error(int)

    int db_open_database(dbDriver *, dbHandle *)

    int db_open_insert_cursor(dbDriver *, dbCursor *)

    int db_open_select_cursor(dbDriver *, dbString *, dbCursor *, int)

    int db_open_update_cursor(dbDriver *, dbString *_name, dbString *, dbCursor *, int)

    void db_print_column_definition(FILE *, dbColumn *)

    void db_print_error()

    void db_print_index(FILE *, dbIndex *)

    void db_print_table_definition(FILE *, dbTable *)

    void db_procedure_not_implemented(const char *)

    void db_protocol_error()

    dbDbmscap *db_read_dbmscap()

    void *db_realloc(void *, int)

    int db__recv_char(char *)

    int db__recv_column_default_value(dbColumn *)

    int db__recv_column_definition(dbColumn *)

    int db__recv_column_value(dbColumn *)

    int db__recv_datetime(dbDateTime *)

    int db__recv_double(double *)

    int db__recv_double_array(double **, int *)

    int db__recv_float(float *)

    int db__recv_float_array(float **, int *)

    int db__recv_handle(dbHandle *)

    int db__recv_index(dbIndex *)

    int db__recv_index_array(dbIndex **, int *)

    int db__recv_int(int *)

    int db__recv_int_array(int **, int *)

    int db__recv_procnum(int *)

    int db__recv_return_code(int *)

    int db__recv_short(short *)

    int db__recv_short_array(short **, int *)

    int db__recv_string(dbString *)

    int db__recv_string_array(dbString **, int *)

    int db__recv_table_data(dbTable *)

    int db__recv_table_definition(dbTable **)

    int db__recv_token(dbToken *)

    int db__recv_value(dbValue *, int)

    int db__send_Cstring(const char *)

    int db__send_char(int)

    int db__send_column_default_value(dbColumn *)

    int db__send_column_definition(dbColumn *)

    int db__send_column_value(dbColumn *)

    int db__send_datetime(dbDateTime *)

    int db__send_double(double)

    int db__send_double_array(const double *, int)

    int db__send_failure()

    int db__send_float(float)

    int db__send_float_array(const float *, int)

    int db__send_handle(dbHandle *)

    int db__send_index(dbIndex *)

    int db__send_index_array(dbIndex *, int)

    int db__send_int(int)

    int db__send_int_array(const int *, int)

    int db__send_procedure_not_implemented(int)

    int db__send_procedure_ok(int)

    int db__send_short(int)

    int db__send_short_array(const short *, int)

    int db__send_string(dbString *)

    int db__send_string_array(dbString *, int)

    int db__send_success()

    int db__send_table_data(dbTable *)

    int db__send_table_definition(dbTable *)

    int db__send_token(dbToken *)

    int db__send_value(dbValue *, int)

    int db_select_CatValArray(dbDriver *, const char *, const char *, const char *, const char *, dbCatValArray *)

    int db_select_int(dbDriver *, const char *, const char *, const char *, int **)

    int db_select_value(dbDriver *, const char *, const char *, int, const char *, dbValue *)

    int db_set_column_description(dbColumn *, const char *)

    void db_set_column_has_defined_default_value(dbColumn *)

    void db_set_column_has_undefined_default_value(dbColumn *)

    void db_set_column_host_type(dbColumn *, int)

    void db_set_column_length(dbColumn *, int)

    int db_set_column_name(dbColumn *, const char *)

    void db_set_column_null_allowed(dbColumn *)

    void db_set_column_precision(dbColumn *, int)

    void db_set_column_scale(dbColumn *, int)

    void db_set_column_select_priv_granted(dbColumn *)

    void db_set_column_select_priv_not_granted(dbColumn *)

    void db_set_column_sqltype(dbColumn *, int)

    void db_set_column_update_priv_granted(dbColumn *)

    void db_set_column_update_priv_not_granted(dbColumn *)

    void db_set_column_use_default_value(dbColumn *)

    int db_set_connection(dbConnection *)

    void db_set_cursor_column_flag(dbCursor *, int)

    void db_set_cursor_column_for_update(dbCursor *, int)

    void db_set_cursor_mode(dbCursor *, int)

    void db_set_cursor_mode_insensitive(dbCursor *)

    void db_set_cursor_mode_scroll(dbCursor *)

    void db_set_cursor_table(dbCursor *, dbTable *)

    void db_set_cursor_token(dbCursor *, dbToken)

    void db_set_cursor_type_insert(dbCursor *)

    void db_set_cursor_type_readonly(dbCursor *)

    void db_set_cursor_type_update(dbCursor *)

    int db_set_default_connection()

    void db_set_error_who(const char *)

    int db_set_handle(dbHandle *, const char *, const char *)

    int db_set_index_column_name(dbIndex *, int, const char *)

    int db_set_index_name(dbIndex *, const char *)

    int db_set_index_table_name(dbIndex *, const char *)

    int db_set_index_type_non_unique(dbIndex *)

    int db_set_index_type_unique(dbIndex *)

    void db__set_protocol_fds(FILE *, FILE *)

    int db_set_string(dbString *, const char *)

    int db_set_string_no_copy(dbString *, char *)

    int db_set_table_column(dbTable *, int, dbColumn *)

    void db_set_table_delete_priv_granted(dbTable *)

    void db_set_table_delete_priv_not_granted(dbTable *)

    int db_set_table_description(dbTable *, const char *)

    void db_set_table_insert_priv_granted(dbTable *)

    void db_set_table_insert_priv_not_granted(dbTable *)

    int db_set_table_name(dbTable *, const char *)

    void db_set_table_select_priv_granted(dbTable *)

    void db_set_table_select_priv_not_granted(dbTable *)

    void db_set_table_update_priv_granted(dbTable *)

    void db_set_table_update_priv_not_granted(dbTable *)

    void db_set_value_datetime_current(dbValue *)

    void db_set_value_datetime_not_current(dbValue *)

    void db_set_value_day(dbValue *, int)

    void db_set_value_double(dbValue *, double)

    void db_set_value_hour(dbValue *, int)

    void db_set_value_int(dbValue *, int)

    void db_set_value_minute(dbValue *, int)

    void db_set_value_month(dbValue *, int)

    void db_set_value_not_null(dbValue *)

    void db_set_value_null(dbValue *)

    void db_set_value_seconds(dbValue *, double)

    int db_set_value_string(dbValue *, const char *)

    void db_set_value_year(dbValue *, int)

    int db_shutdown_driver(dbDriver *)

    const char *db_sqltype_name(int)

    int db_sqltype_to_Ctype(int)

    dbDriver *db_start_driver(const char *)

    dbDriver *db_start_driver_open_database(const char *, const char *)

    int db__start_procedure_call(int)

    char *db_store(const char *)

    void db_strip(char *)

    void db_syserror(const char *)

    int db_table_exists(const char *, const char *, const char *)

    int db_test_column_has_default_value(dbColumn *)

    int db_test_column_has_defined_default_value(dbColumn *)

    int db_test_column_has_undefined_default_value(dbColumn *)

    int db_test_column_null_allowed(dbColumn *)

    int db_test_column_use_default_value(dbColumn *)

    int db_test_cursor_any_column_flag(dbCursor *)

    int db_test_cursor_any_column_for_update(dbCursor *)

    int db_test_cursor_column_flag(dbCursor *, int)

    int db_test_cursor_column_for_update(dbCursor *, int)

    int db_test_cursor_mode_insensitive(dbCursor *)

    int db_test_cursor_mode_scroll(dbCursor *)

    int db_test_cursor_type_fetch(dbCursor *)

    int db_test_cursor_type_insert(dbCursor *)

    int db_test_cursor_type_update(dbCursor *)

    int db__test_database_open()

    int db_test_index_type_unique(dbIndex *)

    int db_test_value_datetime_current(dbValue *)

    int db_test_value_isnull(dbValue *)

    void db_unset_column_has_default_value(dbColumn *)

    void db_unset_column_null_allowed(dbColumn *)

    void db_unset_column_use_default_value(dbColumn *)

    void db_unset_cursor_column_flag(dbCursor *, int)

    void db_unset_cursor_column_for_update(dbCursor *, int)

    void db_unset_cursor_mode(dbCursor *)

    void db_unset_cursor_mode_insensitive(dbCursor *)

    void db_unset_cursor_mode_scroll(dbCursor *)

    int db_update(dbCursor *)

    int db_gversion(dbDriver *, dbString *, dbString *)

    const char *db_whoami()

    void db_zero(void *, int)

    void db_zero_string(dbString *)

    unsigned int db_sizeof_string(const dbString *)

    int db_set_login(const char *, const char *, const char *, const char *)

    int db_get_login(const char *, const char *, const char **, const char **)

    ctypedef float float_t

    ctypedef double double_t

    double acos(double __x)

    double __acos(double __x)

    double asin(double __x)

    double __asin(double __x)

    double atan(double __x)

    double __atan(double __x)

    double atan2(double __y, double __x)

    double __atan2(double __y, double __x)

    double cos(double __x)

    double __cos(double __x)

    double sin(double __x)

    double __sin(double __x)

    double tan(double __x)

    double __tan(double __x)

    double cosh(double __x)

    double __cosh(double __x)

    double sinh(double __x)

    double __sinh(double __x)

    double tanh(double __x)

    double __tanh(double __x)

    double acosh(double __x)

    double __acosh(double __x)

    double asinh(double __x)

    double __asinh(double __x)

    double atanh(double __x)

    double __atanh(double __x)

    double exp(double __x)

    double __exp(double __x)

    double frexp(double __x, int *__exponent)

    double __frexp(double __x, int *__exponent)

    double ldexp(double __x, int __exponent)

    double __ldexp(double __x, int __exponent)

    double log(double __x)

    double __log(double __x)

    double log10(double __x)

    double __log10(double __x)

    double modf(double __x, double *__iptr)

    double __modf(double __x, double *__iptr)

    double expm1(double __x)

    double __expm1(double __x)

    double log1p(double __x)

    double __log1p(double __x)

    double logb(double __x)

    double __logb(double __x)

    double exp2(double __x)

    double __exp2(double __x)

    double log2(double __x)

    double __log2(double __x)

    double pow(double __x, double __y)

    double __pow(double __x, double __y)

    double sqrt(double __x)

    double __sqrt(double __x)

    double hypot(double __x, double __y)

    double __hypot(double __x, double __y)

    double cbrt(double __x)

    double __cbrt(double __x)

    double ceil(double __x)

    double __ceil(double __x)

    double fabs(double __x)

    double __fabs(double __x)

    double floor(double __x)

    double __floor(double __x)

    double fmod(double __x, double __y)

    double __fmod(double __x, double __y)

    int __isinf(double __value)

    int __finite(double __value)

    int isinf(double __value)

    int finite(double __value)

    double drem(double __x, double __y)

    double __drem(double __x, double __y)

    double significand(double __x)

    double __significand(double __x)

    double copysign(double __x, double __y)

    double __copysign(double __x, double __y)

    double nan(const char *__tagb)

    double __nan(const char *__tagb)

    int __isnan(double __value)

    int isnan(double __value)

    double j0(double)

    double __j0(double)

    double j1(double)

    double __j1(double)

    double jn(int, double)

    double __jn(int, double)

    double y0(double)

    double __y0(double)

    double y1(double)

    double __y1(double)

    double yn(int, double)

    double __yn(int, double)

    double erf(double)

    double __erf(double)

    double erfc(double)

    double __erfc(double)

    double lgamma(double)

    double __lgamma(double)

    double tgamma(double)

    double __tgamma(double)

    double gamma(double)

    double __gamma(double)

    double lgamma_r(double, int *__signgamp)

    double __lgamma_r(double, int *__signgamp)

    double rint(double __x)

    double __rint(double __x)

    double nextafter(double __x, double __y)

    double __nextafter(double __x, double __y)

    double nexttoward(double __x, long double __y)

    double __nexttoward(double __x, long double __y)

    double remainder(double __x, double __y)

    double __remainder(double __x, double __y)

    double scalbn(double __x, int __n)

    double __scalbn(double __x, int __n)

    int ilogb(double __x)

    int __ilogb(double __x)

    double scalbln(double __x, long __n)

    double __scalbln(double __x, long __n)

    double nearbyint(double __x)

    double __nearbyint(double __x)

    double round(double __x)

    double __round(double __x)

    double trunc(double __x)

    double __trunc(double __x)

    double remquo(double __x, double __y, int *__quo)

    double __remquo(double __x, double __y, int *__quo)

    long lrint(double __x)

    long __lrint(double __x)

    long long llrint(double __x)

    long long __llrint(double __x)

    long lround(double __x)

    long __lround(double __x)

    long long llround(double __x)

    long long __llround(double __x)

    double fdim(double __x, double __y)

    double __fdim(double __x, double __y)

    double fmax(double __x, double __y)

    double __fmax(double __x, double __y)

    double fmin(double __x, double __y)

    double __fmin(double __x, double __y)

    int __fpclassify(double __value)

    int __signbit(double __value)

    double fma(double __x, double __y, double __z)

    double __fma(double __x, double __y, double __z)

    double scalb(double __x, double __n)

    double __scalb(double __x, double __n)

    float acosf(float __x)

    float __acosf(float __x)

    float asinf(float __x)

    float __asinf(float __x)

    float atanf(float __x)

    float __atanf(float __x)

    float atan2f(float __y, float __x)

    float __atan2f(float __y, float __x)

    float cosf(float __x)

    float __cosf(float __x)

    float sinf(float __x)

    float __sinf(float __x)

    float tanf(float __x)

    float __tanf(float __x)

    float coshf(float __x)

    float __coshf(float __x)

    float sinhf(float __x)

    float __sinhf(float __x)

    float tanhf(float __x)

    float __tanhf(float __x)

    float acoshf(float __x)

    float __acoshf(float __x)

    float asinhf(float __x)

    float __asinhf(float __x)

    float atanhf(float __x)

    float __atanhf(float __x)

    float expf(float __x)

    float __expf(float __x)

    float frexpf(float __x, int *__exponent)

    float __frexpf(float __x, int *__exponent)

    float ldexpf(float __x, int __exponent)

    float __ldexpf(float __x, int __exponent)

    float logf(float __x)

    float __logf(float __x)

    float log10f(float __x)

    float __log10f(float __x)

    float modff(float __x, float *__iptr)

    float __modff(float __x, float *__iptr)

    float expm1f(float __x)

    float __expm1f(float __x)

    float log1pf(float __x)

    float __log1pf(float __x)

    float logbf(float __x)

    float __logbf(float __x)

    float exp2f(float __x)

    float __exp2f(float __x)

    float log2f(float __x)

    float __log2f(float __x)

    float powf(float __x, float __y)

    float __powf(float __x, float __y)

    float sqrtf(float __x)

    float __sqrtf(float __x)

    float hypotf(float __x, float __y)

    float __hypotf(float __x, float __y)

    float cbrtf(float __x)

    float __cbrtf(float __x)

    float ceilf(float __x)

    float __ceilf(float __x)

    float fabsf(float __x)

    float __fabsf(float __x)

    float floorf(float __x)

    float __floorf(float __x)

    float fmodf(float __x, float __y)

    float __fmodf(float __x, float __y)

    int __isinff(float __value)

    int __finitef(float __value)

    int isinff(float __value)

    int finitef(float __value)

    float dremf(float __x, float __y)

    float __dremf(float __x, float __y)

    float significandf(float __x)

    float __significandf(float __x)

    float copysignf(float __x, float __y)

    float __copysignf(float __x, float __y)

    float nanf(const char *__tagb)

    float __nanf(const char *__tagb)

    int __isnanf(float __value)

    int isnanf(float __value)

    float j0f(float)

    float __j0f(float)

    float j1f(float)

    float __j1f(float)

    float jnf(int, float)

    float __jnf(int, float)

    float y0f(float)

    float __y0f(float)

    float y1f(float)

    float __y1f(float)

    float ynf(int, float)

    float __ynf(int, float)

    float erff(float)

    float __erff(float)

    float erfcf(float)

    float __erfcf(float)

    float lgammaf(float)

    float __lgammaf(float)

    float tgammaf(float)

    float __tgammaf(float)

    float gammaf(float)

    float __gammaf(float)

    float lgammaf_r(float, int *__signgamp)

    float __lgammaf_r(float, int *__signgamp)

    float rintf(float __x)

    float __rintf(float __x)

    float nextafterf(float __x, float __y)

    float __nextafterf(float __x, float __y)

    float nexttowardf(float __x, long double __y)

    float __nexttowardf(float __x, long double __y)

    float remainderf(float __x, float __y)

    float __remainderf(float __x, float __y)

    float scalbnf(float __x, int __n)

    float __scalbnf(float __x, int __n)

    int ilogbf(float __x)

    int __ilogbf(float __x)

    float scalblnf(float __x, long __n)

    float __scalblnf(float __x, long __n)

    float nearbyintf(float __x)

    float __nearbyintf(float __x)

    float roundf(float __x)

    float __roundf(float __x)

    float truncf(float __x)

    float __truncf(float __x)

    float remquof(float __x, float __y, int *__quo)

    float __remquof(float __x, float __y, int *__quo)

    long lrintf(float __x)

    long __lrintf(float __x)

    long long llrintf(float __x)

    long long __llrintf(float __x)

    long lroundf(float __x)

    long __lroundf(float __x)

    long long llroundf(float __x)

    long long __llroundf(float __x)

    float fdimf(float __x, float __y)

    float __fdimf(float __x, float __y)

    float fmaxf(float __x, float __y)

    float __fmaxf(float __x, float __y)

    float fminf(float __x, float __y)

    float __fminf(float __x, float __y)

    int __fpclassifyf(float __value)

    int __signbitf(float __value)

    float fmaf(float __x, float __y, float __z)

    float __fmaf(float __x, float __y, float __z)

    float scalbf(float __x, float __n)

    float __scalbf(float __x, float __n)

    long double acosl(long double __x)

    long double __acosl(long double __x)

    long double asinl(long double __x)

    long double __asinl(long double __x)

    long double atanl(long double __x)

    long double __atanl(long double __x)

    long double atan2l(long double __y, long double __x)

    long double __atan2l(long double __y, long double __x)

    long double cosl(long double __x)

    long double __cosl(long double __x)

    long double sinl(long double __x)

    long double __sinl(long double __x)

    long double tanl(long double __x)

    long double __tanl(long double __x)

    long double coshl(long double __x)

    long double __coshl(long double __x)

    long double sinhl(long double __x)

    long double __sinhl(long double __x)

    long double tanhl(long double __x)

    long double __tanhl(long double __x)

    long double acoshl(long double __x)

    long double __acoshl(long double __x)

    long double asinhl(long double __x)

    long double __asinhl(long double __x)

    long double atanhl(long double __x)

    long double __atanhl(long double __x)

    long double expl(long double __x)

    long double __expl(long double __x)

    long double frexpl(long double __x, int *__exponent)

    long double __frexpl(long double __x, int *__exponent)

    long double ldexpl(long double __x, int __exponent)

    long double __ldexpl(long double __x, int __exponent)

    long double logl(long double __x)

    long double __logl(long double __x)

    long double log10l(long double __x)

    long double __log10l(long double __x)

    long double modfl(long double __x, long double *__iptr)

    long double __modfl(long double __x, long double *__iptr)

    long double expm1l(long double __x)

    long double __expm1l(long double __x)

    long double log1pl(long double __x)

    long double __log1pl(long double __x)

    long double logbl(long double __x)

    long double __logbl(long double __x)

    long double exp2l(long double __x)

    long double __exp2l(long double __x)

    long double log2l(long double __x)

    long double __log2l(long double __x)

    long double powl(long double __x, long double __y)

    long double __powl(long double __x, long double __y)

    long double sqrtl(long double __x)

    long double __sqrtl(long double __x)

    long double hypotl(long double __x, long double __y)

    long double __hypotl(long double __x, long double __y)

    long double cbrtl(long double __x)

    long double __cbrtl(long double __x)

    long double ceill(long double __x)

    long double __ceill(long double __x)

    long double fabsl(long double __x)

    long double __fabsl(long double __x)

    long double floorl(long double __x)

    long double __floorl(long double __x)

    long double fmodl(long double __x, long double __y)

    long double __fmodl(long double __x, long double __y)

    int __isinfl(long double __value)

    int __finitel(long double __value)

    int isinfl(long double __value)

    int finitel(long double __value)

    long double dreml(long double __x, long double __y)

    long double __dreml(long double __x, long double __y)

    long double significandl(long double __x)

    long double __significandl(long double __x)

    long double copysignl(long double __x, long double __y)

    long double __copysignl(long double __x, long double __y)

    long double nanl(const char *__tagb)

    long double __nanl(const char *__tagb)

    int __isnanl(long double __value)

    int isnanl(long double __value)

    long double j0l(long double)

    long double __j0l(long double)

    long double j1l(long double)

    long double __j1l(long double)

    long double jnl(int, long double)

    long double __jnl(int, long double)

    long double y0l(long double)

    long double __y0l(long double)

    long double y1l(long double)

    long double __y1l(long double)

    long double ynl(int, long double)

    long double __ynl(int, long double)

    long double erfl(long double)

    long double __erfl(long double)

    long double erfcl(long double)

    long double __erfcl(long double)

    long double lgammal(long double)

    long double __lgammal(long double)

    long double tgammal(long double)

    long double __tgammal(long double)

    long double gammal(long double)

    long double __gammal(long double)

    long double lgammal_r(long double, int *__signgamp)

    long double __lgammal_r(long double, int *__signgamp)

    long double rintl(long double __x)

    long double __rintl(long double __x)

    long double nextafterl(long double __x, long double __y)

    long double __nextafterl(long double __x, long double __y)

    long double nexttowardl(long double __x, long double __y)

    long double __nexttowardl(long double __x, long double __y)

    long double remainderl(long double __x, long double __y)

    long double __remainderl(long double __x, long double __y)

    long double scalbnl(long double __x, int __n)

    long double __scalbnl(long double __x, int __n)

    int ilogbl(long double __x)

    int __ilogbl(long double __x)

    long double scalblnl(long double __x, long __n)

    long double __scalblnl(long double __x, long __n)

    long double nearbyintl(long double __x)

    long double __nearbyintl(long double __x)

    long double roundl(long double __x)

    long double __roundl(long double __x)

    long double truncl(long double __x)

    long double __truncl(long double __x)

    long double remquol(long double __x, long double __y, int *__quo)

    long double __remquol(long double __x, long double __y, int *__quo)

    long lrintl(long double __x)

    long __lrintl(long double __x)

    long long llrintl(long double __x)

    long long __llrintl(long double __x)

    long lroundl(long double __x)

    long __lroundl(long double __x)

    long long llroundl(long double __x)

    long long __llroundl(long double __x)

    long double fdiml(long double __x, long double __y)

    long double __fdiml(long double __x, long double __y)

    long double fmaxl(long double __x, long double __y)

    long double __fmaxl(long double __x, long double __y)

    long double fminl(long double __x, long double __y)

    long double __fminl(long double __x, long double __y)

    int __fpclassifyl(long double __value)

    int __signbitl(long double __value)

    long double fmal(long double __x, long double __y, long double __z)

    long double __fmal(long double __x, long double __y, long double __z)

    long double scalbl(long double __x, long double __n)

    long double __scalbl(long double __x, long double __n)

    int signgam
    cdef enum:
        FP_NAN
        FP_INFINITE
        FP_ZERO
        FP_SUBNORMAL
        FP_NORMAL

    ctypedef enum _LIB_VERSION_TYPE:
        _IEEE_
        _SVID_
        _XOPEN_
        _POSIX_
        _ISOC_


    _LIB_VERSION_TYPE _LIB_VERSION
    cdef struct exception:
        int type
        char *name
        double arg1
        double arg2
        double retval

    int matherr(exception *__exc)

    cdef enum:
        _ISupper
        _ISlower
        _ISalpha
        _ISdigit
        _ISxdigit
        _ISspace
        _ISprint
        _ISgraph
        _ISblank
        _IScntrl
        _ISpunct
        _ISalnum

    const unsigned short **__ctype_b_loc()

    const __int32_t **__ctype_tolower_loc()

    const __int32_t **__ctype_toupper_loc()

    int isalnum(int)

    int isalpha(int)

    int iscntrl(int)

    int isdigit(int)

    int islower(int)

    int isgraph(int)

    int isprint(int)

    int ispunct(int)

    int isspace(int)

    int isupper(int)

    int isxdigit(int)

    int tolower(int __c)

    int toupper(int __c)

    int isblank(int)

    int isascii(int __c)

    int toascii(int __c)

    int _toupper(int)

    int _tolower(int)

    int isalnum_l(int, __locale_t)

    int isalpha_l(int, __locale_t)

    int iscntrl_l(int, __locale_t)

    int isdigit_l(int, __locale_t)

    int islower_l(int, __locale_t)

    int isgraph_l(int, __locale_t)

    int isprint_l(int, __locale_t)

    int ispunct_l(int, __locale_t)

    int isspace_l(int, __locale_t)

    int isupper_l(int, __locale_t)

    int isxdigit_l(int, __locale_t)

    int isblank_l(int, __locale_t)

    int __tolower_l(int __c, __locale_t __l)

    int tolower_l(int __c, __locale_t __l)

    int __toupper_l(int __c, __locale_t __l)

    int toupper_l(int __c, __locale_t __l)

    cdef struct tm:
        int tm_sec
        int tm_min
        int tm_hour
        int tm_mday
        int tm_mon
        int tm_year
        int tm_wday
        int tm_yday
        int tm_isdst
        long tm_gmtoff
        const char *tm_zone

    cdef struct itimerspec:
        timespec it_interval
        timespec it_value

    cdef struct sigevent:
        pass

    clock_t clock()

    time_t time(time_t *__timer)

    double difftime(time_t __time1, time_t __time0)

    time_t mktime(tm *__tp)

    int strftime(char *__s, int __maxsize, const char *__format, tm *__tp)

    int strftime_l(char *__s, int __maxsize, const char *__format, tm *__tp, __locale_t __loc)

    tm *gmtime(const time_t *__timer)

    tm *localtime(const time_t *__timer)

    tm *gmtime_r(const time_t *__timer, tm *__tp)

    tm *localtime_r(const time_t *__timer, tm *__tp)

    char *asctime(tm *__tp)

    char *ctime(const time_t *__timer)

    char *asctime_r(tm *__tp, char *__buf)

    char *ctime_r(const time_t *__timer, char *__buf)

    char *__tzname[2]
    int __daylight
    long __timezone
    char *tzname[2]
    void tzset()

    int daylight
    long timezone
    int stime(const time_t *__when)

    time_t timegm(tm *__tp)

    time_t timelocal(tm *__tp)

    int dysize(int __year)

    int nanosleep(timespec *__requested_time, timespec *__remaining)

    int clock_getres(clockid_t __clock_id, timespec *__res)

    int clock_gettime(clockid_t __clock_id, timespec *__tp)

    int clock_settime(clockid_t __clock_id, timespec *__tp)

    int clock_nanosleep(clockid_t __clock_id, int __flags, timespec *__req, timespec *__rem)

    int clock_getcpuclockid(pid_t __pid, clockid_t *__clock_id)

    int timer_create(clockid_t __clock_id, sigevent *__evp, timer_t *__timerid)

    int timer_delete(timer_t __timerid)

    int timer_settime(timer_t __timerid, int __flags, itimerspec *__value, itimerspec *__ovalue)

    int timer_gettime(timer_t __timerid, itimerspec *__value)

    int timer_getoverrun(timer_t __timerid)

    int *__errno_location()

    cdef struct lconv:
        char *decimal_point
        char *thousands_sep
        char *grouping
        char *int_curr_symbol
        char *currency_symbol
        char *mon_decimal_point
        char *mon_thousands_sep
        char *mon_grouping
        char *positive_sign
        char *negative_sign
        char int_frac_digits
        char frac_digits
        char p_cs_precedes
        char p_sep_by_space
        char n_cs_precedes
        char n_sep_by_space
        char p_sign_posn
        char n_sign_posn
        char int_p_cs_precedes
        char int_p_sep_by_space
        char int_n_cs_precedes
        char int_n_sep_by_space
        char int_p_sign_posn
        char int_n_sign_posn

    char *setlocale(int __category, const char *__locale)

    lconv *localeconv()

    __locale_t newlocale(int __category_mask, const char *__locale, __locale_t __base)

    __locale_t duplocale(__locale_t __dataset)

    void freelocale(__locale_t __dataset)

    __locale_t uselocale(__locale_t __dataset)

    ctypedef int GInt32

    ctypedef unsigned int GUInt32

    ctypedef short GInt16

    ctypedef unsigned short GUInt16

    ctypedef unsigned char GByte

    ctypedef int GBool

    ctypedef long long GIntBig

    ctypedef unsigned long long GUIntBig

    ctypedef struct OGREnvelope:
        double MinX
        double MaxX
        double MinY
        double MaxY


    ctypedef struct OGREnvelope3D:
        double MinX
        double MaxX
        double MinY
        double MaxY
        double MinZ
        double MaxZ


    void *OGRMalloc
    void *OGRCalloc
    void *OGRRealloc(void *, int size_t)

    char *OGRStrdup(const char *)

    void OGRFree(void *)

    ctypedef int OGRErr

    ctypedef int OGRBoolean

    ctypedef enum OGRwkbGeometryType:
        wkbUnknown
        wkbPoint
        wkbLineString
        wkbPolygon
        wkbMultiPoint
        wkbMultiLineString
        wkbMultiPolygon
        wkbGeometryCollection
        wkbNone
        wkbLinearRing
        wkbPoint25D
        wkbLineString25D
        wkbPolygon25D
        wkbMultiPoint25D
        wkbMultiLineString25D
        wkbMultiPolygon25D
        wkbGeometryCollection25D


    const char *OGRGeometryTypeToName(OGRwkbGeometryType eType)

    OGRwkbGeometryType OGRMergeGeometryTypes(OGRwkbGeometryType eMain, OGRwkbGeometryType eExtra)

    ctypedef enum OGRwkbByteOrder:
        wkbXDR
        wkbNDR


    ctypedef enum OGRFieldType:
        OFTInteger
        OFTIntegerList
        OFTReal
        OFTRealList
        OFTString
        OFTStringList
        OFTWideString
        OFTWideStringList
        OFTBinary
        OFTDate
        OFTTime
        OFTDateTime
        OFTMaxType


    ctypedef enum OGRJustification:
        OJUndefined
        OJLeft
        OJRight


    cdef struct __OGRField_IntegerList:
        int nCount
        int *paList

    ctypedef __OGRField_IntegerList __OGRField_IntegerList_t

    cdef struct __OGRField_RealList:
        int nCount
        double *paList

    ctypedef __OGRField_RealList __OGRField_RealList_t

    cdef struct __OGRField_StringList:
        int nCount
        char **paList

    ctypedef __OGRField_StringList __OGRField_StringList_t

    cdef struct __OGRField_Binary:
        int nCount
        GByte *paData

    ctypedef __OGRField_Binary __OGRField_Binary_t

    cdef struct __OGRField_Set:
        int nMarker1
        int nMarker2

    ctypedef __OGRField_Set __OGRField_Set_t

    cdef struct __OGRField_Date:
        GInt16 Year
        GByte Month
        GByte Day
        GByte Hour
        GByte Minute
        GByte Second
        GByte TZFlag

    ctypedef __OGRField_Date __OGRField_Date_t

    ctypedef union OGRField:
        int Integer
        double Real
        char *String
        __OGRField_IntegerList_t IntegerList
        __OGRField_RealList_t RealList
        __OGRField_StringList_t StringList
        __OGRField_Binary_t Binary
        __OGRField_Set_t Set
        __OGRField_Date_t Date


    int OGRParseDate(const char *pszInput, OGRField *psOutput, int nOptions)

    cdef enum ogr_style_tool_class_id:
        OGRSTCNone
        OGRSTCPen
        OGRSTCBrush
        OGRSTCSymbol
        OGRSTCLabel
        OGRSTCVector

    ctypedef ogr_style_tool_class_id OGRSTClassId

    cdef enum ogr_style_tool_units_id:
        OGRSTUGround
        OGRSTUPixel
        OGRSTUPoints
        OGRSTUMM
        OGRSTUCM
        OGRSTUInches

    ctypedef ogr_style_tool_units_id OGRSTUnitId

    cdef enum ogr_style_tool_param_pen_id:
        OGRSTPenColor
        OGRSTPenWidth
        OGRSTPenPattern
        OGRSTPenId
        OGRSTPenPerOffset
        OGRSTPenCap
        OGRSTPenJoin
        OGRSTPenPriority
        OGRSTPenLast

    ctypedef ogr_style_tool_param_pen_id OGRSTPenParam

    cdef enum ogr_style_tool_param_brush_id:
        OGRSTBrushFColor
        OGRSTBrushBColor
        OGRSTBrushId
        OGRSTBrushAngle
        OGRSTBrushSize
        OGRSTBrushDx
        OGRSTBrushDy
        OGRSTBrushPriority
        OGRSTBrushLast

    ctypedef ogr_style_tool_param_brush_id OGRSTBrushParam

    cdef enum ogr_style_tool_param_symbol_id:
        OGRSTSymbolId
        OGRSTSymbolAngle
        OGRSTSymbolColor
        OGRSTSymbolSize
        OGRSTSymbolDx
        OGRSTSymbolDy
        OGRSTSymbolStep
        OGRSTSymbolPerp
        OGRSTSymbolOffset
        OGRSTSymbolPriority
        OGRSTSymbolFontName
        OGRSTSymbolOColor
        OGRSTSymbolLast

    ctypedef ogr_style_tool_param_symbol_id OGRSTSymbolParam

    cdef enum ogr_style_tool_param_label_id:
        OGRSTLabelFontName
        OGRSTLabelSize
        OGRSTLabelTextString
        OGRSTLabelAngle
        OGRSTLabelFColor
        OGRSTLabelBColor
        OGRSTLabelPlacement
        OGRSTLabelAnchor
        OGRSTLabelDx
        OGRSTLabelDy
        OGRSTLabelPerp
        OGRSTLabelBold
        OGRSTLabelItalic
        OGRSTLabelUnderline
        OGRSTLabelPriority
        OGRSTLabelStrikeout
        OGRSTLabelStretch
        OGRSTLabelAdjHor
        OGRSTLabelAdjVert
        OGRSTLabelHColor
        OGRSTLabelOColor
        OGRSTLabelLast

    ctypedef ogr_style_tool_param_label_id OGRSTLabelParam

    const char *GDALVersionInfo(const char *)

    int GDALCheckVersion(int nVersionMajor, int nVersionMinor, const char *pszCallingComponentName)

    ctypedef void *OGRGeometryH

    ctypedef void *OGRSpatialReferenceH

    ctypedef void *OGRCoordinateTransformationH

    cdef struct _CPLXMLNode:
        pass

    OGRErr OGR_G_CreateFromWkb(unsigned char *, OGRSpatialReferenceH, OGRGeometryH *, int)

    OGRErr OGR_G_CreateFromWkt(char **, OGRSpatialReferenceH, OGRGeometryH *)

    OGRErr OGR_G_CreateFromFgf(unsigned char *, OGRSpatialReferenceH, OGRGeometryH *, int, int *)

    void OGR_G_DestroyGeometry(OGRGeometryH)

    OGRGeometryH OGR_G_CreateGeometry(OGRwkbGeometryType)

    OGRGeometryH OGR_G_ApproximateArcAngles(double dfCenterX, double dfCenterY, double dfZ, double dfPrimaryRadius, double dfSecondaryAxis, double dfRotation, double dfStartAngle, double dfEndAngle, double dfMaxAngleStepSizeDegrees)

    OGRGeometryH OGR_G_ForceToPolygon(OGRGeometryH)

    OGRGeometryH OGR_G_ForceToMultiPolygon(OGRGeometryH)

    OGRGeometryH OGR_G_ForceToMultiPoint(OGRGeometryH)

    OGRGeometryH OGR_G_ForceToMultiLineString(OGRGeometryH)

    int OGR_G_GetDimension(OGRGeometryH)

    int OGR_G_GetCoordinateDimension(OGRGeometryH)

    void OGR_G_SetCoordinateDimension(OGRGeometryH, int)

    OGRGeometryH OGR_G_Clone(OGRGeometryH)

    void OGR_G_GetEnvelope(OGRGeometryH, OGREnvelope *)

    void OGR_G_GetEnvelope3D(OGRGeometryH, OGREnvelope3D *)

    OGRErr OGR_G_ImportFromWkb(OGRGeometryH, unsigned char *, int)

    OGRErr OGR_G_ExportToWkb(OGRGeometryH, OGRwkbByteOrder, unsigned char *)

    int OGR_G_WkbSize(OGRGeometryH hGeom)

    OGRErr OGR_G_ImportFromWkt(OGRGeometryH, char **)

    OGRErr OGR_G_ExportToWkt(OGRGeometryH, char **)

    OGRwkbGeometryType OGR_G_GetGeometryType(OGRGeometryH)

    const char *OGR_G_GetGeometryName(OGRGeometryH)

    void OGR_G_DumpReadable(OGRGeometryH, FILE *, const char *)

    void OGR_G_FlattenTo2D(OGRGeometryH)

    void OGR_G_CloseRings(OGRGeometryH)

    OGRGeometryH OGR_G_CreateFromGML(const char *)

    char *OGR_G_ExportToGML(OGRGeometryH)

    char *OGR_G_ExportToGMLEx(OGRGeometryH, char **papszOptions)

    char *OGR_G_ExportToKML(OGRGeometryH, const char *pszAltitudeMode)

    char *OGR_G_ExportToJson(OGRGeometryH)

    char *OGR_G_ExportToJsonEx(OGRGeometryH, char **papszOptions)

    OGRGeometryH OGR_G_CreateGeometryFromJson(const char *)

    void OGR_G_AssignSpatialReference(OGRGeometryH, OGRSpatialReferenceH)

    OGRSpatialReferenceH OGR_G_GetSpatialReference(OGRGeometryH)

    OGRErr OGR_G_Transform(OGRGeometryH, OGRCoordinateTransformationH)

    OGRErr OGR_G_TransformTo(OGRGeometryH, OGRSpatialReferenceH)

    OGRGeometryH OGR_G_Simplify(OGRGeometryH hThis, double tolerance)

    OGRGeometryH OGR_G_SimplifyPreserveTopology(OGRGeometryH hThis, double tolerance)

    void OGR_G_Segmentize(OGRGeometryH hGeom, double dfMaxLength)

    int OGR_G_Intersects(OGRGeometryH, OGRGeometryH)

    int OGR_G_Equals(OGRGeometryH, OGRGeometryH)

    int OGR_G_Disjoint(OGRGeometryH, OGRGeometryH)

    int OGR_G_Touches(OGRGeometryH, OGRGeometryH)

    int OGR_G_Crosses(OGRGeometryH, OGRGeometryH)

    int OGR_G_Within(OGRGeometryH, OGRGeometryH)

    int OGR_G_Contains(OGRGeometryH, OGRGeometryH)

    int OGR_G_Overlaps(OGRGeometryH, OGRGeometryH)

    OGRGeometryH OGR_G_Boundary(OGRGeometryH)

    OGRGeometryH OGR_G_ConvexHull(OGRGeometryH)

    OGRGeometryH OGR_G_Buffer(OGRGeometryH, double, int)

    OGRGeometryH OGR_G_Intersection(OGRGeometryH, OGRGeometryH)

    OGRGeometryH OGR_G_Union(OGRGeometryH, OGRGeometryH)

    OGRGeometryH OGR_G_UnionCascaded(OGRGeometryH)

    OGRGeometryH OGR_G_Difference(OGRGeometryH, OGRGeometryH)

    OGRGeometryH OGR_G_SymDifference(OGRGeometryH, OGRGeometryH)

    double OGR_G_Distance(OGRGeometryH, OGRGeometryH)

    double OGR_G_Length(OGRGeometryH)

    double OGR_G_Area(OGRGeometryH)

    int OGR_G_Centroid(OGRGeometryH, OGRGeometryH)

    void OGR_G_Empty(OGRGeometryH)

    int OGR_G_IsEmpty(OGRGeometryH)

    int OGR_G_IsValid(OGRGeometryH)

    int OGR_G_IsSimple(OGRGeometryH)

    int OGR_G_IsRing(OGRGeometryH)

    OGRGeometryH OGR_G_Polygonize(OGRGeometryH)

    int OGR_G_Intersect(OGRGeometryH, OGRGeometryH)

    int OGR_G_Equal(OGRGeometryH, OGRGeometryH)

    OGRGeometryH OGR_G_SymmetricDifference(OGRGeometryH, OGRGeometryH)

    double OGR_G_GetArea(OGRGeometryH)

    OGRGeometryH OGR_G_GetBoundary(OGRGeometryH)

    int OGR_G_GetPointCount(OGRGeometryH)

    int OGR_G_GetPoints(OGRGeometryH hGeom, void *pabyX, int nXStride, void *pabyY, int nYStride, void *pabyZ, int nZStride)

    double OGR_G_GetX(OGRGeometryH, int)

    double OGR_G_GetY(OGRGeometryH, int)

    double OGR_G_GetZ(OGRGeometryH, int)

    void OGR_G_GetPoint(OGRGeometryH, int iPoint, double *, double *, double *)

    void OGR_G_SetPoint(OGRGeometryH, int iPoint, double, double, double)

    void OGR_G_SetPoint_2D(OGRGeometryH, int iPoint, double, double)

    void OGR_G_AddPoint(OGRGeometryH, double, double, double)

    void OGR_G_AddPoint_2D(OGRGeometryH, double, double)

    int OGR_G_GetGeometryCount(OGRGeometryH)

    OGRGeometryH OGR_G_GetGeometryRef(OGRGeometryH, int)

    OGRErr OGR_G_AddGeometry(OGRGeometryH, OGRGeometryH)

    OGRErr OGR_G_AddGeometryDirectly(OGRGeometryH, OGRGeometryH)

    OGRErr OGR_G_RemoveGeometry(OGRGeometryH, int, int)

    OGRGeometryH OGRBuildPolygonFromEdges(OGRGeometryH hLinesAsCollection, int bBestEffort, int bAutoClose, double dfTolerance, OGRErr *peErr)

    OGRErr OGRSetGenerate_DB2_V72_BYTE_ORDER(int bGenerate_DB2_V72_BYTE_ORDER)

    int OGRGetGenerate_DB2_V72_BYTE_ORDER()

    ctypedef void *OGRFieldDefnH

    ctypedef void *OGRFeatureDefnH

    ctypedef void *OGRFeatureH

    ctypedef void *OGRStyleTableH

    OGRFieldDefnH OGR_Fld_Create(const char *, OGRFieldType)

    void OGR_Fld_Destroy(OGRFieldDefnH)

    void OGR_Fld_SetName(OGRFieldDefnH, const char *)

    const char *OGR_Fld_GetNameRef(OGRFieldDefnH)

    OGRFieldType OGR_Fld_GetType(OGRFieldDefnH)

    void OGR_Fld_SetType(OGRFieldDefnH, OGRFieldType)

    OGRJustification OGR_Fld_GetJustify(OGRFieldDefnH)

    void OGR_Fld_SetJustify(OGRFieldDefnH, OGRJustification)

    int OGR_Fld_GetWidth(OGRFieldDefnH)

    void OGR_Fld_SetWidth(OGRFieldDefnH, int)

    int OGR_Fld_GetPrecision(OGRFieldDefnH)

    void OGR_Fld_SetPrecision(OGRFieldDefnH, int)

    void OGR_Fld_Set(OGRFieldDefnH, const char *, OGRFieldType, int, int, OGRJustification)

    int OGR_Fld_IsIgnored(OGRFieldDefnH hDefn)

    void OGR_Fld_SetIgnored(OGRFieldDefnH hDefn, int)

    const char *OGR_GetFieldTypeName(OGRFieldType)

    OGRFeatureDefnH OGR_FD_Create(const char *)

    void OGR_FD_Destroy(OGRFeatureDefnH)

    void OGR_FD_Release(OGRFeatureDefnH)

    const char *OGR_FD_GetName(OGRFeatureDefnH)

    int OGR_FD_GetFieldCount(OGRFeatureDefnH)

    OGRFieldDefnH OGR_FD_GetFieldDefn(OGRFeatureDefnH, int)

    int OGR_FD_GetFieldIndex(OGRFeatureDefnH, const char *)

    void OGR_FD_AddFieldDefn(OGRFeatureDefnH, OGRFieldDefnH)

    OGRErr OGR_FD_DeleteFieldDefn(OGRFeatureDefnH hDefn, int iField)

    OGRErr OGR_FD_ReorderFieldDefns(OGRFeatureDefnH hDefn, int *panMap)

    OGRwkbGeometryType OGR_FD_GetGeomType(OGRFeatureDefnH)

    void OGR_FD_SetGeomType(OGRFeatureDefnH, OGRwkbGeometryType)

    int OGR_FD_IsGeometryIgnored(OGRFeatureDefnH)

    void OGR_FD_SetGeometryIgnored(OGRFeatureDefnH, int)

    int OGR_FD_IsStyleIgnored(OGRFeatureDefnH)

    void OGR_FD_SetStyleIgnored(OGRFeatureDefnH, int)

    int OGR_FD_Reference(OGRFeatureDefnH)

    int OGR_FD_Dereference(OGRFeatureDefnH)

    int OGR_FD_GetReferenceCount(OGRFeatureDefnH)

    OGRFeatureH OGR_F_Create(OGRFeatureDefnH)

    void OGR_F_Destroy(OGRFeatureH)

    OGRFeatureDefnH OGR_F_GetDefnRef(OGRFeatureH)

    OGRErr OGR_F_SetGeometryDirectly(OGRFeatureH, OGRGeometryH)

    OGRErr OGR_F_SetGeometry(OGRFeatureH, OGRGeometryH)

    OGRGeometryH OGR_F_GetGeometryRef(OGRFeatureH)

    OGRGeometryH OGR_F_StealGeometry(OGRFeatureH)

    OGRFeatureH OGR_F_Clone(OGRFeatureH)

    int OGR_F_Equal(OGRFeatureH, OGRFeatureH)

    int OGR_F_GetFieldCount(OGRFeatureH)

    OGRFieldDefnH OGR_F_GetFieldDefnRef(OGRFeatureH, int)

    int OGR_F_GetFieldIndex(OGRFeatureH, const char *)

    int OGR_F_IsFieldSet(OGRFeatureH, int)

    void OGR_F_UnsetField(OGRFeatureH, int)

    OGRField *OGR_F_GetRawFieldRef(OGRFeatureH, int)

    int OGR_F_GetFieldAsInteger(OGRFeatureH, int)

    double OGR_F_GetFieldAsDouble(OGRFeatureH, int)

    const char *OGR_F_GetFieldAsString(OGRFeatureH, int)

    const int *OGR_F_GetFieldAsIntegerList(OGRFeatureH, int, int *)

    const double *OGR_F_GetFieldAsDoubleList(OGRFeatureH, int, int *)

    char **OGR_F_GetFieldAsStringList(OGRFeatureH, int)

    GByte *OGR_F_GetFieldAsBinary(OGRFeatureH, int, int *)

    int OGR_F_GetFieldAsDateTime(OGRFeatureH, int, int *, int *, int *, int *, int *, int *, int *)

    void OGR_F_SetFieldInteger(OGRFeatureH, int, int)

    void OGR_F_SetFieldDouble(OGRFeatureH, int, double)

    void OGR_F_SetFieldString(OGRFeatureH, int, const char *)

    void OGR_F_SetFieldIntegerList(OGRFeatureH, int, int, int *)

    void OGR_F_SetFieldDoubleList(OGRFeatureH, int, int, double *)

    void OGR_F_SetFieldStringList(OGRFeatureH, int, char **)

    void OGR_F_SetFieldRaw(OGRFeatureH, int, OGRField *)

    void OGR_F_SetFieldBinary(OGRFeatureH, int, int, GByte *)

    void OGR_F_SetFieldDateTime(OGRFeatureH, int, int, int, int, int, int, int, int)

    long OGR_F_GetFID(OGRFeatureH)

    OGRErr OGR_F_SetFID(OGRFeatureH, long)

    void OGR_F_DumpReadable(OGRFeatureH, FILE *)

    OGRErr OGR_F_SetFrom(OGRFeatureH, OGRFeatureH, int)

    OGRErr OGR_F_SetFromWithMap(OGRFeatureH, OGRFeatureH, int, int *)

    const char *OGR_F_GetStyleString(OGRFeatureH)

    void OGR_F_SetStyleString(OGRFeatureH, const char *)

    void OGR_F_SetStyleStringDirectly(OGRFeatureH, char *)

    OGRStyleTableH OGR_F_GetStyleTable(OGRFeatureH)

    void OGR_F_SetStyleTableDirectly(OGRFeatureH, OGRStyleTableH)

    void OGR_F_SetStyleTable(OGRFeatureH, OGRStyleTableH)

    ctypedef void *OGRLayerH

    ctypedef void *OGRDataSourceH

    ctypedef void *OGRSFDriverH

    const char *OGR_L_GetName(OGRLayerH)

    OGRwkbGeometryType OGR_L_GetGeomType(OGRLayerH)

    OGRGeometryH OGR_L_GetSpatialFilter(OGRLayerH)

    void OGR_L_SetSpatialFilter(OGRLayerH, OGRGeometryH)

    void OGR_L_SetSpatialFilterRect(OGRLayerH, double, double, double, double)

    OGRErr OGR_L_SetAttributeFilter(OGRLayerH, const char *)

    void OGR_L_ResetReading(OGRLayerH)

    OGRFeatureH OGR_L_GetNextFeature(OGRLayerH)

    OGRErr OGR_L_SetNextByIndex(OGRLayerH, long)

    OGRFeatureH OGR_L_GetFeature(OGRLayerH, long)

    OGRErr OGR_L_SetFeature(OGRLayerH, OGRFeatureH)

    OGRErr OGR_L_CreateFeature(OGRLayerH, OGRFeatureH)

    OGRErr OGR_L_DeleteFeature(OGRLayerH, long)

    OGRFeatureDefnH OGR_L_GetLayerDefn(OGRLayerH)

    OGRSpatialReferenceH OGR_L_GetSpatialRef(OGRLayerH)

    int OGR_L_GetFeatureCount(OGRLayerH, int)

    OGRErr OGR_L_GetExtent(OGRLayerH, OGREnvelope *, int)

    int OGR_L_TestCapability(OGRLayerH, const char *)

    OGRErr OGR_L_CreateField(OGRLayerH, OGRFieldDefnH, int)

    OGRErr OGR_L_DeleteField(OGRLayerH, int iField)

    OGRErr OGR_L_ReorderFields(OGRLayerH, int *panMap)

    OGRErr OGR_L_ReorderField(OGRLayerH, int iOldFieldPos, int iNewFieldPos)

    OGRErr OGR_L_AlterFieldDefn(OGRLayerH, int iField, OGRFieldDefnH hNewFieldDefn, int nFlags)

    OGRErr OGR_L_StartTransaction(OGRLayerH)

    OGRErr OGR_L_CommitTransaction(OGRLayerH)

    OGRErr OGR_L_RollbackTransaction(OGRLayerH)

    int OGR_L_Reference(OGRLayerH)

    int OGR_L_Dereference(OGRLayerH)

    int OGR_L_GetRefCount(OGRLayerH)

    OGRErr OGR_L_SyncToDisk(OGRLayerH)

    GIntBig OGR_L_GetFeaturesRead(OGRLayerH)

    const char *OGR_L_GetFIDColumn(OGRLayerH)

    const char *OGR_L_GetGeometryColumn(OGRLayerH)

    OGRStyleTableH OGR_L_GetStyleTable(OGRLayerH)

    void OGR_L_SetStyleTableDirectly(OGRLayerH, OGRStyleTableH)

    void OGR_L_SetStyleTable(OGRLayerH, OGRStyleTableH)

    OGRErr OGR_L_SetIgnoredFields(OGRLayerH, const char **)

    void OGR_DS_Destroy(OGRDataSourceH)

    const char *OGR_DS_GetName(OGRDataSourceH)

    int OGR_DS_GetLayerCount(OGRDataSourceH)

    OGRLayerH OGR_DS_GetLayer(OGRDataSourceH, int)

    OGRLayerH OGR_DS_GetLayerByName(OGRDataSourceH, const char *)

    OGRErr OGR_DS_DeleteLayer(OGRDataSourceH, int)

    OGRSFDriverH OGR_DS_GetDriver(OGRDataSourceH)

    OGRLayerH OGR_DS_CreateLayer(OGRDataSourceH, const char *, OGRSpatialReferenceH, OGRwkbGeometryType, char **)

    OGRLayerH OGR_DS_CopyLayer(OGRDataSourceH, OGRLayerH, const char *, char **)

    int OGR_DS_TestCapability(OGRDataSourceH, const char *)

    OGRLayerH OGR_DS_ExecuteSQL(OGRDataSourceH, const char *, OGRGeometryH, const char *)

    void OGR_DS_ReleaseResultSet(OGRDataSourceH, OGRLayerH)

    int OGR_DS_Reference(OGRDataSourceH)

    int OGR_DS_Dereference(OGRDataSourceH)

    int OGR_DS_GetRefCount(OGRDataSourceH)

    int OGR_DS_GetSummaryRefCount(OGRDataSourceH)

    OGRErr OGR_DS_SyncToDisk(OGRDataSourceH)

    OGRStyleTableH OGR_DS_GetStyleTable(OGRDataSourceH)

    void OGR_DS_SetStyleTableDirectly(OGRDataSourceH, OGRStyleTableH)

    void OGR_DS_SetStyleTable(OGRDataSourceH, OGRStyleTableH)

    const char *OGR_Dr_GetName(OGRSFDriverH)

    OGRDataSourceH OGR_Dr_Open(OGRSFDriverH, const char *, int)

    int OGR_Dr_TestCapability(OGRSFDriverH, const char *)

    OGRDataSourceH OGR_Dr_CreateDataSource(OGRSFDriverH, const char *, char **)

    OGRDataSourceH OGR_Dr_CopyDataSource(OGRSFDriverH, OGRDataSourceH, const char *, char **)

    OGRErr OGR_Dr_DeleteDataSource(OGRSFDriverH, const char *)

    OGRDataSourceH OGROpen(const char *, int, OGRSFDriverH *)

    OGRDataSourceH OGROpenShared(const char *, int, OGRSFDriverH *)

    OGRErr OGRReleaseDataSource(OGRDataSourceH)

    void OGRRegisterDriver(OGRSFDriverH)

    void OGRDeregisterDriver(OGRSFDriverH)

    int OGRGetDriverCount()

    OGRSFDriverH OGRGetDriver(int)

    OGRSFDriverH OGRGetDriverByName(const char *)

    int OGRGetOpenDSCount()

    OGRDataSourceH OGRGetOpenDS(int iDS)

    void OGRRegisterAll()

    void OGRCleanupAll()

    ctypedef void *OGRStyleMgrH

    ctypedef void *OGRStyleToolH

    OGRStyleMgrH OGR_SM_Create(OGRStyleTableH hStyleTable)

    void OGR_SM_Destroy(OGRStyleMgrH hSM)

    const char *OGR_SM_InitFromFeature(OGRStyleMgrH hSM, OGRFeatureH hFeat)

    int OGR_SM_InitStyleString(OGRStyleMgrH hSM, const char *pszStyleString)

    int OGR_SM_GetPartCount(OGRStyleMgrH hSM, const char *pszStyleString)

    OGRStyleToolH OGR_SM_GetPart(OGRStyleMgrH hSM, int nPartId, const char *pszStyleString)

    int OGR_SM_AddPart(OGRStyleMgrH hSM, OGRStyleToolH hST)

    int OGR_SM_AddStyle(OGRStyleMgrH hSM, const char *pszStyleName, const char *pszStyleString)

    OGRStyleToolH OGR_ST_Create(OGRSTClassId eClassId)

    void OGR_ST_Destroy(OGRStyleToolH hST)

    OGRSTClassId OGR_ST_GetType(OGRStyleToolH hST)

    OGRSTUnitId OGR_ST_GetUnit(OGRStyleToolH hST)

    void OGR_ST_SetUnit(OGRStyleToolH hST, OGRSTUnitId eUnit, double dfGroundPaperScale)

    const char *OGR_ST_GetParamStr(OGRStyleToolH hST, int eParam, int *bValueIsNull)

    int OGR_ST_GetParamNum(OGRStyleToolH hST, int eParam, int *bValueIsNull)

    double OGR_ST_GetParamDbl(OGRStyleToolH hST, int eParam, int *bValueIsNull)

    void OGR_ST_SetParamStr(OGRStyleToolH hST, int eParam, const char *pszValue)

    void OGR_ST_SetParamNum(OGRStyleToolH hST, int eParam, int nValue)

    void OGR_ST_SetParamDbl(OGRStyleToolH hST, int eParam, double dfValue)

    const char *OGR_ST_GetStyleString(OGRStyleToolH hST)

    int OGR_ST_GetRGBFromString(OGRStyleToolH hST, const char *pszColor, int *pnRed, int *pnGreen, int *pnBlue, int *pnAlpha)

    OGRStyleTableH OGR_STBL_Create()

    void OGR_STBL_Destroy(OGRStyleTableH hSTBL)

    int OGR_STBL_SaveStyleTable(OGRStyleTableH hStyleTable, const char *pszFilename)

    int OGR_STBL_LoadStyleTable(OGRStyleTableH hStyleTable, const char *pszFilename)

    const char *OGR_STBL_Find(OGRStyleTableH hStyleTable, const char *pszName)

    void OGR_STBL_ResetStyleStringReading(OGRStyleTableH hStyleTable)

    const char *OGR_STBL_GetNextStyle(OGRStyleTableH hStyleTable)

    const char *OGR_STBL_GetLastStyleName(OGRStyleTableH hStyleTable)

    ctypedef unsigned int Oid

    ctypedef enum ConnStatusType:
        CONNECTION_OK
        CONNECTION_BAD
        CONNECTION_STARTED
        CONNECTION_MADE
        CONNECTION_AWAITING_RESPONSE
        CONNECTION_AUTH_OK
        CONNECTION_SETENV
        CONNECTION_SSL_STARTUP
        CONNECTION_NEEDED


    ctypedef enum PostgresPollingStatusType:
        PGRES_POLLING_FAILED
        PGRES_POLLING_READING
        PGRES_POLLING_WRITING
        PGRES_POLLING_OK
        PGRES_POLLING_ACTIVE


    ctypedef enum ExecStatusType:
        PGRES_EMPTY_QUERY
        PGRES_COMMAND_OK
        PGRES_TUPLES_OK
        PGRES_COPY_OUT
        PGRES_COPY_IN
        PGRES_BAD_RESPONSE
        PGRES_NONFATAL_ERROR
        PGRES_FATAL_ERROR
        PGRES_COPY_BOTH
        PGRES_SINGLE_TUPLE


    ctypedef enum PGTransactionStatusType:
        PQTRANS_IDLE
        PQTRANS_ACTIVE
        PQTRANS_INTRANS
        PQTRANS_INERROR
        PQTRANS_UNKNOWN


    ctypedef enum PGVerbosity:
        PQERRORS_TERSE
        PQERRORS_DEFAULT
        PQERRORS_VERBOSE


    ctypedef enum PGPing:
        PQPING_OK
        PQPING_REJECT
        PQPING_NO_RESPONSE
        PQPING_NO_ATTEMPT


    cdef struct pg_conn:
        pass

    ctypedef pg_conn PGconn

    cdef struct pg_result:
        pass

    ctypedef pg_result PGresult

    cdef struct pg_cancel:
        pass

    ctypedef pg_cancel PGcancel

    cdef struct pgNotify:
        char *relname
        int be_pid
        char *extra
        pgNotify *next

    ctypedef pgNotify PGnotify

    ctypedef void (*PQnoticeReceiver)(void *, pg_result *)

    ctypedef void (*PQnoticeProcessor)(void *, const char *)

    ctypedef char pqbool

    cdef struct _PQprintOpt:
        pqbool header
        pqbool align
        pqbool standard
        pqbool html3
        pqbool expanded
        pqbool pager
        char *fieldSep
        char *tableOpt
        char *caption
        char **fieldName

    ctypedef _PQprintOpt PQprintOpt

    cdef struct _PQconninfoOption:
        char *keyword
        char *envvar
        char *compiled
        char *val
        char *label
        char *dispchar
        int dispsize

    ctypedef _PQconninfoOption PQconninfoOption

    cdef union __PQArgBlock_u:
        int *ptr
        int integer

    ctypedef __PQArgBlock_u __PQArgBlock_u_t

    ctypedef struct PQArgBlock:
        int len
        int isint
        __PQArgBlock_u_t u


    cdef struct pgresAttDesc:
        char *name
        Oid tableid
        int columnid
        int format
        Oid typid
        int typlen
        int atttypmod

    ctypedef pgresAttDesc PGresAttDesc

    PGconn *PQconnectStart(const char *conninfo)

    PGconn *PQconnectStartParams(const char *const *keywords, const char *const *values, int expand_dbname)

    PostgresPollingStatusType PQconnectPoll(PGconn *conn)

    PGconn *PQconnectdb(const char *conninfo)

    PGconn *PQconnectdbParams(const char *const *keywords, const char *const *values, int expand_dbname)

    PGconn *PQsetdbLogin(const char *pghost, const char *pgport, const char *pgoptions, const char *pgtty, const char *dbName, const char *login, const char *pwd)

    void PQfinish(PGconn *conn)

    PQconninfoOption *PQconndefaults()

    PQconninfoOption *PQconninfoParse(const char *conninfo, char **errmsg)

    void PQconninfoFree(PQconninfoOption *connOptions)

    int PQresetStart(PGconn *conn)

    PostgresPollingStatusType PQresetPoll(PGconn *conn)

    void PQreset(PGconn *conn)

    PGcancel *PQgetCancel(PGconn *conn)

    void PQfreeCancel(PGcancel *cancel)

    int PQcancel(PGcancel *cancel, char *errbuf, int errbufsize)

    int PQrequestCancel(PGconn *conn)

    char *PQdb(const PGconn *conn)

    char *PQuser(const PGconn *conn)

    char *PQpass(const PGconn *conn)

    char *PQhost(const PGconn *conn)

    char *PQport(const PGconn *conn)

    char *PQtty(const PGconn *conn)

    char *PQoptions(const PGconn *conn)

    ConnStatusType PQstatus(const PGconn *conn)

    PGTransactionStatusType PQtransactionStatus(const PGconn *conn)

    const char *PQparameterStatus(const PGconn *conn, const char *paramName)

    int PQprotocolVersion(const PGconn *conn)

    int PQserverVersion(const PGconn *conn)

    char *PQerrorMessage(const PGconn *conn)

    int PQsocket(const PGconn *conn)

    int PQbackendPID(const PGconn *conn)

    int PQconnectionNeedsPassword(const PGconn *conn)

    int PQconnectionUsedPassword(const PGconn *conn)

    int PQclientEncoding(const PGconn *conn)

    int PQsetClientEncoding(PGconn *conn, const char *encoding)

    void *PQgetssl(PGconn *conn)

    void PQinitSSL(int do_init)

    void PQinitOpenSSL(int do_ssl, int do_crypto)

    PGVerbosity PQsetErrorVerbosity(PGconn *conn, PGVerbosity verbosity)

    void PQtrace(PGconn *conn, FILE *debug_port)

    void PQuntrace(PGconn *conn)

    PQnoticeReceiver PQsetNoticeReceiver(PGconn *conn, PQnoticeReceiver proc, void *arg)

    PQnoticeProcessor PQsetNoticeProcessor(PGconn *conn, PQnoticeProcessor proc, void *arg)

    ctypedef void (*pgthreadlock_t)(int)

    pgthreadlock_t PQregisterThreadLock(pgthreadlock_t newhandler)

    PGresult *PQexec(PGconn *conn, const char *query)

    PGresult *PQexecParams(PGconn *conn, const char *command, int nParams, const Oid *paramTypes, const char *const *paramValues, const int *paramLengths, const int *paramFormats, int resultFormat)

    PGresult *PQprepare(PGconn *conn, const char *stmtName, const char *query, int nParams, const Oid *paramTypes)

    PGresult *PQexecPrepared(PGconn *conn, const char *stmtName, int nParams, const char *const *paramValues, const int *paramLengths, const int *paramFormats, int resultFormat)

    int PQsendQuery(PGconn *conn, const char *query)

    int PQsendQueryParams(PGconn *conn, const char *command, int nParams, const Oid *paramTypes, const char *const *paramValues, const int *paramLengths, const int *paramFormats, int resultFormat)

    int PQsendPrepare(PGconn *conn, const char *stmtName, const char *query, int nParams, const Oid *paramTypes)

    int PQsendQueryPrepared(PGconn *conn, const char *stmtName, int nParams, const char *const *paramValues, const int *paramLengths, const int *paramFormats, int resultFormat)

    int PQsetSingleRowMode(PGconn *conn)

    PGresult *PQgetResult(PGconn *conn)

    int PQisBusy(PGconn *conn)

    int PQconsumeInput(PGconn *conn)

    PGnotify *PQnotifies(PGconn *conn)

    int PQputCopyData(PGconn *conn, const char *buffer, int nbytes)

    int PQputCopyEnd(PGconn *conn, const char *errormsg)

    int PQgetCopyData(PGconn *conn, char **buffer, int async)

    int PQgetline(PGconn *conn, char *string, int length)

    int PQputline(PGconn *conn, const char *string)

    int PQgetlineAsync(PGconn *conn, char *buffer, int bufsize)

    int PQputnbytes(PGconn *conn, const char *buffer, int nbytes)

    int PQendcopy(PGconn *conn)

    int PQsetnonblocking(PGconn *conn, int arg)

    int PQisnonblocking(const PGconn *conn)

    int PQisthreadsafe()

    PGPing PQping(const char *conninfo)

    PGPing PQpingParams(const char *const *keywords, const char *const *values, int expand_dbname)

    int PQflush(PGconn *conn)

    PGresult *PQfn(PGconn *conn, int fnid, int *result_buf, int *result_len, int result_is_int, const PQArgBlock *args, int nargs)

    ExecStatusType PQresultStatus(const PGresult *res)

    char *PQresStatus(ExecStatusType status)

    char *PQresultErrorMessage(const PGresult *res)

    char *PQresultErrorField(const PGresult *res, int fieldcode)

    int PQntuples(const PGresult *res)

    int PQnfields(const PGresult *res)

    int PQbinaryTuples(const PGresult *res)

    char *PQfname(const PGresult *res, int field_num)

    int PQfnumber(const PGresult *res, const char *field_name)

    Oid PQftable(const PGresult *res, int field_num)

    int PQftablecol(const PGresult *res, int field_num)

    int PQfformat(const PGresult *res, int field_num)

    Oid PQftype(const PGresult *res, int field_num)

    int PQfsize(const PGresult *res, int field_num)

    int PQfmod(const PGresult *res, int field_num)

    char *PQcmdStatus(PGresult *res)

    char *PQoidStatus(const PGresult *res)

    Oid PQoidValue(const PGresult *res)

    char *PQcmdTuples(PGresult *res)

    char *PQgetvalue(const PGresult *res, int tup_num, int field_num)

    int PQgetlength(const PGresult *res, int tup_num, int field_num)

    int PQgetisnull(const PGresult *res, int tup_num, int field_num)

    int PQnparams(const PGresult *res)

    Oid PQparamtype(const PGresult *res, int param_num)

    PGresult *PQdescribePrepared(PGconn *conn, const char *stmt)

    PGresult *PQdescribePortal(PGconn *conn, const char *portal)

    int PQsendDescribePrepared(PGconn *conn, const char *stmt)

    int PQsendDescribePortal(PGconn *conn, const char *portal)

    void PQclear(PGresult *res)

    void PQfreemem(void *ptr)

    PGresult *PQmakeEmptyPGresult(PGconn *conn, ExecStatusType status)

    PGresult *PQcopyResult(const PGresult *src, int flags)

    int PQsetResultAttrs(PGresult *res, int numAttributes, PGresAttDesc *attDescs)

    void *PQresultAlloc(PGresult *res, int nBytes)

    int PQsetvalue(PGresult *res, int tup_num, int field_num, char *value, int len)

    int PQescapeStringConn(PGconn *conn, char *to, const char *from, int length, int *error)

    char *PQescapeLiteral(PGconn *conn, const char *str, int len)

    char *PQescapeIdentifier(PGconn *conn, const char *str, int len)

    unsigned char *PQescapeByteaConn(PGconn *conn, const unsigned char *from, int from_length, int *to_length)

    unsigned char *PQunescapeBytea(const unsigned char *strtext, int *retbuflen)

    int PQescapeString(char *to, const char *from, int length)

    unsigned char *PQescapeBytea(const unsigned char *from, int from_length, int *to_length)

    void PQprint(FILE *fout, const PGresult *res, const PQprintOpt *ps)

    void PQdisplayTuples(const PGresult *res, FILE *fp, int fillAlign, const char *fieldSep, int printHeader, int quiet)

    void PQprintTuples(const PGresult *res, FILE *fout, int printAttName, int terseOutput, int width)

    int lo_open(PGconn *conn, Oid lobjId, int mode)

    int lo_close(PGconn *conn, int fd)

    int lo_read(PGconn *conn, int fd, char *buf, int len)

    int lo_write(PGconn *conn, int fd, const char *buf, int len)

    int lo_lseek(PGconn *conn, int fd, int offset, int whence)

    Oid lo_creat(PGconn *conn, int mode)

    Oid lo_create(PGconn *conn, Oid lobjId)

    int lo_tell(PGconn *conn, int fd)

    int lo_truncate(PGconn *conn, int fd, int len)

    int lo_unlink(PGconn *conn, Oid lobjId)

    Oid lo_import(PGconn *conn, const char *filename)

    Oid lo_import_with_oid(PGconn *conn, const char *filename, Oid lobjId)

    int lo_export(PGconn *conn, Oid lobjId, const char *filename)

    int PQlibVersion()

    int PQmblen(const char *s, int encoding)

    int PQdsplen(const char *s, int encoding)

    int PQenv2encoding()

    char *PQencryptPassword(const char *passwd, const char *user)

    int pg_char_to_encoding(const char *name)

    const char *pg_encoding_to_char(int encoding)

    int pg_valid_server_encoding_id(int encoding)

    ctypedef int plus_t

    cdef struct site_att:
        int cat
        double *dbl
        char **str

    cdef struct bound_box:
        double N
        double S
        double E
        double W
        double T
        double B

    cdef struct gvfile:
        FILE *file
        char *start
        char *current
        char *end
        off_t size
        off_t alloc
        int loaded

    cdef struct field_info:
        int number
        char *name
        char *driver
        char *database
        char *table
        char *key

    cdef struct dblinks:
        field_info *field
        int alloc_fields
        int n_fields

    cdef struct Port_info:
        int byte_order
        int off_t_size
        unsigned char dbl_cnvrt[8]
        unsigned char flt_cnvrt[4]
        unsigned char lng_cnvrt[4]
        unsigned char int_cnvrt[4]
        unsigned char shrt_cnvrt[2]
        unsigned char off_t_cnvrt[8]
        int dbl_quick
        int flt_quick
        int lng_quick
        int int_quick
        int shrt_quick
        int off_t_quick

    cdef struct recycle:
        char dummy

    cdef struct dig_head:
        char *organization
        char *date
        char *user_name
        char *map_name
        char *source_date
        long orig_scale
        char *comment
        int proj
        int plani_zone
        double digit_thresh
        int Version_Major
        int Version_Minor
        int Back_Major
        int Back_Minor
        int with_z
        off_t size
        long head_size
        Port_info port
        off_t last_offset
        recycle *recycle

    cdef struct Coor_info:
        off_t size
        long mtime

    cdef struct Format_info_offset:
        int *array
        int array_num
        int array_alloc

    cdef struct __Format_info_cache_line_pnts:
        pass

    ctypedef __Format_info_cache_line_pnts __Format_info_cache_line_pnts_t

    cdef struct Format_info_cache:
        line_pnts **lines
        int *lines_types
        int lines_alloc
        int lines_num
        int lines_next
        long fid
        SF_FeatureType sf_type

    cdef struct Format_info_ogr:
        char *driver_name
        char *dsn
        char *layer_name
        OGRSFDriverH driver
        OGRDataSourceH ds
        OGRLayerH layer
        dbDriver *dbdriver
        char **dsn_options
        char **layer_options
        Format_info_cache cache
        OGRFeatureH feature_cache
        Format_info_offset offset
        int next_line

    cdef struct Format_info_pg:
        char *conninfo
        char *db_name
        char *schema_name
        char *table_name
        char *fid_column
        char *geom_column
        SF_FeatureType feature_type
        int coor_dim
        int srid
        dbDriver *dbdriver
        int inTransaction
        PGconn *conn
        PGresult *res
        int next_line
        Format_info_cache cache
        Format_info_offset offset
        char *topogeom_column
        char *toposchema_name
        int toposchema_id

    cdef struct Format_info:
        int i
        Format_info_ogr ogr
        Format_info_pg pg

    cdef struct Cat_index:
        int field
        int n_cats
        int a_cats
        int (*cat)[3]
        int n_ucats
        int n_types
        int type[7][2]
        off_t offset

    cdef struct __Plus_head_P_node:
        pass

    ctypedef __Plus_head_P_node __Plus_head_P_node_t

    cdef struct __Plus_head_P_line:
        pass

    ctypedef __Plus_head_P_line __Plus_head_P_line_t

    cdef struct __Plus_head_P_area:
        pass

    ctypedef __Plus_head_P_area __Plus_head_P_area_t

    cdef struct __Plus_head_P_isle:
        pass

    ctypedef __Plus_head_P_isle __Plus_head_P_isle_t

    cdef struct __Plus_head_uplist:
        int do_uplist
        int *uplines
        off_t *uplines_offset
        int alloc_uplines
        int n_uplines
        int *upnodes
        int alloc_upnodes
        int n_upnodes

    ctypedef __Plus_head_uplist __Plus_head_uplist_t

    cdef struct Plus_head:
        int Version_Major
        int Version_Minor
        int Back_Major
        int Back_Minor
        int spidx_Version_Major
        int spidx_Version_Minor
        int spidx_Back_Major
        int spidx_Back_Minor
        int cidx_Version_Major
        int cidx_Version_Minor
        int cidx_Back_Major
        int cidx_Back_Minor
        int with_z
        int spidx_with_z
        int off_t_size
        long head_size
        long spidx_head_size
        long cidx_head_size
        int release_support
        Port_info port
        Port_info spidx_port
        Port_info cidx_port
        int mode
        int built
        bound_box box
        P_node **Node
        P_line **Line
        P_area **Area
        P_isle **Isle
        plus_t n_plines
        plus_t n_llines
        plus_t n_blines
        plus_t n_clines
        plus_t n_flines
        plus_t n_klines
        plus_t n_vfaces
        plus_t n_hfaces
        plus_t n_nodes
        plus_t n_edges
        plus_t n_lines
        plus_t n_areas
        plus_t n_isles
        plus_t n_faces
        plus_t n_volumes
        plus_t n_holes
        plus_t alloc_nodes
        plus_t alloc_edges
        plus_t alloc_lines
        plus_t alloc_areas
        plus_t alloc_isles
        plus_t alloc_faces
        plus_t alloc_volumes
        plus_t alloc_holes
        off_t Node_offset
        off_t Edge_offset
        off_t Line_offset
        off_t Area_offset
        off_t Isle_offset
        off_t Volume_offset
        off_t Hole_offset
        int Spidx_built
        int Spidx_new
        int Spidx_file
        gvfile spidx_fp
        off_t Node_spidx_offset
        off_t Line_spidx_offset
        off_t Area_spidx_offset
        off_t Isle_spidx_offset
        off_t Face_spidx_offset
        off_t Volume_spidx_offset
        off_t Hole_spidx_offset
        RTree *Node_spidx
        RTree *Line_spidx
        RTree *Area_spidx
        RTree *Isle_spidx
        RTree *Face_spidx
        RTree *Volume_spidx
        RTree *Hole_spidx
        int update_cidx
        int n_cidx
        int a_cidx
        Cat_index *cidx
        int cidx_up_to_date
        off_t coor_size
        long coor_mtime
        __Plus_head_uplist_t uplist

    cdef struct __Map_info_constraint:
        int region_flag
        bound_box box
        int type_flag
        int type
        int field_flag
        int field

    ctypedef __Map_info_constraint __Map_info_constraint_t

    cdef struct Map_info:
        int format
        int temporary
        dblinks *dblnk
        Plus_head plus
        int graph_line_type
        dglGraph_s graph
        dglSPCache_s spCache
        double *edge_fcosts
        double *edge_bcosts
        double *node_costs
        int cost_multip
        int open
        int mode
        int level
        int head_only
        int support_updated
        plus_t next_line
        char *name
        char *mapset
        char *location
        char *gisdbase
        __Map_info_constraint_t constraint
        int proj
        gvfile dig_fp
        dig_head head
        Format_info fInfo
        FILE *hist_fp
        site_att *site_att
        int n_site_att
        int n_site_dbl
        int n_site_str

    cdef struct P_node:
        double x
        double y
        double z
        plus_t alloc_lines
        plus_t n_lines
        plus_t *lines
        float *angles

    cdef struct P_topo_l:
        plus_t N1
        plus_t N2

    cdef struct P_topo_b:
        plus_t N1
        plus_t N2
        plus_t left
        plus_t right

    cdef struct P_topo_c:
        plus_t area

    cdef struct P_topo_f:
        plus_t E[3]
        plus_t left
        plus_t right

    cdef struct P_topo_k:
        plus_t volume

    cdef struct P_line:
        char type
        off_t offset
        void *topo

    cdef struct P_area:
        plus_t n_lines
        plus_t alloc_lines
        plus_t *lines
        plus_t centroid
        plus_t n_isles
        plus_t alloc_isles
        plus_t *isles

    cdef struct P_isle:
        plus_t n_lines
        plus_t alloc_lines
        plus_t *lines
        plus_t area

    cdef struct line_pnts:
        double *x
        double *y
        double *z
        int n_points
        int alloc_points

    cdef struct line_cats:
        int *field
        int *cat
        int n_cats
        int alloc_cats

    cdef struct cat_list:
        int field
        int *min
        int *max
        int n_ranges
        int alloc_ranges

    cdef struct boxlist:
        int *id
        bound_box *box
        int have_boxes
        int n_values
        int alloc_values

    cdef struct varray:
        int size
        int *c

    cdef struct spatial_index:
        RTree *si_tree
        char *name

    void *dig_alloc_space(int, int *, int, void *, int)

    void *dig__alloc_space(int, int *, int, void *, int)

    void *dig_falloc(int, int)

    void *dig_frealloc(void *, int, int, int)

    void *dig__falloc(int, int)

    void *dig__frealloc(void *, int, int, int)

    float dig_calc_begin_angle(line_pnts *, double)

    float dig_calc_end_angle(line_pnts *, double)

    int dig_line_degenerate(line_pnts *)

    int dig_is_line_degenerate(line_pnts *, double)

    int dig_box_copy(bound_box *, bound_box *)

    int dig_box_extend(bound_box *, bound_box *)

    int dig_line_box(line_pnts *, bound_box *)

    int dig_cidx_init(Plus_head *)

    void dig_cidx_free(Plus_head *)

    int dig_cidx_add_cat(Plus_head *, int, int, int, int)

    int dig_cidx_add_cat_sorted(Plus_head *, int, int, int, int)

    int dig_cidx_del_cat(Plus_head *, int, int, int, int)

    void dig_cidx_sort(Plus_head *)

    int dig_write_cidx_head(gvfile *, Plus_head *)

    int dig_read_cidx_head(gvfile *, Plus_head *)

    int dig_write_cidx(gvfile *, Plus_head *)

    int dig_read_cidx(gvfile *, Plus_head *, int)

    off_t dig_ftell(gvfile *file)

    int dig_fseek(gvfile *file, off_t offset, int whence)

    void dig_rewind(gvfile *file)

    int dig_fflush(gvfile *file)

    int dig_fread(void *ptr, int size, int nmemb, gvfile *file)

    int dig_fwrite(const void *ptr, int size, int nmemb, gvfile *file)

    void dig_file_init(gvfile *file)

    int dig_file_load(gvfile *file)

    void dig_file_free(gvfile *file)

    int dig_write_frmt_ascii(FILE *, Format_info *, int)

    int dig_read_frmt_ascii(FILE *, Format_info *)

    int dig__write_head(Map_info *)

    int dig__read_head(Map_info *)

    double dig_x_intersect(double, double, double, double, double)

    int dig_test_for_intersection(double, double, double, double, double, double, double, double)

    int dig_find_intersection(double, double, double, double, double, double, double, double, double *, double *)

    double dig_distance2_point_to_line(double, double, double, double, double, double, double, double, double, int, double *, double *, double *, double *, int *)

    int dig_set_distance_to_line_tolerance(double)

    int dig_init_boxlist(boxlist *, int)

    int dig_boxlist_add(boxlist *, int, bound_box *)

    int dig_init_plus(Plus_head *)

    void dig_free_plus_nodes(Plus_head *)

    void dig_free_plus_lines(Plus_head *)

    void dig_free_plus_areas(Plus_head *)

    void dig_free_plus_isles(Plus_head *)

    void dig_free_plus(Plus_head *)

    int dig_load_plus(Plus_head *, gvfile *, int)

    int dig_write_plus_file(gvfile *, Plus_head *)

    int dig_write_nodes(gvfile *, Plus_head *)

    int dig_write_lines(gvfile *, Plus_head *)

    int dig_write_areas(gvfile *, Plus_head *)

    int dig_write_isles(gvfile *, Plus_head *)

    int dig_add_area(Plus_head *, int, plus_t *, bound_box *)

    int dig_area_add_isle(Plus_head *, int, int)

    int dig_area_del_isle(Plus_head *, int, int)

    int dig_del_area(Plus_head *, int)

    int dig_add_isle(Plus_head *, int, plus_t *, bound_box *)

    int dig_del_isle(Plus_head *, int)

    int dig_build_area_with_line(Plus_head *, plus_t, int, plus_t **)

    int dig_angle_next_line(Plus_head *, plus_t, int, int, float *)

    int dig_node_angle_check(Plus_head *, int, int)

    int dig_area_get_box(Plus_head *, plus_t, bound_box *)

    int dig_isle_get_box(Plus_head *, plus_t, bound_box *)

    int dig_add_line(Plus_head *, int, line_pnts *, bound_box *, off_t)

    int dig_restore_line(Plus_head *, int, int, line_pnts *, bound_box *, off_t)

    int dig_del_line(Plus_head *, int, double, double, double)

    plus_t dig_line_get_area(Plus_head *, plus_t, int)

    int dig_line_set_area(Plus_head *, plus_t, int, plus_t)

    int dig_add_node(Plus_head *, double, double, double)

    int dig_which_node(Plus_head *, double, double, double)

    int dig_node_add_line(Plus_head *, int, int, line_pnts *, int)

    float dig_node_line_angle(Plus_head *, int, int)

    int dig_Rd_P_node(Plus_head *, int i, gvfile *)

    int dig_Wr_P_node(Plus_head *, int i, gvfile *)

    int dig_Rd_P_line(Plus_head *, int i, gvfile *)

    int dig_Wr_P_line(Plus_head *, int i, gvfile *)

    int dig_Rd_P_area(Plus_head *, int i, gvfile *)

    int dig_Wr_P_area(Plus_head *, int i, gvfile *)

    int dig_Rd_P_isle(Plus_head *, int i, gvfile *)

    int dig_Wr_P_isle(Plus_head *, int i, gvfile *)

    int dig_Rd_Plus_head(gvfile *, Plus_head *)

    int dig_Wr_Plus_head(gvfile *, Plus_head *)

    int dig_find_area_poly(line_pnts *, double *)

    double dig_find_poly_orientation(line_pnts *)

    int dig_get_poly_points(int, line_pnts **, int *, line_pnts *)

    void dig_init_portable(Port_info *, int)

    int dig__byte_order_out()

    int dig_set_cur_port(Port_info *)

    int dig__fread_port_D(double *, int size_t, gvfile *)

    int dig__fread_port_F(float *, int size_t, gvfile *)

    int dig__fread_port_O(off_t *, int size_t, gvfile *, int)

    int dig__fread_port_L(long *, int size_t, gvfile *)

    int dig__fread_port_S(short *, int size_t, gvfile *)

    int dig__fread_port_I(int *, int size_t, gvfile *)

    int dig__fread_port_P(plus_t *, int size_t, gvfile *)

    int dig__fread_port_C(char *, int size_t, gvfile *)

    int dig__fwrite_port_D(const double *, int size_t, gvfile *)

    int dig__fwrite_port_F(const float *, int size_t, gvfile *)

    int dig__fwrite_port_O(const off_t *, int size_t, gvfile *, int)

    int dig__fwrite_port_L(const long *, int size_t, gvfile *)

    int dig__fwrite_port_S(const short *, int size_t, gvfile *)

    int dig__fwrite_port_I(const int *, int size_t, gvfile *)

    int dig__fwrite_port_P(const plus_t *, int size_t, gvfile *)

    int dig__fwrite_port_C(const char *, int size_t, gvfile *)

    int dig_prune(line_pnts *, double)

    int dig_spidx_init(Plus_head *)

    void dig_spidx_free_nodes(Plus_head *)

    void dig_spidx_free_lines(Plus_head *)

    void dig_spidx_free_areas(Plus_head *)

    void dig_spidx_free_isles(Plus_head *)

    void dig_spidx_free(Plus_head *)

    int dig_spidx_add_node(Plus_head *, int, double, double, double)

    int dig_spidx_add_line(Plus_head *, int, bound_box *)

    int dig_spidx_add_area(Plus_head *, int, bound_box *)

    int dig_spidx_add_isle(Plus_head *, int, bound_box *)

    int dig_spidx_del_node(Plus_head *, int)

    int dig_spidx_del_line(Plus_head *, int, double, double, double)

    int dig_spidx_del_area(Plus_head *, int)

    int dig_spidx_del_isle(Plus_head *, int)

    int dig_select_nodes(Plus_head *, bound_box *, ilist *)

    int dig_select_lines(Plus_head *, bound_box *, boxlist *)

    int dig_select_areas(Plus_head *, bound_box *, boxlist *)

    int dig_select_isles(Plus_head *, bound_box *, boxlist *)

    int dig_find_node(Plus_head *, double, double, double)

    int dig_find_line_box(Plus_head *, int, bound_box *)

    int dig_find_area_box(Plus_head *, int, bound_box *)

    int dig_find_isle_box(Plus_head *, int, bound_box *)

    int dig_Rd_spidx_head(gvfile *, Plus_head *)

    int dig_Wr_spidx_head(gvfile *, Plus_head *)

    int dig_Wr_spidx(gvfile *, Plus_head *)

    int dig_Rd_spidx(gvfile *, Plus_head *)

    int dig_dump_spidx(FILE *, Plus_head *)

    int rtree_search(RTree *, RTree_Rect *, SearchHitCallback *, void *, Plus_head *)

    int dig_node_alloc_line(P_node *, int add)

    int dig_alloc_nodes(Plus_head *, int)

    int dig_alloc_lines(Plus_head *, int)

    int dig_alloc_areas(Plus_head *, int)

    int dig_alloc_isles(Plus_head *, int)

    P_node *dig_alloc_node()

    P_line *dig_alloc_line()

    void *dig_alloc_topo(char)

    P_area *dig_alloc_area()

    P_isle *dig_alloc_isle()

    void dig_free_node(P_node *)

    void dig_free_line(P_line *)

    void dig_free_area(P_area *)

    void dig_free_isle(P_isle *)

    int dig_alloc_points(line_pnts *, int)

    int dig_alloc_cats(line_cats *, int)

    int dig_area_alloc_line(P_area *, int)

    int dig_area_alloc_isle(P_area *, int)

    int dig_isle_alloc_line(P_isle *, int)

    int dig_out_of_memory()

    int dig_type_to_store(int)

    int dig_type_from_store(int)

    void dig_line_reset_updated(Plus_head *)

    void dig_line_add_updated(Plus_head *, int)

    void dig_node_reset_updated(Plus_head *)

    void dig_node_add_updated(Plus_head *, int)

    char *color_name(int)

    char *dig_float_point(char *, int, double)

    double dig_unit_conversion()

    double *dig__double_convert(double *, double *, int, dig_head *)

    float *dig__float_convert(float *, float *, int, dig_head *)

    short *dig__short_convert(short *in, short *out, int, dig_head *)

    long *dig__long_convert(long *, long *, int, dig_head *)

    long *dig__int_convert(int *, long *, int, dig_head *)

    long *dig__plus_t_convert(plus_t *, long *, int, dig_head *)

    int *dig__long_convert_to_int(long *, int *, int, dig_head *)

    plus_t *dig__long_convert_to_plus_t(long *, plus_t *, int, dig_head *)

    char *dig__convert_buffer(int)

    plus_t **dig_get_cont_lines(Map_info *, plus_t, double, int)

    plus_t dig_get_next_cont_line(Map_info *, plus_t, double, int)

    dig_head *dig_get_head()

    dig_head *dig__get_head()

    int dig_start_clock(long *)

    int dig_stop_clock(long *)

    char *dig_stop_clock_str(long *)

    int dig_write_file_checks(gvfile *, Plus_head *)

    int dig_do_file_checks(Map_info *, char *, char *)

    int dig_map_to_head(Map_info *, Plus_head *)

    int dig_head_to_map(Plus_head *, Map_info *)

    int dig_spindex_init(Plus_head *)

    int dig_point_to_area(Map_info *, double, double)

    int dig_point_to_next_area(Map_info *, double, double, double *)

    int dig_point_to_line(Map_info *, double, double, char)

    int dig_check_dist(Map_info *, int, double, double, double *)

    int dig__check_dist(Map_info *, line_pnts *, double, double, double *)

    int dig_point_by_line(Map_info *, double, double, double, double, char)

    int dig_write_head_ascii(FILE *, dig_head *)

    int dig_read_head_ascii(FILE *, dig_head *)

    int dig_struct_copy(void *, void *, int)

    int dig_rmcr(char *)

    ctypedef void (*GEOSMessageHandler)(const char *)

    cdef struct GEOSGeom_t:
        pass

    ctypedef GEOSGeom_t GEOSGeometry

    cdef struct GEOSPrepGeom_t:
        pass

    ctypedef GEOSPrepGeom_t GEOSPreparedGeometry

    cdef struct GEOSCoordSeq_t:
        pass

    ctypedef GEOSCoordSeq_t GEOSCoordSequence

    cdef struct GEOSSTRtree_t:
        pass

    ctypedef GEOSSTRtree_t GEOSSTRtree

    cdef struct GEOSBufParams_t:
        pass

    ctypedef GEOSBufParams_t GEOSBufferParams

    ctypedef GEOSGeometry *GEOSGeom

    ctypedef GEOSCoordSequence *GEOSCoordSeq

    cdef enum GEOSGeomTypes:
        GEOS_POINT
        GEOS_LINESTRING
        GEOS_LINEARRING
        GEOS_POLYGON
        GEOS_MULTIPOINT
        GEOS_MULTILINESTRING
        GEOS_MULTIPOLYGON
        GEOS_GEOMETRYCOLLECTION

    cdef enum GEOSByteOrders:
        GEOS_WKB_XDR
        GEOS_WKB_NDR

    cdef struct GEOSContextHandle_HS:
        pass

    ctypedef GEOSContextHandle_HS *GEOSContextHandle_t

    ctypedef void (*GEOSQueryCallback)(void *, void *)

    void initGEOS(GEOSMessageHandler notice_function, GEOSMessageHandler error_function)

    void finishGEOS()

    GEOSContextHandle_t initGEOS_r(GEOSMessageHandler notice_function, GEOSMessageHandler error_function)

    void finishGEOS_r(GEOSContextHandle_t handle)

    GEOSMessageHandler GEOSContext_setNoticeHandler_r(GEOSContextHandle_t extHandle, GEOSMessageHandler nf)

    GEOSMessageHandler GEOSContext_setErrorHandler_r(GEOSContextHandle_t extHandle, GEOSMessageHandler nf)

    const char *GEOSversion()

    GEOSGeometry *GEOSGeomFromWKT(const char *wkt)

    char *GEOSGeomToWKT(const GEOSGeometry *g)

    GEOSGeometry *GEOSGeomFromWKT_r(GEOSContextHandle_t handle, const char *wkt)

    char *GEOSGeomToWKT_r(GEOSContextHandle_t handle, const GEOSGeometry *g)

    int GEOS_getWKBOutputDims()

    int GEOS_setWKBOutputDims(int newDims)

    int GEOS_getWKBOutputDims_r(GEOSContextHandle_t handle)

    int GEOS_setWKBOutputDims_r(GEOSContextHandle_t handle, int newDims)

    int GEOS_getWKBByteOrder()

    int GEOS_setWKBByteOrder(int byteOrder)

    GEOSGeometry *GEOSGeomFromWKB_buf(const unsigned char *wkb, int size)

    unsigned char *GEOSGeomToWKB_buf(const GEOSGeometry *g, int *size)

    GEOSGeometry *GEOSGeomFromHEX_buf(const unsigned char *hex, int size)

    unsigned char *GEOSGeomToHEX_buf(const GEOSGeometry *g, int *size)

    int GEOS_getWKBByteOrder_r(GEOSContextHandle_t handle)

    int GEOS_setWKBByteOrder_r(GEOSContextHandle_t handle, int byteOrder)

    GEOSGeometry *GEOSGeomFromWKB_buf_r(GEOSContextHandle_t handle, const unsigned char *wkb, int size)

    unsigned char *GEOSGeomToWKB_buf_r(GEOSContextHandle_t handle, const GEOSGeometry *g, int *size)

    GEOSGeometry *GEOSGeomFromHEX_buf_r(GEOSContextHandle_t handle, const unsigned char *hex, int size)

    unsigned char *GEOSGeomToHEX_buf_r(GEOSContextHandle_t handle, const GEOSGeometry *g, int *size)

    GEOSCoordSequence *GEOSCoordSeq_create(unsigned int size, unsigned int dims)

    GEOSCoordSequence *GEOSCoordSeq_create_r(GEOSContextHandle_t handle, unsigned int size, unsigned int dims)

    GEOSCoordSequence *GEOSCoordSeq_clone(const GEOSCoordSequence *s)

    GEOSCoordSequence *GEOSCoordSeq_clone_r(GEOSContextHandle_t handle, const GEOSCoordSequence *s)

    void GEOSCoordSeq_destroy(GEOSCoordSequence *s)

    void GEOSCoordSeq_destroy_r(GEOSContextHandle_t handle, GEOSCoordSequence *s)

    int GEOSCoordSeq_setX(GEOSCoordSequence *s, unsigned int idx, double val)

    int GEOSCoordSeq_setY(GEOSCoordSequence *s, unsigned int idx, double val)

    int GEOSCoordSeq_setZ(GEOSCoordSequence *s, unsigned int idx, double val)

    int GEOSCoordSeq_setOrdinate(GEOSCoordSequence *s, unsigned int idx, unsigned int dim, double val)

    int GEOSCoordSeq_setX_r(GEOSContextHandle_t handle, GEOSCoordSequence *s, unsigned int idx, double val)

    int GEOSCoordSeq_setY_r(GEOSContextHandle_t handle, GEOSCoordSequence *s, unsigned int idx, double val)

    int GEOSCoordSeq_setZ_r(GEOSContextHandle_t handle, GEOSCoordSequence *s, unsigned int idx, double val)

    int GEOSCoordSeq_setOrdinate_r(GEOSContextHandle_t handle, GEOSCoordSequence *s, unsigned int idx, unsigned int dim, double val)

    int GEOSCoordSeq_getX(const GEOSCoordSequence *s, unsigned int idx, double *val)

    int GEOSCoordSeq_getY(const GEOSCoordSequence *s, unsigned int idx, double *val)

    int GEOSCoordSeq_getZ(const GEOSCoordSequence *s, unsigned int idx, double *val)

    int GEOSCoordSeq_getOrdinate(const GEOSCoordSequence *s, unsigned int idx, unsigned int dim, double *val)

    int GEOSCoordSeq_getX_r(GEOSContextHandle_t handle, const GEOSCoordSequence *s, unsigned int idx, double *val)

    int GEOSCoordSeq_getY_r(GEOSContextHandle_t handle, const GEOSCoordSequence *s, unsigned int idx, double *val)

    int GEOSCoordSeq_getZ_r(GEOSContextHandle_t handle, const GEOSCoordSequence *s, unsigned int idx, double *val)

    int GEOSCoordSeq_getOrdinate_r(GEOSContextHandle_t handle, const GEOSCoordSequence *s, unsigned int idx, unsigned int dim, double *val)

    int GEOSCoordSeq_getSize(const GEOSCoordSequence *s, unsigned int *size)

    int GEOSCoordSeq_getDimensions(const GEOSCoordSequence *s, unsigned int *dims)

    int GEOSCoordSeq_getSize_r(GEOSContextHandle_t handle, const GEOSCoordSequence *s, unsigned int *size)

    int GEOSCoordSeq_getDimensions_r(GEOSContextHandle_t handle, const GEOSCoordSequence *s, unsigned int *dims)

    double GEOSProject(const GEOSGeometry *g, const GEOSGeometry *p)

    double GEOSProject_r(GEOSContextHandle_t handle, const GEOSGeometry *g, const GEOSGeometry *p)

    GEOSGeometry *GEOSInterpolate(const GEOSGeometry *g, double d)

    GEOSGeometry *GEOSInterpolate_r(GEOSContextHandle_t handle, const GEOSGeometry *g, double d)

    double GEOSProjectNormalized(const GEOSGeometry *g, const GEOSGeometry *p)

    double GEOSProjectNormalized_r(GEOSContextHandle_t handle, const GEOSGeometry *g, const GEOSGeometry *p)

    GEOSGeometry *GEOSInterpolateNormalized(const GEOSGeometry *g, double d)

    GEOSGeometry *GEOSInterpolateNormalized_r(GEOSContextHandle_t handle, const GEOSGeometry *g, double d)

    cdef enum GEOSBufCapStyles:
        GEOSBUF_CAP_ROUND
        GEOSBUF_CAP_FLAT
        GEOSBUF_CAP_SQUARE

    cdef enum GEOSBufJoinStyles:
        GEOSBUF_JOIN_ROUND
        GEOSBUF_JOIN_MITRE
        GEOSBUF_JOIN_BEVEL

    GEOSBufferParams *GEOSBufferParams_create()

    GEOSBufferParams *GEOSBufferParams_create_r(GEOSContextHandle_t handle)

    void GEOSBufferParams_destroy(GEOSBufferParams *parms)

    void GEOSBufferParams_destroy_r(GEOSContextHandle_t handle, GEOSBufferParams *parms)

    int GEOSBufferParams_setEndCapStyle(GEOSBufferParams *p, int style)

    int GEOSBufferParams_setEndCapStyle_r(GEOSContextHandle_t handle, GEOSBufferParams *p, int style)

    int GEOSBufferParams_setJoinStyle(GEOSBufferParams *p, int joinStyle)

    int GEOSBufferParams_setJoinStyle_r(GEOSContextHandle_t handle, GEOSBufferParams *p, int joinStyle)

    int GEOSBufferParams_setMitreLimit(GEOSBufferParams *p, double mitreLimit)

    int GEOSBufferParams_setMitreLimit_r(GEOSContextHandle_t handle, GEOSBufferParams *p, double mitreLimit)

    int GEOSBufferParams_setQuadrantSegments(GEOSBufferParams *p, int quadSegs)

    int GEOSBufferParams_setQuadrantSegments_r(GEOSContextHandle_t handle, GEOSBufferParams *p, int quadSegs)

    int GEOSBufferParams_setSingleSided(GEOSBufferParams *p, int singleSided)

    int GEOSBufferParams_setSingleSided_r(GEOSContextHandle_t handle, GEOSBufferParams *p, int singleSided)

    GEOSGeometry *GEOSBufferWithParams(const GEOSGeometry *g1, const GEOSBufferParams *p, double width)

    GEOSGeometry *GEOSBufferWithParams_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, const GEOSBufferParams *p, double width)

    GEOSGeometry *GEOSBuffer(const GEOSGeometry *g1, double width, int quadsegs)

    GEOSGeometry *GEOSBuffer_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, double width, int quadsegs)

    GEOSGeometry *GEOSBufferWithStyle(const GEOSGeometry *g1, double width, int quadsegs, int endCapStyle, int joinStyle, double mitreLimit)

    GEOSGeometry *GEOSBufferWithStyle_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, double width, int quadsegs, int endCapStyle, int joinStyle, double mitreLimit)

    GEOSGeometry *GEOSSingleSidedBuffer(const GEOSGeometry *g1, double width, int quadsegs, int joinStyle, double mitreLimit, int leftSide)

    GEOSGeometry *GEOSSingleSidedBuffer_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, double width, int quadsegs, int joinStyle, double mitreLimit, int leftSide)

    GEOSGeometry *GEOSOffsetCurve(const GEOSGeometry *g1, double width, int quadsegs, int joinStyle, double mitreLimit)

    GEOSGeometry *GEOSOffsetCurve_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, double width, int quadsegs, int joinStyle, double mitreLimit)

    GEOSGeometry *GEOSGeom_createPoint(GEOSCoordSequence *s)

    GEOSGeometry *GEOSGeom_createEmptyPoint()

    GEOSGeometry *GEOSGeom_createLinearRing(GEOSCoordSequence *s)

    GEOSGeometry *GEOSGeom_createLineString(GEOSCoordSequence *s)

    GEOSGeometry *GEOSGeom_createEmptyLineString()

    GEOSGeometry *GEOSGeom_createPoint_r(GEOSContextHandle_t handle, GEOSCoordSequence *s)

    GEOSGeometry *GEOSGeom_createEmptyPoint_r(GEOSContextHandle_t handle)

    GEOSGeometry *GEOSGeom_createLinearRing_r(GEOSContextHandle_t handle, GEOSCoordSequence *s)

    GEOSGeometry *GEOSGeom_createLineString_r(GEOSContextHandle_t handle, GEOSCoordSequence *s)

    GEOSGeometry *GEOSGeom_createEmptyLineString_r(GEOSContextHandle_t handle)

    GEOSGeometry *GEOSGeom_createEmptyPolygon()

    GEOSGeometry *GEOSGeom_createPolygon(GEOSGeometry *shell, GEOSGeometry **holes, unsigned int nholes)

    GEOSGeometry *GEOSGeom_createCollection(int type, GEOSGeometry **geoms, unsigned int ngeoms)

    GEOSGeometry *GEOSGeom_createEmptyCollection(int type)

    GEOSGeometry *GEOSGeom_createEmptyPolygon_r(GEOSContextHandle_t handle)

    GEOSGeometry *GEOSGeom_createPolygon_r(GEOSContextHandle_t handle, GEOSGeometry *shell, GEOSGeometry **holes, unsigned int nholes)

    GEOSGeometry *GEOSGeom_createCollection_r(GEOSContextHandle_t handle, int type, GEOSGeometry **geoms, unsigned int ngeoms)

    GEOSGeometry *GEOSGeom_createEmptyCollection_r(GEOSContextHandle_t handle, int type)

    GEOSGeometry *GEOSGeom_clone(const GEOSGeometry *g)

    GEOSGeometry *GEOSGeom_clone_r(GEOSContextHandle_t handle, const GEOSGeometry *g)

    void GEOSGeom_destroy(GEOSGeometry *g)

    void GEOSGeom_destroy_r(GEOSContextHandle_t handle, GEOSGeometry *g)

    GEOSGeometry *GEOSEnvelope(const GEOSGeometry *g1)

    GEOSGeometry *GEOSIntersection(const GEOSGeometry *g1, const GEOSGeometry *g2)

    GEOSGeometry *GEOSConvexHull(const GEOSGeometry *g1)

    GEOSGeometry *GEOSDifference(const GEOSGeometry *g1, const GEOSGeometry *g2)

    GEOSGeometry *GEOSSymDifference(const GEOSGeometry *g1, const GEOSGeometry *g2)

    GEOSGeometry *GEOSBoundary(const GEOSGeometry *g1)

    GEOSGeometry *GEOSUnion(const GEOSGeometry *g1, const GEOSGeometry *g2)

    GEOSGeometry *GEOSUnaryUnion(const GEOSGeometry *g1)

    GEOSGeometry *GEOSUnionCascaded(const GEOSGeometry *g1)

    GEOSGeometry *GEOSUnionCascaded_r(GEOSContextHandle_t handle, const GEOSGeometry *g1)

    GEOSGeometry *GEOSPointOnSurface(const GEOSGeometry *g1)

    GEOSGeometry *GEOSGetCentroid(const GEOSGeometry *g)

    GEOSGeometry *GEOSEnvelope_r(GEOSContextHandle_t handle, const GEOSGeometry *g1)

    GEOSGeometry *GEOSIntersection_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, const GEOSGeometry *g2)

    GEOSGeometry *GEOSConvexHull_r(GEOSContextHandle_t handle, const GEOSGeometry *g1)

    GEOSGeometry *GEOSDifference_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, const GEOSGeometry *g2)

    GEOSGeometry *GEOSSymDifference_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, const GEOSGeometry *g2)

    GEOSGeometry *GEOSBoundary_r(GEOSContextHandle_t handle, const GEOSGeometry *g1)

    GEOSGeometry *GEOSUnion_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, const GEOSGeometry *g2)

    GEOSGeometry *GEOSUnaryUnion_r(GEOSContextHandle_t handle, const GEOSGeometry *g)

    GEOSGeometry *GEOSPointOnSurface_r(GEOSContextHandle_t handle, const GEOSGeometry *g1)

    GEOSGeometry *GEOSGetCentroid_r(GEOSContextHandle_t handle, const GEOSGeometry *g)

    GEOSGeometry *GEOSPolygonize(const GEOSGeometry *const *geoms, unsigned int ngeoms)

    GEOSGeometry *GEOSPolygonizer_getCutEdges(const GEOSGeometry *const *geoms, unsigned int ngeoms)

    GEOSGeometry *GEOSPolygonize_full(const GEOSGeometry *input, GEOSGeometry **cuts, GEOSGeometry **dangles, GEOSGeometry **invalid)

    GEOSGeometry *GEOSLineMerge(const GEOSGeometry *g)

    GEOSGeometry *GEOSSimplify(const GEOSGeometry *g1, double tolerance)

    GEOSGeometry *GEOSTopologyPreserveSimplify(const GEOSGeometry *g1, double tolerance)

    GEOSGeometry *GEOSPolygonize_r(GEOSContextHandle_t handle, const GEOSGeometry *const *geoms, unsigned int ngeoms)

    GEOSGeometry *GEOSPolygonizer_getCutEdges_r(GEOSContextHandle_t handle, const GEOSGeometry *const *geoms, unsigned int ngeoms)

    GEOSGeometry *GEOSPolygonize_full_r(GEOSContextHandle_t handle, const GEOSGeometry *input, GEOSGeometry **cuts, GEOSGeometry **dangles, GEOSGeometry **invalidRings)

    GEOSGeometry *GEOSLineMerge_r(GEOSContextHandle_t handle, const GEOSGeometry *g)

    GEOSGeometry *GEOSSimplify_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, double tolerance)

    GEOSGeometry *GEOSTopologyPreserveSimplify_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, double tolerance)

    GEOSGeometry *GEOSGeom_extractUniquePoints(const GEOSGeometry *g)

    GEOSGeometry *GEOSGeom_extractUniquePoints_r(GEOSContextHandle_t handle, const GEOSGeometry *g)

    GEOSGeometry *GEOSSharedPaths(const GEOSGeometry *g1, const GEOSGeometry *g2)

    GEOSGeometry *GEOSSharedPaths_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, const GEOSGeometry *g2)

    GEOSGeometry *GEOSSnap(const GEOSGeometry *g1, const GEOSGeometry *g2, double tolerance)

    GEOSGeometry *GEOSSnap_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, const GEOSGeometry *g2, double tolerance)

    char GEOSDisjoint(const GEOSGeometry *g1, const GEOSGeometry *g2)

    char GEOSTouches(const GEOSGeometry *g1, const GEOSGeometry *g2)

    char GEOSIntersects(const GEOSGeometry *g1, const GEOSGeometry *g2)

    char GEOSCrosses(const GEOSGeometry *g1, const GEOSGeometry *g2)

    char GEOSWithin(const GEOSGeometry *g1, const GEOSGeometry *g2)

    char GEOSContains(const GEOSGeometry *g1, const GEOSGeometry *g2)

    char GEOSOverlaps(const GEOSGeometry *g1, const GEOSGeometry *g2)

    char GEOSEquals(const GEOSGeometry *g1, const GEOSGeometry *g2)

    char GEOSEqualsExact(const GEOSGeometry *g1, const GEOSGeometry *g2, double tolerance)

    char GEOSCovers(const GEOSGeometry *g1, const GEOSGeometry *g2)

    char GEOSCoveredBy(const GEOSGeometry *g1, const GEOSGeometry *g2)

    char GEOSDisjoint_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, const GEOSGeometry *g2)

    char GEOSTouches_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, const GEOSGeometry *g2)

    char GEOSIntersects_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, const GEOSGeometry *g2)

    char GEOSCrosses_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, const GEOSGeometry *g2)

    char GEOSWithin_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, const GEOSGeometry *g2)

    char GEOSContains_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, const GEOSGeometry *g2)

    char GEOSOverlaps_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, const GEOSGeometry *g2)

    char GEOSEquals_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, const GEOSGeometry *g2)

    char GEOSEqualsExact_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, const GEOSGeometry *g2, double tolerance)

    char GEOSCovers_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, const GEOSGeometry *g2)

    char GEOSCoveredBy_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, const GEOSGeometry *g2)

    const GEOSPreparedGeometry *GEOSPrepare(const GEOSGeometry *g)

    void GEOSPreparedGeom_destroy(const GEOSPreparedGeometry *g)

    char GEOSPreparedContains(const GEOSPreparedGeometry *pg1, const GEOSGeometry *g2)

    char GEOSPreparedContainsProperly(const GEOSPreparedGeometry *pg1, const GEOSGeometry *g2)

    char GEOSPreparedCoveredBy(const GEOSPreparedGeometry *pg1, const GEOSGeometry *g2)

    char GEOSPreparedCovers(const GEOSPreparedGeometry *pg1, const GEOSGeometry *g2)

    char GEOSPreparedCrosses(const GEOSPreparedGeometry *pg1, const GEOSGeometry *g2)

    char GEOSPreparedDisjoint(const GEOSPreparedGeometry *pg1, const GEOSGeometry *g2)

    char GEOSPreparedIntersects(const GEOSPreparedGeometry *pg1, const GEOSGeometry *g2)

    char GEOSPreparedOverlaps(const GEOSPreparedGeometry *pg1, const GEOSGeometry *g2)

    char GEOSPreparedTouches(const GEOSPreparedGeometry *pg1, const GEOSGeometry *g2)

    char GEOSPreparedWithin(const GEOSPreparedGeometry *pg1, const GEOSGeometry *g2)

    const GEOSPreparedGeometry *GEOSPrepare_r(GEOSContextHandle_t handle, const GEOSGeometry *g)

    void GEOSPreparedGeom_destroy_r(GEOSContextHandle_t handle, const GEOSPreparedGeometry *g)

    char GEOSPreparedContains_r(GEOSContextHandle_t handle, const GEOSPreparedGeometry *pg1, const GEOSGeometry *g2)

    char GEOSPreparedContainsProperly_r(GEOSContextHandle_t handle, const GEOSPreparedGeometry *pg1, const GEOSGeometry *g2)

    char GEOSPreparedCoveredBy_r(GEOSContextHandle_t handle, const GEOSPreparedGeometry *pg1, const GEOSGeometry *g2)

    char GEOSPreparedCovers_r(GEOSContextHandle_t handle, const GEOSPreparedGeometry *pg1, const GEOSGeometry *g2)

    char GEOSPreparedCrosses_r(GEOSContextHandle_t handle, const GEOSPreparedGeometry *pg1, const GEOSGeometry *g2)

    char GEOSPreparedDisjoint_r(GEOSContextHandle_t handle, const GEOSPreparedGeometry *pg1, const GEOSGeometry *g2)

    char GEOSPreparedIntersects_r(GEOSContextHandle_t handle, const GEOSPreparedGeometry *pg1, const GEOSGeometry *g2)

    char GEOSPreparedOverlaps_r(GEOSContextHandle_t handle, const GEOSPreparedGeometry *pg1, const GEOSGeometry *g2)

    char GEOSPreparedTouches_r(GEOSContextHandle_t handle, const GEOSPreparedGeometry *pg1, const GEOSGeometry *g2)

    char GEOSPreparedWithin_r(GEOSContextHandle_t handle, const GEOSPreparedGeometry *pg1, const GEOSGeometry *g2)

    GEOSSTRtree *GEOSSTRtree_create(int nodeCapacity)

    void GEOSSTRtree_insert(GEOSSTRtree *tree, const GEOSGeometry *g, void *item)

    void GEOSSTRtree_query(GEOSSTRtree *tree, const GEOSGeometry *g, GEOSQueryCallback callback, void *userdata)

    void GEOSSTRtree_iterate(GEOSSTRtree *tree, GEOSQueryCallback callback, void *userdata)

    char GEOSSTRtree_remove(GEOSSTRtree *tree, const GEOSGeometry *g, void *item)

    void GEOSSTRtree_destroy(GEOSSTRtree *tree)

    GEOSSTRtree *GEOSSTRtree_create_r(GEOSContextHandle_t handle, int nodeCapacity)

    void GEOSSTRtree_insert_r(GEOSContextHandle_t handle, GEOSSTRtree *tree, const GEOSGeometry *g, void *item)

    void GEOSSTRtree_query_r(GEOSContextHandle_t handle, GEOSSTRtree *tree, const GEOSGeometry *g, GEOSQueryCallback callback, void *userdata)

    void GEOSSTRtree_iterate_r(GEOSContextHandle_t handle, GEOSSTRtree *tree, GEOSQueryCallback callback, void *userdata)

    char GEOSSTRtree_remove_r(GEOSContextHandle_t handle, GEOSSTRtree *tree, const GEOSGeometry *g, void *item)

    void GEOSSTRtree_destroy_r(GEOSContextHandle_t handle, GEOSSTRtree *tree)

    char GEOSisEmpty(const GEOSGeometry *g1)

    char GEOSisSimple(const GEOSGeometry *g1)

    char GEOSisRing(const GEOSGeometry *g1)

    char GEOSHasZ(const GEOSGeometry *g1)

    char GEOSisClosed(const GEOSGeometry *g1)

    char GEOSisEmpty_r(GEOSContextHandle_t handle, const GEOSGeometry *g1)

    char GEOSisSimple_r(GEOSContextHandle_t handle, const GEOSGeometry *g1)

    char GEOSisRing_r(GEOSContextHandle_t handle, const GEOSGeometry *g1)

    char GEOSHasZ_r(GEOSContextHandle_t handle, const GEOSGeometry *g1)

    char GEOSisClosed_r(GEOSContextHandle_t handle, const GEOSGeometry *g1)

    cdef enum GEOSRelateBoundaryNodeRules:
        GEOSRELATE_BNR_MOD2
        GEOSRELATE_BNR_OGC
        GEOSRELATE_BNR_ENDPOINT
        GEOSRELATE_BNR_MULTIVALENT_ENDPOINT
        GEOSRELATE_BNR_MONOVALENT_ENDPOINT

    char GEOSRelatePattern(const GEOSGeometry *g1, const GEOSGeometry *g2, const char *pat)

    char GEOSRelatePattern_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, const GEOSGeometry *g2, const char *pat)

    char *GEOSRelate(const GEOSGeometry *g1, const GEOSGeometry *g2)

    char *GEOSRelate_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, const GEOSGeometry *g2)

    char GEOSRelatePatternMatch(const char *mat, const char *pat)

    char GEOSRelatePatternMatch_r(GEOSContextHandle_t handle, const char *mat, const char *pat)

    char *GEOSRelateBoundaryNodeRule(const GEOSGeometry *g1, const GEOSGeometry *g2, int bnr)

    char *GEOSRelateBoundaryNodeRule_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, const GEOSGeometry *g2, int bnr)

    cdef enum GEOSValidFlags:
        GEOSVALID_ALLOW_SELFTOUCHING_RING_FORMING_HOLE

    char GEOSisValid(const GEOSGeometry *g1)

    char GEOSisValid_r(GEOSContextHandle_t handle, const GEOSGeometry *g1)

    char *GEOSisValidReason(const GEOSGeometry *g1)

    char *GEOSisValidReason_r(GEOSContextHandle_t handle, const GEOSGeometry *g1)

    char GEOSisValidDetail(const GEOSGeometry *g, int flags, char **reason, GEOSGeometry **location)

    char GEOSisValidDetail_r(GEOSContextHandle_t handle, const GEOSGeometry *g, int flags, char **reason, GEOSGeometry **location)

    char *GEOSGeomType(const GEOSGeometry *g1)

    char *GEOSGeomType_r(GEOSContextHandle_t handle, const GEOSGeometry *g1)

    int GEOSGeomTypeId(const GEOSGeometry *g1)

    int GEOSGeomTypeId_r(GEOSContextHandle_t handle, const GEOSGeometry *g1)

    int GEOSGetSRID(const GEOSGeometry *g)

    int GEOSGetSRID_r(GEOSContextHandle_t handle, const GEOSGeometry *g)

    void GEOSSetSRID(GEOSGeometry *g, int SRID)

    void GEOSSetSRID_r(GEOSContextHandle_t handle, GEOSGeometry *g, int SRID)

    int GEOSGetNumGeometries(const GEOSGeometry *g)

    int GEOSGetNumGeometries_r(GEOSContextHandle_t handle, const GEOSGeometry *g)

    const GEOSGeometry *GEOSGetGeometryN(const GEOSGeometry *g, int n)

    const GEOSGeometry *GEOSGetGeometryN_r(GEOSContextHandle_t handle, const GEOSGeometry *g, int n)

    int GEOSNormalize(GEOSGeometry *g1)

    int GEOSNormalize_r(GEOSContextHandle_t handle, GEOSGeometry *g1)

    int GEOSGetNumInteriorRings(const GEOSGeometry *g1)

    int GEOSGetNumInteriorRings_r(GEOSContextHandle_t handle, const GEOSGeometry *g1)

    int GEOSGeomGetNumPoints(const GEOSGeometry *g1)

    int GEOSGeomGetNumPoints_r(GEOSContextHandle_t handle, const GEOSGeometry *g1)

    int GEOSGeomGetX(const GEOSGeometry *g1, double *x)

    int GEOSGeomGetY(const GEOSGeometry *g1, double *y)

    int GEOSGeomGetX_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, double *x)

    int GEOSGeomGetY_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, double *y)

    const GEOSGeometry *GEOSGetInteriorRingN(const GEOSGeometry *g, int n)

    const GEOSGeometry *GEOSGetInteriorRingN_r(GEOSContextHandle_t handle, const GEOSGeometry *g, int n)

    const GEOSGeometry *GEOSGetExteriorRing(const GEOSGeometry *g)

    const GEOSGeometry *GEOSGetExteriorRing_r(GEOSContextHandle_t handle, const GEOSGeometry *g)

    int GEOSGetNumCoordinates(const GEOSGeometry *g1)

    int GEOSGetNumCoordinates_r(GEOSContextHandle_t handle, const GEOSGeometry *g1)

    const GEOSCoordSequence *GEOSGeom_getCoordSeq(const GEOSGeometry *g)

    const GEOSCoordSequence *GEOSGeom_getCoordSeq_r(GEOSContextHandle_t handle, const GEOSGeometry *g)

    int GEOSGeom_getDimensions(const GEOSGeometry *g)

    int GEOSGeom_getDimensions_r(GEOSContextHandle_t handle, const GEOSGeometry *g)

    int GEOSGeom_getCoordinateDimension(const GEOSGeometry *g)

    int GEOSGeom_getCoordinateDimension_r(GEOSContextHandle_t handle, const GEOSGeometry *g)

    GEOSGeometry *GEOSGeomGetPointN(const GEOSGeometry *g1, int n)

    GEOSGeometry *GEOSGeomGetStartPoint(const GEOSGeometry *g1)

    GEOSGeometry *GEOSGeomGetEndPoint(const GEOSGeometry *g1)

    GEOSGeometry *GEOSGeomGetPointN_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, int n)

    GEOSGeometry *GEOSGeomGetStartPoint_r(GEOSContextHandle_t handle, const GEOSGeometry *g1)

    GEOSGeometry *GEOSGeomGetEndPoint_r(GEOSContextHandle_t handle, const GEOSGeometry *g1)

    int GEOSArea(const GEOSGeometry *g1, double *area)

    int GEOSLength(const GEOSGeometry *g1, double *length)

    int GEOSDistance(const GEOSGeometry *g1, const GEOSGeometry *g2, double *dist)

    int GEOSHausdorffDistance(const GEOSGeometry *g1, const GEOSGeometry *g2, double *dist)

    int GEOSHausdorffDistanceDensify(const GEOSGeometry *g1, const GEOSGeometry *g2, double densifyFrac, double *dist)

    int GEOSGeomGetLength(const GEOSGeometry *g1, double *length)

    int GEOSArea_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, double *area)

    int GEOSLength_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, double *length)

    int GEOSDistance_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, const GEOSGeometry *g2, double *dist)

    int GEOSHausdorffDistance_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, const GEOSGeometry *g2, double *dist)

    int GEOSHausdorffDistanceDensify_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, const GEOSGeometry *g2, double densifyFrac, double *dist)

    int GEOSGeomGetLength_r(GEOSContextHandle_t handle, const GEOSGeometry *g1, double *length)

    int GEOSOrientationIndex(double Ax, double Ay, double Bx, double By, double Px, double Py)

    int GEOSOrientationIndex_r(GEOSContextHandle_t handle, double Ax, double Ay, double Bx, double By, double Px, double Py)

    cdef struct GEOSWKTReader_t:
        pass

    ctypedef GEOSWKTReader_t GEOSWKTReader

    cdef struct GEOSWKTWriter_t:
        pass

    ctypedef GEOSWKTWriter_t GEOSWKTWriter

    cdef struct GEOSWKBReader_t:
        pass

    ctypedef GEOSWKBReader_t GEOSWKBReader

    cdef struct GEOSWKBWriter_t:
        pass

    ctypedef GEOSWKBWriter_t GEOSWKBWriter

    GEOSWKTReader *GEOSWKTReader_create()

    void GEOSWKTReader_destroy(GEOSWKTReader *reader)

    GEOSGeometry *GEOSWKTReader_read(GEOSWKTReader *reader, const char *wkt)

    GEOSWKTReader *GEOSWKTReader_create_r(GEOSContextHandle_t handle)

    void GEOSWKTReader_destroy_r(GEOSContextHandle_t handle, GEOSWKTReader *reader)

    GEOSGeometry *GEOSWKTReader_read_r(GEOSContextHandle_t handle, GEOSWKTReader *reader, const char *wkt)

    GEOSWKTWriter *GEOSWKTWriter_create()

    void GEOSWKTWriter_destroy(GEOSWKTWriter *writer)

    char *GEOSWKTWriter_write(GEOSWKTWriter *reader, const GEOSGeometry *g)

    void GEOSWKTWriter_setTrim(GEOSWKTWriter *writer, char trim)

    void GEOSWKTWriter_setRoundingPrecision(GEOSWKTWriter *writer, int precision)

    void GEOSWKTWriter_setOutputDimension(GEOSWKTWriter *writer, int dim)

    int GEOSWKTWriter_getOutputDimension(GEOSWKTWriter *writer)

    void GEOSWKTWriter_setOld3D(GEOSWKTWriter *writer, int useOld3D)

    GEOSWKTWriter *GEOSWKTWriter_create_r(GEOSContextHandle_t handle)

    void GEOSWKTWriter_destroy_r(GEOSContextHandle_t handle, GEOSWKTWriter *writer)

    char *GEOSWKTWriter_write_r(GEOSContextHandle_t handle, GEOSWKTWriter *reader, const GEOSGeometry *g)

    void GEOSWKTWriter_setTrim_r(GEOSContextHandle_t handle, GEOSWKTWriter *writer, char trim)

    void GEOSWKTWriter_setRoundingPrecision_r(GEOSContextHandle_t handle, GEOSWKTWriter *writer, int precision)

    void GEOSWKTWriter_setOutputDimension_r(GEOSContextHandle_t handle, GEOSWKTWriter *writer, int dim)

    int GEOSWKTWriter_getOutputDimension_r(GEOSContextHandle_t handle, GEOSWKTWriter *writer)

    void GEOSWKTWriter_setOld3D_r(GEOSContextHandle_t handle, GEOSWKTWriter *writer, int useOld3D)

    GEOSWKBReader *GEOSWKBReader_create()

    void GEOSWKBReader_destroy(GEOSWKBReader *reader)

    GEOSGeometry *GEOSWKBReader_read(GEOSWKBReader *reader, const unsigned char *wkb, int size)

    GEOSGeometry *GEOSWKBReader_readHEX(GEOSWKBReader *reader, const unsigned char *hex, int size)

    GEOSWKBReader *GEOSWKBReader_create_r(GEOSContextHandle_t handle)

    void GEOSWKBReader_destroy_r(GEOSContextHandle_t handle, GEOSWKBReader *reader)

    GEOSGeometry *GEOSWKBReader_read_r(GEOSContextHandle_t handle, GEOSWKBReader *reader, const unsigned char *wkb, int size)

    GEOSGeometry *GEOSWKBReader_readHEX_r(GEOSContextHandle_t handle, GEOSWKBReader *reader, const unsigned char *hex, int size)

    GEOSWKBWriter *GEOSWKBWriter_create()

    void GEOSWKBWriter_destroy(GEOSWKBWriter *writer)

    GEOSWKBWriter *GEOSWKBWriter_create_r(GEOSContextHandle_t handle)

    void GEOSWKBWriter_destroy_r(GEOSContextHandle_t handle, GEOSWKBWriter *writer)

    unsigned char *GEOSWKBWriter_write(GEOSWKBWriter *writer, const GEOSGeometry *g, int *size)

    unsigned char *GEOSWKBWriter_writeHEX(GEOSWKBWriter *writer, const GEOSGeometry *g, int *size)

    unsigned char *GEOSWKBWriter_write_r(GEOSContextHandle_t handle, GEOSWKBWriter *writer, const GEOSGeometry *g, int *size)

    unsigned char *GEOSWKBWriter_writeHEX_r(GEOSContextHandle_t handle, GEOSWKBWriter *writer, const GEOSGeometry *g, int *size)

    int GEOSWKBWriter_getOutputDimension(const GEOSWKBWriter *writer)

    void GEOSWKBWriter_setOutputDimension(GEOSWKBWriter *writer, int newDimension)

    int GEOSWKBWriter_getOutputDimension_r(GEOSContextHandle_t handle, const GEOSWKBWriter *writer)

    void GEOSWKBWriter_setOutputDimension_r(GEOSContextHandle_t handle, GEOSWKBWriter *writer, int newDimension)

    int GEOSWKBWriter_getByteOrder(const GEOSWKBWriter *writer)

    void GEOSWKBWriter_setByteOrder(GEOSWKBWriter *writer, int byteOrder)

    int GEOSWKBWriter_getByteOrder_r(GEOSContextHandle_t handle, const GEOSWKBWriter *writer)

    void GEOSWKBWriter_setByteOrder_r(GEOSContextHandle_t handle, GEOSWKBWriter *writer, int byteOrder)

    char GEOSWKBWriter_getIncludeSRID(const GEOSWKBWriter *writer)

    void GEOSWKBWriter_setIncludeSRID(GEOSWKBWriter *writer, const char writeSRID)

    char GEOSWKBWriter_getIncludeSRID_r(GEOSContextHandle_t handle, const GEOSWKBWriter *writer)

    void GEOSWKBWriter_setIncludeSRID_r(GEOSContextHandle_t handle, GEOSWKBWriter *writer, const char writeSRID)

    void GEOSFree(void *buffer)

    void GEOSFree_r(GEOSContextHandle_t handle, void *buffer)

    line_pnts *Vect_new_line_struct()

    int Vect_append_point(line_pnts *, double, double, double)

    int Vect_append_points(line_pnts *, line_pnts *, int)

    int Vect_line_insert_point(line_pnts *, int, double, double, double)

    int Vect_line_delete_point(line_pnts *, int)

    int Vect_line_get_point(line_pnts *, int, double *, double *, double *)

    int Vect_get_num_line_points(line_pnts *)

    int Vect_line_prune(line_pnts *)

    int Vect_line_prune_thresh(line_pnts *, double)

    void Vect_line_reverse(line_pnts *)

    int Vect_copy_xyz_to_pnts(line_pnts *, const double *, const double *, const double *, int)

    int Vect_copy_pnts_to_xyz(line_pnts *, double *, double *, double *, int *)

    void Vect_reset_line(line_pnts *)

    void Vect_destroy_line_struct(line_pnts *)

    int Vect_point_on_line(line_pnts *, double, double *, double *, double *, double *, double *)

    int Vect_line_segment(line_pnts *, double, double, line_pnts *)

    double Vect_line_length(line_pnts *)

    double Vect_line_geodesic_length(line_pnts *)

    int Vect_line_distance(line_pnts *, double, double, double, int, double *, double *, double *, double *, double *, double *)

    int Vect_line_geodesic_distance(line_pnts *, double, double, double, int, double *, double *, double *, double *, double *, double *)

    void Vect_line_box(line_pnts *, bound_box *)

    void Vect_line_parallel(line_pnts *, double, double, int, line_pnts *)

    void Vect_line_parallel2(line_pnts *, double, double, double, int, int, double, line_pnts *)

    void Vect_line_buffer(line_pnts *, double, double, line_pnts *)

    void Vect_line_buffer2(line_pnts *, double, double, double, int, int, double, line_pnts **, line_pnts ***, int *)

    void Vect_area_buffer2(Map_info *, int, double, double, double, int, int, double, line_pnts **, line_pnts ***, int *)

    void Vect_point_buffer2(double, double, double, double, double, int, double, line_pnts **)

    line_cats *Vect_new_cats_struct()

    int Vect_cat_set(line_cats *, int, int)

    int Vect_cat_get(line_cats *, int, int *)

    int Vect_cat_del(line_cats *, int)

    int Vect_field_cat_del(line_cats *, int, int)

    int Vect_field_cat_get(line_cats *, int, ilist *)

    int Vect_cat_in_array(int, const int *, int)

    int Vect_reset_cats(line_cats *)

    void Vect_destroy_cats_struct(line_cats *)

    int Vect_get_area_cats(Map_info *, int, line_cats *)

    int Vect_get_area_cat(Map_info *, int, int)

    int Vect_get_line_cat(Map_info *, int, int)

    cat_list *Vect_cats_set_constraint(Map_info *, int, char *, char *)

    int Vect_cats_in_constraint(line_cats *, int, cat_list *)

    cat_list *Vect_new_cat_list()

    int Vect_str_to_cat_list(const char *, cat_list *)

    int Vect_array_to_cat_list(const int *, int, cat_list *)

    int Vect_cat_in_cat_list(int, cat_list *)

    void Vect_destroy_cat_list(cat_list *)

    varray *Vect_new_varray(int)

    int Vect_set_varray_from_cat_string(Map_info *, int, const char *, int, int, varray *)

    int Vect_set_varray_from_cat_list(Map_info *, int, cat_list *, int, int, varray *)

    int Vect_set_varray_from_db(Map_info *, int, const char *, int, int, varray *)

    dblinks *Vect_new_dblinks_struct()

    void Vect_reset_dblinks(dblinks *)

    int Vect_add_dblink(dblinks *, int, const char *, const char *, const char *, const char *, const char *)

    int Vect_check_dblink(dblinks *, int, const char *)

    int Vect_map_add_dblink(Map_info *, int, const char *, const char *, const char *, const char *, const char *)

    int Vect_map_del_dblink(Map_info *, int)

    void Vect_copy_map_dblinks(Map_info *, Map_info *, int)

    int Vect_map_check_dblink(Map_info *, int, const char *)

    int Vect_read_dblinks(Map_info *)

    int Vect_write_dblinks(Map_info *)

    field_info *Vect_default_field_info(Map_info *, int, const char *, int)

    field_info *Vect_get_dblink(Map_info *, int)

    field_info *Vect_get_field(Map_info *, int)

    field_info *Vect_get_field_by_name(Map_info *, const char *)

    field_info *Vect_get_field2(Map_info *, const char *)

    int Vect_get_field_number(Map_info *, const char *)

    void Vect_set_db_updated(Map_info *)

    const char *Vect_get_column_names(Map_info *, int)

    const char *Vect_get_column_types(Map_info *, int)

    const char *Vect_get_column_names_types(Map_info *, int)

    ilist *Vect_new_list()

    int Vect_list_append(ilist *, int)

    int Vect_list_append_list(ilist *, ilist *)

    int Vect_list_delete(ilist *, int)

    int Vect_list_delete_list(ilist *, ilist *)

    int Vect_val_in_list(ilist *, int)

    int Vect_reset_list(ilist *)

    void Vect_destroy_list(ilist *)

    boxlist *Vect_new_boxlist(int)

    int Vect_boxlist_append(boxlist *, int, bound_box *)

    int Vect_boxlist_append_boxlist(boxlist *, boxlist *)

    int Vect_boxlist_delete(boxlist *, int)

    int Vect_boxlist_delete_boxlist(boxlist *, boxlist *)

    int Vect_val_in_boxlist(boxlist *, int)

    int Vect_reset_boxlist(boxlist *)

    void Vect_destroy_boxlist(boxlist *)

    int Vect_point_in_box(double, double, double, bound_box *)

    int Vect_box_overlap(bound_box *, bound_box *)

    int Vect_box_copy(bound_box *, bound_box *)

    int Vect_box_extend(bound_box *, bound_box *)

    int Vect_box_clip(double *, double *, double *, double *, bound_box *)

    int Vect_region_box(Cell_head *, bound_box *)

    int Vect_cidx_get_num_fields(Map_info *)

    int Vect_cidx_get_field_number(Map_info *, int)

    int Vect_cidx_get_field_index(Map_info *, int)

    int Vect_cidx_get_num_unique_cats_by_index(Map_info *, int)

    int Vect_cidx_get_num_cats_by_index(Map_info *, int)

    int Vect_cidx_get_num_types_by_index(Map_info *, int)

    int Vect_cidx_get_type_count_by_index(Map_info *, int, int, int *, int *)

    int Vect_cidx_get_type_count(Map_info *, int, int)

    int Vect_cidx_get_cat_by_index(Map_info *, int, int, int *, int *, int *)

    int Vect_cidx_find_next(Map_info *, int, int, int, int, int *, int *)

    void Vect_cidx_find_all(Map_info *, int, int, int, ilist *)

    int Vect_cidx_dump(Map_info *, FILE *)

    int Vect_cidx_save(Map_info *)

    int Vect_cidx_open(Map_info *, int)

    int Vect_read_header(Map_info *)

    int Vect_write_header(Map_info *)

    const char *Vect_get_name(Map_info *)

    const char *Vect_get_mapset(Map_info *)

    const char *Vect_get_full_name(Map_info *)

    const char *Vect_get_finfo_dsn_name(Map_info *)

    char *Vect_get_finfo_layer_name(Map_info *)

    const char *Vect_get_finfo_format_info(Map_info *)

    const char *Vect_get_finfo_geometry_type(Map_info *)

    Format_info *Vect_get_finfo(Map_info *)

    int Vect_is_3d(Map_info *)

    int Vect_set_organization(Map_info *, const char *)

    const char *Vect_get_organization(Map_info *)

    int Vect_set_date(Map_info *, const char *)

    const char *Vect_get_date(Map_info *)

    int Vect_set_person(Map_info *, const char *)

    const char *Vect_get_person(Map_info *)

    int Vect_set_map_name(Map_info *, const char *)

    const char *Vect_get_map_name(Map_info *)

    int Vect_set_map_date(Map_info *, const char *)

    const char *Vect_get_map_date(Map_info *)

    int Vect_set_comment(Map_info *, const char *)

    const char *Vect_get_comment(Map_info *)

    int Vect_set_scale(Map_info *, int)

    int Vect_get_scale(Map_info *)

    int Vect_set_zone(Map_info *, int)

    int Vect_get_zone(Map_info *)

    int Vect_get_proj(Map_info *)

    int Vect_set_proj(Map_info *, int)

    const char *Vect_get_proj_name(Map_info *)

    int Vect_set_thresh(Map_info *, double)

    double Vect_get_thresh(Map_info *)

    int Vect_get_constraint_box(Map_info *, bound_box *)

    int Vect_level(Map_info *)

    int Vect_get_line_type(Map_info *, int)

    plus_t Vect_get_num_nodes(Map_info *)

    plus_t Vect_get_num_primitives(Map_info *, int)

    plus_t Vect_get_num_lines(Map_info *)

    plus_t Vect_get_num_areas(Map_info *)

    plus_t Vect_get_num_faces(Map_info *)

    plus_t Vect_get_num_kernels(Map_info *)

    plus_t Vect_get_num_volumes(Map_info *)

    plus_t Vect_get_num_islands(Map_info *)

    plus_t Vect_get_num_holes(Map_info *)

    int Vect_get_line_box(Map_info *, int, bound_box *)

    int Vect_get_area_box(Map_info *, int, bound_box *)

    int Vect_get_isle_box(Map_info *, int, bound_box *)

    int Vect_get_map_box(Map_info *, bound_box *)

    int V__map_overlap(Map_info *, double, double, double, double)

    void Vect_set_release_support(Map_info *)

    void Vect_set_category_index_update(Map_info *)

    int Vect_check_input_output_name(const char *, const char *, int)

    int Vect_legal_filename(const char *)

    int Vect_set_open_level(int)

    int Vect_open_old(Map_info *, const char *, const char *)

    int Vect_open_old2(Map_info *, const char *, const char *, const char *)

    int Vect_open_old_head(Map_info *, const char *, const char *)

    int Vect_open_old_head2(Map_info *, const char *, const char *, const char *)

    int Vect_open_new(Map_info *, const char *, int)

    int Vect_open_tmp_new(Map_info *, const char *, int)

    int Vect_open_update(Map_info *, const char *, const char *)

    int Vect_open_update2(Map_info *, const char *, const char *, const char *)

    int Vect_open_update_head(Map_info *, const char *, const char *)

    int Vect_copy_head_data(Map_info *, Map_info *)

    int Vect_build(Map_info *)

    int Vect_topo_check(Map_info *, Map_info *)

    int Vect_get_built(Map_info *)

    int Vect_build_partial(Map_info *, int)

    int Vect_set_constraint_region(Map_info *, double, double, double, double, double, double)

    int Vect_set_constraint_type(Map_info *, int)

    int Vect_set_constraint_field(Map_info *, int)

    void Vect_remove_constraints(Map_info *)

    int Vect_rewind(Map_info *)

    int Vect_close(Map_info *)

    void Vect_set_error_handler_io(Map_info *, Map_info *)

    int Vect_get_next_line_id(Map_info *)

    int Vect_read_next_line(Map_info *, line_pnts *, line_cats *)

    off_t Vect_write_line(Map_info *, int, line_pnts *, line_cats *)

    int Vect_get_num_dblinks(Map_info *)

    int Vect_read_line(Map_info *, line_pnts *, line_cats *, int)

    off_t Vect_rewrite_line(Map_info *, int, int, line_pnts *, line_cats *)

    int Vect_delete_line(Map_info *, int)

    int Vect_restore_line(Map_info *, int, off_t)

    int Vect_line_alive(Map_info *, int)

    int Vect_node_alive(Map_info *, int)

    int Vect_area_alive(Map_info *, int)

    int Vect_isle_alive(Map_info *, int)

    int Vect_get_line_nodes(Map_info *, int, int *, int *)

    int Vect_get_line_areas(Map_info *, int, int *, int *)

    off_t Vect_get_line_offset(Map_info *, int)

    int Vect_get_node_coor(Map_info *, int, double *, double *, double *)

    int Vect_get_node_n_lines(Map_info *, int)

    int Vect_get_node_line(Map_info *, int, int)

    float Vect_get_node_line_angle(Map_info *, int, int)

    double Vect_area_perimeter(line_pnts *)

    int Vect_get_area_points(Map_info *, int, line_pnts *)

    int Vect_get_area_centroid(Map_info *, int)

    int Vect_get_area_num_isles(Map_info *, int)

    int Vect_get_area_isle(Map_info *, int, int)

    double Vect_get_area_area(Map_info *, int)

    int Vect_get_area_boundaries(Map_info *, int, ilist *)

    int Vect_get_isle_points(Map_info *, int, line_pnts *)

    int Vect_get_isle_area(Map_info *, int)

    int Vect_get_isle_boundaries(Map_info *, int, ilist *)

    int Vect_get_centroid_area(Map_info *, int)

    int Vect_get_num_updated_lines(Map_info *)

    int Vect_get_updated_line(Map_info *, int)

    off_t Vect_get_updated_line_offset(Map_info *, int)

    int Vect_get_num_updated_nodes(Map_info *)

    int Vect_get_updated_node(Map_info *, int)

    void Vect_set_updated(Map_info *, int)

    void Vect_reset_updated(Map_info *)

    int Vect_hist_command(Map_info *)

    int Vect_hist_write(Map_info *, const char *)

    int Vect_hist_copy(Map_info *, Map_info *)

    void Vect_hist_rewind(Map_info *)

    char *Vect_hist_read(char *, int, Map_info *)

    int Vect_select_lines_by_box(Map_info *, bound_box *, int, boxlist *)

    int Vect_select_areas_by_box(Map_info *, bound_box *, boxlist *)

    int Vect_select_isles_by_box(Map_info *, bound_box *, boxlist *)

    int Vect_select_nodes_by_box(Map_info *, bound_box *, ilist *)

    int Vect_find_node(Map_info *, double, double, double, double, int)

    int Vect_find_line(Map_info *, double, double, double, int, double, int, int)

    int Vect_find_line_list(Map_info *, double, double, double, int, double, int, ilist *, ilist *)

    int Vect_find_area(Map_info *, double, double)

    int Vect_find_island(Map_info *, double, double)

    int Vect_select_lines_by_polygon(Map_info *, line_pnts *, int, line_pnts **, int, ilist *)

    int Vect_select_areas_by_polygon(Map_info *, line_pnts *, int, line_pnts **, ilist *)

    int Vect_tin_get_z(Map_info *, double, double, double *, double *, double *)

    int Vect_find_poly_centroid(line_pnts *, double *, double *)

    int Vect__intersect_line_with_poly(line_pnts *, double, line_pnts *)

    int Vect_get_point_in_area(Map_info *, int, double *, double *)

    int Vect_get_point_in_poly(line_pnts *, double *, double *)

    int Vect_get_point_in_poly_isl(line_pnts *, line_pnts **, int, double *, double *)

    int Vect_point_in_area(double, double, Map_info *, int, bound_box *)

    int Vect_point_in_area_outer_ring(double, double, Map_info *, int, bound_box *)

    int Vect_point_in_island(double, double, Map_info *, int, bound_box *)

    int Vect_point_in_poly(double, double, line_pnts *)

    void Vect_break_lines(Map_info *, int, Map_info *)

    int Vect_break_lines_list(Map_info *, ilist *, ilist *, int, Map_info *)

    int Vect_check_line_breaks(Map_info *, int, Map_info *)

    int Vect_check_line_breaks_list(Map_info *, ilist *, ilist *, int, Map_info *)

    int Vect_merge_lines(Map_info *, int, int *, Map_info *)

    void Vect_break_polygons(Map_info *, int, Map_info *)

    void Vect_remove_duplicates(Map_info *, int, Map_info *)

    int Vect_line_check_duplicate(line_pnts *, line_pnts *, int)

    void Vect_snap_lines(Map_info *, int, double, Map_info *)

    void Vect_snap_lines_list(Map_info *, ilist *, double, Map_info *)

    int Vect_snap_line(Map_info *, ilist *, line_pnts *, double, int, int *, int *)

    void Vect_remove_dangles(Map_info *, int, double, Map_info *)

    void Vect_chtype_dangles(Map_info *, double, Map_info *)

    void Vect_select_dangles(Map_info *, int, double, ilist *)

    void Vect_remove_bridges(Map_info *, Map_info *, int *, int *)

    void Vect_chtype_bridges(Map_info *, Map_info *, int *, int *)

    int Vect_remove_small_areas(Map_info *, double, Map_info *, double *)

    int Vect_clean_small_angles_at_nodes(Map_info *, int, Map_info *)

    int Vect_overlay_str_to_operator(const char *)

    int Vect_overlay(Map_info *, int, ilist *, ilist *, Map_info *, int, ilist *, ilist *, int, Map_info *)

    int Vect_overlay_and(Map_info *, int, ilist *, ilist *, Map_info *, int, ilist *, ilist *, Map_info *)

    void Vect_graph_init(dglGraph_s *, int)

    void Vect_graph_build(dglGraph_s *)

    void Vect_graph_add_edge(dglGraph_s *, int, int, double, int)

    void Vect_graph_set_node_costs(dglGraph_s *, int, double)

    int Vect_graph_shortest_path(dglGraph_s *, int, int, ilist *, double *)

    int Vect_net_build_graph(Map_info *, int, int, int, const char *, const char *, const char *, int, int)

    int Vect_net_shortest_path(Map_info *, int, int, ilist *, double *)

    int Vect_net_get_line_cost(Map_info *, int, int, double *)

    int Vect_net_get_node_cost(Map_info *, int, double *)

    int Vect_net_nearest_nodes(Map_info *, double, double, double, int, double, int *, int *, int *, double *, double *, line_pnts *, line_pnts *, double *)

    int Vect_net_shortest_path_coor(Map_info *, double, double, double, double, double, double, double, double, double *, line_pnts *, ilist *, line_pnts *, line_pnts *, double *, double *)

    int Vect_net_shortest_path_coor2(Map_info *, double, double, double, double, double, double, double, double, double *, line_pnts *, ilist *, ilist *, line_pnts *, line_pnts *, double *, double *)

    int Vect_topo_dump(Map_info *, FILE *)

    double Vect_points_distance(double, double, double, double, double, double, int)

    int Vect_option_to_types(Option *)

    int Vect_copy_map_lines(Map_info *, Map_info *)

    int Vect_copy_map_lines_field(Map_info *, int, Map_info *)

    int Vect_copy(const char *, const char *, const char *)

    int Vect_rename(const char *, const char *)

    int Vect_copy_table(Map_info *, Map_info *, int, int, const char *, int)

    int Vect_copy_table_by_cats(Map_info *, Map_info *, int, int, const char *, int, int *, int)

    int Vect_copy_tables(Map_info *, Map_info *, int)

    int Vect_delete(const char *)

    int Vect_segment_intersection(double, double, double, double, double, double, double, double, double, double, double, double, double *, double *, double *, double *, double *, double *, int)

    int Vect_line_intersection(line_pnts *, line_pnts *, bound_box *, bound_box *, line_pnts ***, line_pnts ***, int *, int *, int)

    int Vect_line_check_intersection(line_pnts *, line_pnts *, int)

    int Vect_line_get_intersections(line_pnts *, line_pnts *, line_pnts *, int)

    char *Vect_subst_var(const char *, Map_info *)

    void Vect_spatial_index_init(spatial_index *, int)

    void Vect_spatial_index_destroy(spatial_index *)

    void Vect_spatial_index_add_item(spatial_index *, int, bound_box *)

    void Vect_spatial_index_del_item(spatial_index *, int, bound_box *)

    int Vect_spatial_index_select(spatial_index *, bound_box *, ilist *)

    int Vect_read_ascii(FILE *, Map_info *)

    int Vect_read_ascii_head(FILE *, Map_info *)

    int Vect_write_ascii(FILE *, FILE *, Map_info *, int, int, int, char *, int, int, int, cat_list *, const char *, const char **, int)

    void Vect_write_ascii_head(FILE *, Map_info *)

    SF_FeatureType Vect_sfa_get_line_type(line_pnts *, int, int)

    int Vect_sfa_get_type(SF_FeatureType)

    int Vect_sfa_check_line_type(line_pnts *, int, SF_FeatureType, int)

    int Vect_sfa_line_dimension(int)

    char *Vect_sfa_line_geometry_type(line_pnts *, int)

    int Vect_sfa_line_astext(line_pnts *, int, int, int, FILE *)

    int Vect_sfa_is_line_simple(line_pnts *, int, int)

    int Vect_sfa_is_line_closed(line_pnts *, int, int)

    int Vect_print_header(Map_info *)

    void Vect__init_head(Map_info *)

    int Vect_coor_info(Map_info *, Coor_info *)

    const char *Vect_maptype_info(Map_info *)

    int Vect_maptype(Map_info *)

    int Vect_open_topo(Map_info *, int)

    int Vect_open_topo_pg(Map_info *, int)

    int Vect_save_topo(Map_info *)

    int Vect_open_sidx(Map_info *, int)

    int Vect_save_sidx(Map_info *)

    int Vect_sidx_dump(Map_info *, FILE *)

    int Vect_build_sidx_from_topo(Map_info *)

    int Vect_build_sidx(Map_info *)

    int Vect_open_fidx(Map_info *, Format_info_offset *)

    int Vect_save_fidx(Map_info *, Format_info_offset *)

    int Vect_fidx_dump(Map_info *, FILE *)

    int Vect_save_frmt(Map_info *)

    int Vect__write_head(Map_info *)

    int Vect__read_head(Map_info *)

    int V1_open_old_nat(Map_info *, int)

    int V1_open_old_ogr(Map_info *, int)

    int V1_open_old_pg(Map_info *, int)

    int V2_open_old_ogr(Map_info *)

    int V2_open_old_pg(Map_info *)

    int V1_open_new_nat(Map_info *, const char *, int)

    int V1_open_new_ogr(Map_info *, const char *, int)

    int V1_open_new_pg(Map_info *, const char *, int)

    int V2_open_new_ogr(Map_info *, int)

    int V2_open_new_pg(Map_info *, int)

    int V1_rewind_nat(Map_info *)

    int V1_rewind_ogr(Map_info *)

    int V1_rewind_pg(Map_info *)

    int V2_rewind_nat(Map_info *)

    int V2_rewind_ogr(Map_info *)

    int V2_rewind_pg(Map_info *)

    int V1_close_nat(Map_info *)

    int V1_close_ogr(Map_info *)

    int V1_close_pg(Map_info *)

    int V2_close_ogr(Map_info *)

    int V2_close_pg(Map_info *)

    int V1_read_line_nat(Map_info *, line_pnts *, line_cats *, off_t)

    int V1_read_line_ogr(Map_info *, line_pnts *, line_cats *, off_t)

    int V1_read_line_pg(Map_info *, line_pnts *, line_cats *, off_t)

    int V2_read_line_nat(Map_info *, line_pnts *, line_cats *, int)

    int V2_read_line_sfa(Map_info *, line_pnts *, line_cats *, int)

    int V2_read_line_pg(Map_info *, line_pnts *, line_cats *, int)

    int V1_read_next_line_nat(Map_info *, line_pnts *, line_cats *)

    int V1_read_next_line_ogr(Map_info *, line_pnts *, line_cats *)

    int V1_read_next_line_pg(Map_info *, line_pnts *, line_cats *)

    int V2_read_next_line_nat(Map_info *, line_pnts *, line_cats *)

    int V2_read_next_line_ogr(Map_info *, line_pnts *, line_cats *)

    int V2_read_next_line_pg(Map_info *, line_pnts *, line_cats *)

    int V1_delete_line_nat(Map_info *, off_t)

    int V1_delete_line_ogr(Map_info *, off_t)

    int V1_delete_line_pg(Map_info *, off_t)

    int V2_delete_line_nat(Map_info *, int)

    int V2_delete_line_sfa(Map_info *, int)

    int V2_delete_line_pg(Map_info *, int)

    int V1_restore_line_nat(Map_info *, off_t)

    int V2_restore_line_nat(Map_info *, int, off_t)

    off_t V1_write_line_nat(Map_info *, int, line_pnts *, line_cats *)

    off_t V1_write_line_ogr(Map_info *, int, line_pnts *, line_cats *)

    off_t V1_write_line_pg(Map_info *, int, line_pnts *, line_cats *)

    off_t V2_write_line_nat(Map_info *, int, line_pnts *, line_cats *)

    off_t V2_write_line_sfa(Map_info *, int, line_pnts *, line_cats *)

    off_t V2_write_line_pg(Map_info *, int, line_pnts *, line_cats *)

    off_t V1_rewrite_line_nat(Map_info *, int, int, off_t, line_pnts *, line_cats *)

    off_t V1_rewrite_line_ogr(Map_info *, int, int, off_t, line_pnts *, line_cats *)

    off_t V1_rewrite_line_pg(Map_info *, int, int, off_t, line_pnts *, line_cats *)

    off_t V2_rewrite_line_nat(Map_info *, int, int, off_t, line_pnts *, line_cats *)

    off_t V2_rewrite_line_sfa(Map_info *, int, int, off_t, line_pnts *, line_cats *)

    off_t V2_rewrite_line_pg(Map_info *, int, int, off_t, line_pnts *, line_cats *)

    int Vect_build_nat(Map_info *, int)

    void Vect__build_downgrade(Map_info *, int)

    int Vect__build_sfa(Map_info *, int)

    int Vect_build_ogr(Map_info *, int)

    int Vect_build_pg(Map_info *, int)

    int Vect_build_line_area(Map_info *, int, int)

    int Vect_isle_find_area(Map_info *, int)

    int Vect_attach_isle(Map_info *, int)

    int Vect_attach_isles(Map_info *, bound_box *)

    int Vect_attach_centroids(Map_info *, bound_box *)

    GEOSGeometry *Vect_read_line_geos(Map_info *, int, int *)

    GEOSGeometry *Vect_line_to_geos(Map_info *, line_pnts *, int)

    GEOSGeometry *Vect_read_area_geos(Map_info *, int)

    GEOSCoordSequence *Vect_get_area_points_geos(Map_info *, int)

    GEOSCoordSequence *Vect_get_isle_points_geos(Map_info *, int)

    int Vect_read_colors(const char *, const char *, Colors *)

    int Vect_remove_colors(const char *, const char *)

    void Vect_write_colors(const char *, const char *, Colors *)

    int RTreeSearch2(RTree *, RTree_Rect *, ilist *)


